[
    {
        "label": "set",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "NamedTuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "cast",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypedDict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "IO",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_ORI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEADING",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NO_ROT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_ROT_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SAME",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_ORI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TRAILING",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TURNS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "FLOAT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ORI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TURNS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BOX",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DIAMOND",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GRID_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ALPHA",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BETA",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CODEX_PICTOGRAPH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEAD_STATE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEADING",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TRAILING",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CCW_HANDPATH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CW_HANDPATH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DOWN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEFT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RIGHT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "UP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE_ICON",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE_ICON",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LETTER_BTN_ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DIAMOND",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STAFF",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPTION",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "special_placements_parent_directory",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "special_placements_parent_directory",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type5",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type6",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type2",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NONRADIAL",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RADIAL",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NO_ROT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NO_ROT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SAME",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DIAMOND",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTHEAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTHEAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTHWEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTHWEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NONRADIAL",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RADIAL",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEFT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RIGHT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "UP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DOWN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEFT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RIGHT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "UP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DOWN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type5",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type6",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEAD_STATE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NO_ROT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SAME",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CODEX_PICTOGRAPH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPTION",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_END_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_PROP_ROT_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_START_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LETTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_END_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_PROP_ROT_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_START_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEAD_STATE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type2",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type3",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SWAP_ICON",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_ROT_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SAME",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type4",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type5",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type6",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SWAP_ICON",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPP",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_ROT_DIR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SAME",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEAD_STATE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEAD_STATE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type1",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_END_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_START_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LETTER",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_END_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_START_LOC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_POS",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "positions_map",
        "importPath": "data.positions_map",
        "description": "data.positions_map",
        "isExtraImport": true,
        "detail": "data.positions_map",
        "documentation": {}
    },
    {
        "label": "get_specific_start_end_pos",
        "importPath": "data.positions_map",
        "description": "data.positions_map",
        "isExtraImport": true,
        "detail": "data.positions_map",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "ShiftHandpaths",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "SpecificPositions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "SpecificPositions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Positions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "StartEndLocationTuple",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Directions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Handpaths",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Handpaths",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LeadStates",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Axes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Axes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "GridModes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypeCombinations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Positions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "SpecificPositions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "VtgDirections",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "RotationAngles",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "RotationAngles",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "dict",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "list",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "OrientationTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Directions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Directions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Directions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Directions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "OpenCloseStates",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "SpecificPositions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "VtgDirections",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "VtgTimings",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionAttributes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "TYPE_CHECKING",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "AdjustmentNums",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "AdjustmentStrs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "VtgDirections",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LeadStates",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "VtgDirections",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LeadStates",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionAttributes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "SpecificPositions",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Type1Generator",
        "importPath": "Type1_generator",
        "description": "Type1_generator",
        "isExtraImport": true,
        "detail": "Type1_generator",
        "documentation": {}
    },
    {
        "label": "Type2Generator",
        "importPath": "Type2_generator",
        "description": "Type2_generator",
        "isExtraImport": true,
        "detail": "Type2_generator",
        "documentation": {}
    },
    {
        "label": "Type3Generator",
        "importPath": "Type3_generator",
        "description": "Type3_generator",
        "isExtraImport": true,
        "detail": "Type3_generator",
        "documentation": {}
    },
    {
        "label": "Type4Generator",
        "importPath": "Type4_generator",
        "description": "Type4_generator",
        "isExtraImport": true,
        "detail": "Type4_generator",
        "documentation": {}
    },
    {
        "label": "Type5Generator",
        "importPath": "Type5_generator",
        "description": "Type5_generator",
        "isExtraImport": true,
        "detail": "Type5_generator",
        "documentation": {}
    },
    {
        "label": "Type6Generator",
        "importPath": "Type6_generator",
        "description": "Type6_generator",
        "isExtraImport": true,
        "detail": "Type6_generator",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type2_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type3_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type4_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type5_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type6_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type3_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "alpha_ending_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "alpha_starting_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "beta_ending_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "beta_starting_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "gamma_ending_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "gamma_starting_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "non_hybrid_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_hybrid_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_non_hybrid_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type3_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type4_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type5_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type6_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type2_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "dash_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type5_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type5_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "pro_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "anti_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "dash_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "static_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "BaseDataFrameGenerator",
        "importPath": "utilities.dataframe_generators.base_dataframe_generator",
        "description": "utilities.dataframe_generators.base_dataframe_generator",
        "isExtraImport": true,
        "detail": "utilities.dataframe_generators.base_dataframe_generator",
        "documentation": {}
    },
    {
        "label": "BaseDataFrameGenerator",
        "importPath": "utilities.dataframe_generators.base_dataframe_generator",
        "description": "utilities.dataframe_generators.base_dataframe_generator",
        "isExtraImport": true,
        "detail": "utilities.dataframe_generators.base_dataframe_generator",
        "documentation": {}
    },
    {
        "label": "BaseDataFrameGenerator",
        "importPath": "utilities.dataframe_generators.base_dataframe_generator",
        "description": "utilities.dataframe_generators.base_dataframe_generator",
        "isExtraImport": true,
        "detail": "utilities.dataframe_generators.base_dataframe_generator",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "Motion",
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "isExtraImport": true,
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "QTransform",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QGuiApplication",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPen",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QGuiApplication",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QTransform",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QTransform",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QTransform",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPalette",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QKeyEvent",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QResizeEvent",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QKeyEvent",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QAction",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QImage",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QMouseEvent",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt6.QtGui",
        "description": "PyQt6.QtGui",
        "isExtraImport": true,
        "detail": "PyQt6.QtGui",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QEvent",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QRect",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QRectF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSize",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPoint",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPoint",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPoint",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSize",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSize",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSize",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QEvent",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QByteArray",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QBuffer",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPointF",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPoint",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTimer",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QObject",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QSize",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt6.QtCore",
        "description": "PyQt6.QtCore",
        "isExtraImport": true,
        "detail": "PyQt6.QtCore",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneWheelEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLineEdit",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsView",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsScene",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFileDialog",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsRectItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGridLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsScene",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsView",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsView",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTabWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMenuBar",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGroupBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFormLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSlider",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGroupBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFormLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsView",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsScene",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsPixmapItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsView",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsScene",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsPixmapItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSceneMouseEvent",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTabWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGridLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGroupBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGridLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QScrollArea",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsView",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGridLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsView",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSpacerItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSpacerItem",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSlider",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "ArrowMirrorHandler",
        "importPath": "objects.arrow.managers.arrow_mirror_handler",
        "description": "objects.arrow.managers.arrow_mirror_handler",
        "isExtraImport": true,
        "detail": "objects.arrow.managers.arrow_mirror_handler",
        "documentation": {}
    },
    {
        "label": "ArrowMouseEventHandler",
        "importPath": "objects.arrow.managers.arrow_mouse_event_handler",
        "description": "objects.arrow.managers.arrow_mouse_event_handler",
        "isExtraImport": true,
        "detail": "objects.arrow.managers.arrow_mouse_event_handler",
        "documentation": {}
    },
    {
        "label": "ArrowUpdater",
        "importPath": "objects.arrow.managers.arrow_updater",
        "description": "objects.arrow.managers.arrow_updater",
        "isExtraImport": true,
        "detail": "objects.arrow.managers.arrow_updater",
        "documentation": {}
    },
    {
        "label": "ArrowAttrHandler",
        "importPath": "objects.arrow.managers.arrow_attr_handler",
        "description": "objects.arrow.managers.arrow_attr_handler",
        "isExtraImport": true,
        "detail": "objects.arrow.managers.arrow_attr_handler",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "QSvgRenderer",
        "importPath": "PyQt6.QtSvg",
        "description": "PyQt6.QtSvg",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvg",
        "documentation": {}
    },
    {
        "label": "QSvgRenderer",
        "importPath": "PyQt6.QtSvg",
        "description": "PyQt6.QtSvg",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvg",
        "documentation": {}
    },
    {
        "label": "QSvgRenderer",
        "importPath": "PyQt6.QtSvg",
        "description": "PyQt6.QtSvg",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvg",
        "documentation": {}
    },
    {
        "label": "QSvgRenderer",
        "importPath": "PyQt6.QtSvg",
        "description": "PyQt6.QtSvg",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvg",
        "documentation": {}
    },
    {
        "label": "QSvgRenderer",
        "importPath": "PyQt6.QtSvg",
        "description": "PyQt6.QtSvg",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvg",
        "documentation": {}
    },
    {
        "label": "QSvgRenderer",
        "importPath": "PyQt6.QtSvg",
        "description": "PyQt6.QtSvg",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvg",
        "documentation": {}
    },
    {
        "label": "QGraphicsSvgItem",
        "importPath": "PyQt6.QtSvgWidgets",
        "description": "PyQt6.QtSvgWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvgWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSvgItem",
        "importPath": "PyQt6.QtSvgWidgets",
        "description": "PyQt6.QtSvgWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvgWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSvgItem",
        "importPath": "PyQt6.QtSvgWidgets",
        "description": "PyQt6.QtSvgWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvgWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSvgItem",
        "importPath": "PyQt6.QtSvgWidgets",
        "description": "PyQt6.QtSvgWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvgWidgets",
        "documentation": {}
    },
    {
        "label": "QGraphicsSvgItem",
        "importPath": "PyQt6.QtSvgWidgets",
        "description": "PyQt6.QtSvgWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtSvgWidgets",
        "documentation": {}
    },
    {
        "label": "SvgManager",
        "importPath": "objects.graphical_object.svg_manager",
        "description": "objects.graphical_object.svg_manager",
        "isExtraImport": true,
        "detail": "objects.graphical_object.svg_manager",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Turns",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Locations",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Colors",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "strictly_placed_props",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypeslist",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "strictly_placed_props",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "big_unilateral_prop_types",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "small_unilateral_prop_types",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "small_bilateral_prop_types",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "big_bilateral_prop_types",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "isExtraImport": true,
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "FilterTab",
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "isExtraImport": true,
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "documentation": {}
    },
    {
        "label": "FilterTab",
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "isExtraImport": true,
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "documentation": {}
    },
    {
        "label": "get_start_end_locs",
        "importPath": "data.start_end_loc_map",
        "description": "data.start_end_loc_map",
        "isExtraImport": true,
        "detail": "data.start_end_loc_map",
        "documentation": {}
    },
    {
        "label": "get_start_end_locs",
        "importPath": "data.start_end_loc_map",
        "description": "data.start_end_loc_map",
        "isExtraImport": true,
        "detail": "data.start_end_loc_map",
        "documentation": {}
    },
    {
        "label": "get_start_end_locs",
        "importPath": "data.start_end_loc_map",
        "description": "data.start_end_loc_map",
        "isExtraImport": true,
        "detail": "data.start_end_loc_map",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "isExtraImport": true,
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "GraphicalObject",
        "importPath": "objects.graphical_object.graphical_object",
        "description": "objects.graphical_object.graphical_object",
        "isExtraImport": true,
        "detail": "objects.graphical_object.graphical_object",
        "documentation": {}
    },
    {
        "label": "GraphicalObject",
        "importPath": "objects.graphical_object.graphical_object",
        "description": "objects.graphical_object.graphical_object",
        "isExtraImport": true,
        "detail": "objects.graphical_object.graphical_object",
        "documentation": {}
    },
    {
        "label": "PropAttrManager",
        "importPath": "objects.prop.prop_attr_manager",
        "description": "objects.prop.prop_attr_manager",
        "isExtraImport": true,
        "detail": "objects.prop.prop_attr_manager",
        "documentation": {}
    },
    {
        "label": "PropChecker",
        "importPath": "objects.prop.prop_checker",
        "description": "objects.prop.prop_checker",
        "isExtraImport": true,
        "detail": "objects.prop.prop_checker",
        "documentation": {}
    },
    {
        "label": "PropMouseEventHandler",
        "importPath": "objects.prop.prop_mouse_event_handler",
        "description": "objects.prop.prop_mouse_event_handler",
        "isExtraImport": true,
        "detail": "objects.prop.prop_mouse_event_handler",
        "documentation": {}
    },
    {
        "label": "PropOffsetCalculator",
        "importPath": "objects.prop.prop_offset_calculator",
        "description": "objects.prop.prop_offset_calculator",
        "isExtraImport": true,
        "detail": "objects.prop.prop_offset_calculator",
        "documentation": {}
    },
    {
        "label": "PropRotAngleManager",
        "importPath": "objects.prop.prop_rot_angle_manager",
        "description": "objects.prop.prop_rot_angle_manager",
        "isExtraImport": true,
        "detail": "objects.prop.prop_rot_angle_manager",
        "documentation": {}
    },
    {
        "label": "PropUpdater",
        "importPath": "objects.prop.prop_updater",
        "description": "objects.prop.prop_updater",
        "isExtraImport": true,
        "detail": "objects.prop.prop_updater",
        "documentation": {}
    },
    {
        "label": "PropAttribute",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "importPath": "Enums",
        "description": "Enums",
        "isExtraImport": true,
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "motion_type_combinations",
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "isExtraImport": true,
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "motion_type_letter_groups",
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "isExtraImport": true,
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "parallel_combinations",
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "isExtraImport": true,
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "motion_type_letter_combinations",
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "isExtraImport": true,
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "letter_type_motion_type_map",
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "isExtraImport": true,
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "xml.etree.ElementTree",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "xml.etree.ElementTree",
        "description": "xml.etree.ElementTree",
        "detail": "xml.etree.ElementTree",
        "documentation": {}
    },
    {
        "label": "svg.path",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "svg.path",
        "description": "svg.path",
        "detail": "svg.path",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "isExtraImport": true,
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "OpenCloseButton",
        "importPath": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "description": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "isExtraImport": true,
        "detail": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "documentation": {}
    },
    {
        "label": "PropRotDirButton",
        "importPath": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "description": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "isExtraImport": true,
        "detail": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "documentation": {}
    },
    {
        "label": "VtgDirButton",
        "importPath": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "description": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "isExtraImport": true,
        "detail": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "documentation": {}
    },
    {
        "label": "LetterButton",
        "importPath": "widgets.letter_button_frame.components.letter_button",
        "description": "widgets.letter_button_frame.components.letter_button",
        "isExtraImport": true,
        "detail": "widgets.letter_button_frame.components.letter_button",
        "documentation": {}
    },
    {
        "label": "TurnsBox",
        "importPath": "widgets.turns_box.turns_box",
        "description": "widgets.turns_box.turns_box",
        "isExtraImport": true,
        "detail": "widgets.turns_box.turns_box",
        "documentation": {}
    },
    {
        "label": "TurnsBox",
        "importPath": "widgets.turns_box.turns_box",
        "description": "widgets.turns_box.turns_box",
        "isExtraImport": true,
        "detail": "widgets.turns_box.turns_box",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "isExtraImport": true,
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "BigTriad",
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "isExtraImport": true,
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "isExtraImport": true,
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "GhostArrow",
        "importPath": "objects.arrow.ghost_arrow",
        "description": "objects.arrow.ghost_arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.ghost_arrow",
        "documentation": {}
    },
    {
        "label": "GhostArrow",
        "importPath": "objects.arrow.ghost_arrow",
        "description": "objects.arrow.ghost_arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.ghost_arrow",
        "documentation": {}
    },
    {
        "label": "GhostArrow",
        "importPath": "objects.arrow.ghost_arrow",
        "description": "objects.arrow.ghost_arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.ghost_arrow",
        "documentation": {}
    },
    {
        "label": "GhostArrow",
        "importPath": "objects.arrow.ghost_arrow",
        "description": "objects.arrow.ghost_arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.ghost_arrow",
        "documentation": {}
    },
    {
        "label": "GhostArrow",
        "importPath": "objects.arrow.ghost_arrow",
        "description": "objects.arrow.ghost_arrow",
        "isExtraImport": true,
        "detail": "objects.arrow.ghost_arrow",
        "documentation": {}
    },
    {
        "label": "ArrowBoxDrag",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_drag",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_drag",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_drag",
        "documentation": {}
    },
    {
        "label": "ArrowBoxView",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_view",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_view",
        "documentation": {}
    },
    {
        "label": "Grid",
        "importPath": "objects.grid",
        "description": "objects.grid",
        "isExtraImport": true,
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "Grid",
        "importPath": "objects.grid",
        "description": "objects.grid",
        "isExtraImport": true,
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "GridPoint",
        "importPath": "objects.grid",
        "description": "objects.grid",
        "isExtraImport": true,
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "Grid",
        "importPath": "objects.grid",
        "description": "objects.grid",
        "isExtraImport": true,
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "Grid",
        "importPath": "objects.grid",
        "description": "objects.grid",
        "isExtraImport": true,
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "BaseObjectBox",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "documentation": {}
    },
    {
        "label": "BaseObjectBox",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "documentation": {}
    },
    {
        "label": "BaseObjectBox",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "documentation": {}
    },
    {
        "label": "BaseObjectBoxDrag",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "documentation": {}
    },
    {
        "label": "BaseObjectBoxDrag",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "documentation": {}
    },
    {
        "label": "BaseObjectBoxView",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "documentation": {}
    },
    {
        "label": "BaseObjectBoxView",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "documentation": {}
    },
    {
        "label": "BaseObjectBoxView",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "documentation": {}
    },
    {
        "label": "PropBoxDrag",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_drag",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_drag",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_drag",
        "documentation": {}
    },
    {
        "label": "PropBoxView",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_view",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_view",
        "documentation": {}
    },
    {
        "label": "TurnsPanel",
        "importPath": "widgets.turns_panel",
        "description": "widgets.turns_panel",
        "isExtraImport": true,
        "detail": "widgets.turns_panel",
        "documentation": {}
    },
    {
        "label": "TurnsPanel",
        "importPath": "widgets.turns_panel",
        "description": "widgets.turns_panel",
        "isExtraImport": true,
        "detail": "widgets.turns_panel",
        "documentation": {}
    },
    {
        "label": "GraphEditorAttrPanel",
        "importPath": "widgets.graph_editor_tab.graph_editor_turns_panel",
        "description": "widgets.graph_editor_tab.graph_editor_turns_panel",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_turns_panel",
        "documentation": {}
    },
    {
        "label": "GraphEditorPictograph",
        "importPath": "widgets.graph_editor_tab.graph_editor_pictograph",
        "description": "widgets.graph_editor_tab.graph_editor_pictograph",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_pictograph",
        "documentation": {}
    },
    {
        "label": "ArrowBox",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox",
        "documentation": {}
    },
    {
        "label": "GraphEditorPictographWidget",
        "importPath": "widgets.graph_editor_tab.graph_editor_pictograph_widget",
        "description": "widgets.graph_editor_tab.graph_editor_pictograph_widget",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_pictograph_widget",
        "documentation": {}
    },
    {
        "label": "PropBox",
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox",
        "documentation": {}
    },
    {
        "label": "HeaderWidget",
        "importPath": "widgets.header_widget",
        "description": "widgets.header_widget",
        "isExtraImport": true,
        "detail": "widgets.header_widget",
        "documentation": {}
    },
    {
        "label": "HeaderWidget",
        "importPath": "widgets.header_widget",
        "description": "widgets.header_widget",
        "isExtraImport": true,
        "detail": "widgets.header_widget",
        "documentation": {}
    },
    {
        "label": "GraphEditorPictographView",
        "importPath": "widgets.graph_editor_tab.graph_editor_pictograph_view",
        "description": "widgets.graph_editor_tab.graph_editor_pictograph_view",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_pictograph_view",
        "documentation": {}
    },
    {
        "label": "GraphEditorFrame",
        "importPath": "widgets.graph_editor_tab.graph_editor_frame",
        "description": "widgets.graph_editor_tab.graph_editor_frame",
        "isExtraImport": true,
        "detail": "widgets.graph_editor_tab.graph_editor_frame",
        "documentation": {}
    },
    {
        "label": "LetterButtonClickHandler",
        "importPath": "widgets.letter_button_frame.components.letter_button_click_handler",
        "description": "widgets.letter_button_frame.components.letter_button_click_handler",
        "isExtraImport": true,
        "detail": "widgets.letter_button_frame.components.letter_button_click_handler",
        "documentation": {}
    },
    {
        "label": "LetterButtonStyler",
        "importPath": "widgets.letter_button_frame.components.letter_button_styler",
        "description": "widgets.letter_button_frame.components.letter_button_styler",
        "isExtraImport": true,
        "detail": "widgets.letter_button_frame.components.letter_button_styler",
        "documentation": {}
    },
    {
        "label": "LetterButtonManager",
        "importPath": "widgets.letter_button_frame.components.letter_button_manager",
        "description": "widgets.letter_button_frame.components.letter_button_manager",
        "isExtraImport": true,
        "detail": "widgets.letter_button_frame.components.letter_button_manager",
        "documentation": {}
    },
    {
        "label": "Codex",
        "importPath": "widgets.codex.codex",
        "description": "widgets.codex.codex",
        "isExtraImport": true,
        "detail": "widgets.codex.codex",
        "documentation": {}
    },
    {
        "label": "SpecialPlacementLoader",
        "importPath": "widgets.main_widget.special_placement_loader",
        "description": "widgets.main_widget.special_placement_loader",
        "isExtraImport": true,
        "detail": "widgets.main_widget.special_placement_loader",
        "documentation": {}
    },
    {
        "label": "TurnsTupleGenerator",
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generator",
        "isExtraImport": true,
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generator",
        "documentation": {}
    },
    {
        "label": "PreferencesDialog",
        "importPath": "widgets.menu_bar.preferences_dialog",
        "description": "widgets.menu_bar.preferences_dialog",
        "isExtraImport": true,
        "detail": "widgets.menu_bar.preferences_dialog",
        "documentation": {}
    },
    {
        "label": "ClickableSlider",
        "importPath": "widgets.clickable_slider",
        "description": "widgets.clickable_slider",
        "isExtraImport": true,
        "detail": "widgets.clickable_slider",
        "documentation": {}
    },
    {
        "label": "PropTypeSelector",
        "importPath": "widgets.menu_bar.prop_type_selector",
        "description": "widgets.menu_bar.prop_type_selector",
        "isExtraImport": true,
        "detail": "widgets.menu_bar.prop_type_selector",
        "documentation": {}
    },
    {
        "label": "get_next_letters",
        "importPath": "data.rules",
        "description": "data.rules",
        "isExtraImport": true,
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "beta_ending_letters",
        "importPath": "data.rules",
        "description": "data.rules",
        "isExtraImport": true,
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "alpha_ending_letters",
        "importPath": "data.rules",
        "description": "data.rules",
        "isExtraImport": true,
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "gamma_ending_letters",
        "importPath": "data.rules",
        "description": "data.rules",
        "isExtraImport": true,
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "Option",
        "importPath": "widgets.option_picker_tab.option",
        "description": "widgets.option_picker_tab.option",
        "isExtraImport": true,
        "detail": "widgets.option_picker_tab.option",
        "documentation": {}
    },
    {
        "label": "Option",
        "importPath": "widgets.option_picker_tab.option",
        "description": "widgets.option_picker_tab.option",
        "isExtraImport": true,
        "detail": "widgets.option_picker_tab.option",
        "documentation": {}
    },
    {
        "label": "Option",
        "importPath": "widgets.option_picker_tab.option",
        "description": "widgets.option_picker_tab.option",
        "isExtraImport": true,
        "detail": "widgets.option_picker_tab.option",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "importPath": "widgets.scroll_area.scroll_area",
        "description": "widgets.scroll_area.scroll_area",
        "isExtraImport": true,
        "detail": "widgets.scroll_area.scroll_area",
        "documentation": {}
    },
    {
        "label": "MirroredTurnsTupleGenerator",
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.mirrored_turns_tuple_generator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.mirrored_turns_tuple_generator",
        "isExtraImport": true,
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.mirrored_turns_tuple_generator",
        "documentation": {}
    },
    {
        "label": "codecs",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "codecs",
        "description": "codecs",
        "detail": "codecs",
        "documentation": {}
    },
    {
        "label": "PropPlacementOverrideManager",
        "importPath": "widgets.pictograph.components.wasd_adjustment_manager.prop_placement_override_manager",
        "description": "widgets.pictograph.components.wasd_adjustment_manager.prop_placement_override_manager",
        "isExtraImport": true,
        "detail": "widgets.pictograph.components.wasd_adjustment_manager.prop_placement_override_manager",
        "documentation": {}
    },
    {
        "label": "GhostProp",
        "importPath": "objects.prop.ghost_prop",
        "description": "objects.prop.ghost_prop",
        "isExtraImport": true,
        "detail": "objects.prop.ghost_prop",
        "documentation": {}
    },
    {
        "label": "GhostProp",
        "importPath": "objects.prop.ghost_prop",
        "description": "objects.prop.ghost_prop",
        "isExtraImport": true,
        "detail": "objects.prop.ghost_prop",
        "documentation": {}
    },
    {
        "label": "GhostProp",
        "importPath": "objects.prop.ghost_prop",
        "description": "objects.prop.ghost_prop",
        "isExtraImport": true,
        "detail": "objects.prop.ghost_prop",
        "documentation": {}
    },
    {
        "label": "LetterItem",
        "importPath": "utilities.letter_item",
        "description": "utilities.letter_item",
        "isExtraImport": true,
        "detail": "utilities.letter_item",
        "documentation": {}
    },
    {
        "label": "LetterItem",
        "importPath": "utilities.letter_item",
        "description": "utilities.letter_item",
        "isExtraImport": true,
        "detail": "utilities.letter_item",
        "documentation": {}
    },
    {
        "label": "PropFactory",
        "importPath": "widgets.factories.prop_factory",
        "description": "widgets.factories.prop_factory",
        "isExtraImport": true,
        "detail": "widgets.factories.prop_factory",
        "documentation": {}
    },
    {
        "label": "LetterCalculator",
        "importPath": "utilities.letter_calculator",
        "description": "utilities.letter_calculator",
        "isExtraImport": true,
        "detail": "utilities.letter_calculator",
        "documentation": {}
    },
    {
        "label": "SectionTypeLabel",
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.type_label",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.type_label",
        "isExtraImport": true,
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.type_label",
        "documentation": {}
    },
    {
        "label": "SectionHeader",
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.section_header",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.section_header",
        "isExtraImport": true,
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.section_header",
        "documentation": {}
    },
    {
        "label": "SectionWidget",
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.section_widget",
        "description": "widgets.scroll_area.components.section_manager.section_widget.section_widget",
        "isExtraImport": true,
        "detail": "widgets.scroll_area.components.section_manager.section_widget.section_widget",
        "documentation": {}
    },
    {
        "label": "Beat",
        "importPath": "widgets.sequence_widget.beat_frame.beat",
        "description": "widgets.sequence_widget.beat_frame.beat",
        "isExtraImport": true,
        "detail": "widgets.sequence_widget.beat_frame.beat",
        "documentation": {}
    },
    {
        "label": "BeatView",
        "importPath": "widgets.sequence_widget.beat_frame.beat",
        "description": "widgets.sequence_widget.beat_frame.beat",
        "isExtraImport": true,
        "detail": "widgets.sequence_widget.beat_frame.beat",
        "documentation": {}
    },
    {
        "label": "StartPositionBeat",
        "importPath": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "description": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "isExtraImport": true,
        "detail": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "documentation": {}
    },
    {
        "label": "StartPositionBeatView",
        "importPath": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "description": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "isExtraImport": true,
        "detail": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "documentation": {}
    },
    {
        "label": "BeatFrame",
        "importPath": "widgets.sequence_widget.beat_frame.beat_frame",
        "description": "widgets.sequence_widget.beat_frame.beat_frame",
        "isExtraImport": true,
        "detail": "widgets.sequence_widget.beat_frame.beat_frame",
        "documentation": {}
    },
    {
        "label": "ButtonFrame",
        "importPath": "widgets.sequence_widget.button_frame",
        "description": "widgets.sequence_widget.button_frame",
        "isExtraImport": true,
        "detail": "widgets.sequence_widget.button_frame",
        "documentation": {}
    },
    {
        "label": "AdjustTurnsButton",
        "importPath": "widgets.factories.button_factory.buttons.adjust_turns_button",
        "description": "widgets.factories.button_factory.buttons.adjust_turns_button",
        "isExtraImport": true,
        "detail": "widgets.factories.button_factory.buttons.adjust_turns_button",
        "documentation": {}
    },
    {
        "label": "SwapButton",
        "importPath": "widgets.factories.button_factory.buttons.swap_button",
        "description": "widgets.factories.button_factory.buttons.swap_button",
        "isExtraImport": true,
        "detail": "widgets.factories.button_factory.buttons.swap_button",
        "documentation": {}
    },
    {
        "label": "ButtonFactory",
        "importPath": "widgets.factories.button_factory.button_factory",
        "description": "widgets.factories.button_factory.button_factory",
        "isExtraImport": true,
        "detail": "widgets.factories.button_factory.button_factory",
        "documentation": {}
    },
    {
        "label": "TurnsBoxWidget",
        "importPath": "widgets.turns_box.turns_box_widgets.base_attr_box_widget",
        "description": "widgets.turns_box.turns_box_widgets.base_attr_box_widget",
        "isExtraImport": true,
        "detail": "widgets.turns_box.turns_box_widgets.base_attr_box_widget",
        "documentation": {}
    },
    {
        "label": "PropRotDirButtonManager",
        "importPath": "widgets.turns_box.turns_box_widgets.prop_rot_dir_button_manager",
        "description": "widgets.turns_box.turns_box_widgets.prop_rot_dir_button_manager",
        "isExtraImport": true,
        "detail": "widgets.turns_box.turns_box_widgets.prop_rot_dir_button_manager",
        "documentation": {}
    },
    {
        "label": "TurnsBoxFactory",
        "importPath": "widgets.factories.attr_box_factory",
        "description": "widgets.factories.attr_box_factory",
        "isExtraImport": true,
        "detail": "widgets.factories.attr_box_factory",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Profiler",
        "importPath": "profiler",
        "description": "profiler",
        "isExtraImport": true,
        "detail": "profiler",
        "documentation": {}
    },
    {
        "label": "SettingsManager",
        "importPath": "settings_manager",
        "description": "settings_manager",
        "isExtraImport": true,
        "detail": "settings_manager",
        "documentation": {}
    },
    {
        "label": "WindowGeometryManager",
        "importPath": "utilities.window_manager",
        "description": "utilities.window_manager",
        "isExtraImport": true,
        "detail": "utilities.window_manager",
        "documentation": {}
    },
    {
        "label": "MainWidget",
        "importPath": "widgets.main_widget.main_widget",
        "description": "widgets.main_widget.main_widget",
        "isExtraImport": true,
        "detail": "widgets.main_widget.main_widget",
        "documentation": {}
    },
    {
        "label": "MainWindowMenuBar",
        "importPath": "widgets.menu_bar.menu_bar",
        "description": "widgets.menu_bar.menu_bar",
        "isExtraImport": true,
        "detail": "widgets.menu_bar.menu_bar",
        "documentation": {}
    },
    {
        "label": "cProfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cProfile",
        "description": "cProfile",
        "detail": "cProfile",
        "documentation": {}
    },
    {
        "label": "pstats",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pstats",
        "description": "pstats",
        "detail": "pstats",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "pi",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "BaseDataFrameGenerator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.base_dataframe_generator",
        "description": "archive.dataframe_generators.base_dataframe_generator",
        "peekOfCode": "class BaseDataFrameGenerator:\n    def __init__(self, letters) -> None:\n        self.letters = letters\n        self.rot_dirs = [CLOCKWISE, COUNTER_CLOCKWISE]\n        self.shift_handpaths = [CW_HANDPATH, CCW_HANDPATH]\n    def change_red_handpath_map_to(self, handpath_rot_dir):\n        if handpath_rot_dir == CCW_HANDPATH:\n            self.red_handpath_map = [\n                (NORTH, WEST),\n                (WEST, SOUTH),",
        "detail": "archive.dataframe_generators.base_dataframe_generator",
        "documentation": {}
    },
    {
        "label": "MainDataFrameGenerator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.main_dataframe_generator",
        "description": "archive.dataframe_generators.main_dataframe_generator",
        "peekOfCode": "class MainDataFrameGenerator:\n    def __init__(self) -> None:\n        self.init_generators()\n        self.master_dataframe = pd.DataFrame()\n    def init_generators(self) -> None:\n        self.Type1_generator = Type1Generator()\n        self.Type2_generator = Type2Generator()\n        self.Type3_generator = Type3Generator()\n        self.Type4_generator = Type4Generator()\n        self.Type5_generator = Type5Generator()",
        "detail": "archive.dataframe_generators.main_dataframe_generator",
        "documentation": {}
    },
    {
        "label": "generator",
        "kind": 5,
        "importPath": "archive.dataframe_generators.main_dataframe_generator",
        "description": "archive.dataframe_generators.main_dataframe_generator",
        "peekOfCode": "generator = MainDataFrameGenerator()\ngenerator.generate_all_dataframes()",
        "detail": "archive.dataframe_generators.main_dataframe_generator",
        "documentation": {}
    },
    {
        "label": "Type1Generator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.Type1_generator",
        "description": "archive.dataframe_generators.Type1_generator",
        "peekOfCode": "class Type1Generator(BaseDataFrameGenerator):\n    def __init__(self) -> None:\n        super().__init__(Type1_letters)\n        self.create_Type1_dataframes()\n    def create_Type1_dataframes(self) -> pd.DataFrame:\n        all_data = []\n        for letter in self.letters:\n            data = self.create_dataframe(letter)\n            all_data.extend(data)\n            print(\"Generated dataframes for letter:\", letter)",
        "detail": "archive.dataframe_generators.Type1_generator",
        "documentation": {}
    },
    {
        "label": "alpha_beta_generator",
        "kind": 5,
        "importPath": "archive.dataframe_generators.Type1_generator",
        "description": "archive.dataframe_generators.Type1_generator",
        "peekOfCode": "alpha_beta_generator = Type1Generator()",
        "detail": "archive.dataframe_generators.Type1_generator",
        "documentation": {}
    },
    {
        "label": "Type2Generator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.Type2_generator",
        "description": "archive.dataframe_generators.Type2_generator",
        "peekOfCode": "class Type2Generator(BaseDataFrameGenerator):\n    def __init__(self) -> None:\n        super().__init__(Type2_letters)\n        self.create_Type2_dataframes()\n    def create_Type2_dataframes(self) -> pd.DataFrame:\n        all_data = []\n        for letter in self.letters:\n            data = self.create_dataframe(letter)\n            all_data.extend(data)\n            print(\"Generated dataframes for letter:\", letter)",
        "detail": "archive.dataframe_generators.Type2_generator",
        "documentation": {}
    },
    {
        "label": "Type3Generator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.Type3_generator",
        "description": "archive.dataframe_generators.Type3_generator",
        "peekOfCode": "class Type3Generator(BaseDataFrameGenerator):\n    def __init__(self) -> None:\n        super().__init__(Type3_letters)\n        self.create_Type3_dataframes()\n    def create_Type3_dataframes(self) -> pd.DataFrame:\n        all_data = []\n        for letter in self.letters:\n            data = self.create_dataframe(letter)\n            all_data.extend(data)\n            print(\"Generated dataframes for letter:\", letter)",
        "detail": "archive.dataframe_generators.Type3_generator",
        "documentation": {}
    },
    {
        "label": "Type4Generator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.Type4_generator",
        "description": "archive.dataframe_generators.Type4_generator",
        "peekOfCode": "class Type4Generator(BaseDataFrameGenerator):\n    def __init__(self) -> None:\n        super().__init__(Type4_letters)\n        self.create_Type4_dataframes()\n    def create_Type4_dataframes(self) -> pd.DataFrame:\n        all_data = []\n        for letter in self.letters:\n            data = self.create_dataframe(letter)\n            all_data.extend(data)\n            print(\"Generated dataframes for letter:\", letter)",
        "detail": "archive.dataframe_generators.Type4_generator",
        "documentation": {}
    },
    {
        "label": "Type5Generator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.Type5_generator",
        "description": "archive.dataframe_generators.Type5_generator",
        "peekOfCode": "class Type5Generator(BaseDataFrameGenerator):\n    def __init__(self) -> None:\n        super().__init__(Type5_letters)\n        self.create_Type5_dataframes()\n    def create_Type5_dataframes(self) -> pd.DataFrame:\n        all_data = []\n        for letter in self.letters:\n            data = self.create_dataframe(letter)\n            all_data.extend(data)\n            print(\"Generated dataframes for letter:\", letter)",
        "detail": "archive.dataframe_generators.Type5_generator",
        "documentation": {}
    },
    {
        "label": "Type6Generator",
        "kind": 6,
        "importPath": "archive.dataframe_generators.Type6_generator",
        "description": "archive.dataframe_generators.Type6_generator",
        "peekOfCode": "class Type6Generator(BaseDataFrameGenerator):\n    def __init__(self) -> None:\n        super().__init__(Type6_letters)\n        self.create_Type6_dataframes()\n    def create_Type6_dataframes(self) -> pd.DataFrame:\n        all_data = []\n        for letter in self.letters:\n            data = self.create_dataframe(letter)\n            all_data.extend(data)\n            print(\"Generated dataframes for letter:\", letter)",
        "detail": "archive.dataframe_generators.Type6_generator",
        "documentation": {}
    },
    {
        "label": "motion_type_letter_groups",
        "kind": 5,
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "peekOfCode": "motion_type_letter_groups = {\n    # Type1\n    \"pro_vs_pro\": \"ADGJMPS\",\n    \"anti_vs_anti\": \"BEHKNQT\",\n    \"pro_vs_anti\": \"CFILORUV\",\n    # Type2\n    \"pro_vs_static\": \"WYΣθ\",\n    \"anti_vs_static\": \"XZΔΩ\",\n    # Type3\n    \"pro_vs_dash\": \"W-Y-Σ-θ-\",",
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "letter_type_to_letter_map",
        "kind": 5,
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "peekOfCode": "letter_type_to_letter_map = {\n    \"Type1\": \"ADGJMPSBEHKNQTCFILORUV\",\n    \"Type2\": \"WYΣθXZΔΩ\",\n    \"Type3\": [\"W-\", \"Y-\", \"Σ-\", \"θ-\", \"X-\", \"Z-\", \"Δ-\", \"Ω-\"],\n    \"Type4\": \"ΦΨΛ\",\n    \"Type5\": [\"Φ-\", \"Ψ-\", \"Λ-\"],\n    \"Type6\": \"αβΓ\",\n}\nmotion_type_combinations = {\n    (PRO, PRO): \"pro_vs_pro\",",
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "motion_type_combinations",
        "kind": 5,
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "peekOfCode": "motion_type_combinations = {\n    (PRO, PRO): \"pro_vs_pro\",\n    (PRO, ANTI): \"pro_vs_anti\",\n    (PRO, STATIC): \"pro_vs_static\",\n    (PRO, DASH): \"pro_vs_dash\",\n    (ANTI, PRO): \"pro_vs_anti\",\n    (ANTI, ANTI): \"anti_vs_anti\",\n    (ANTI, STATIC): \"anti_vs_static\",\n    (ANTI, DASH): \"anti_vs_dash\",\n    (DASH, PRO): \"pro_vs_dash\",",
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "motion_type_letter_combinations",
        "kind": 5,
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "peekOfCode": "motion_type_letter_combinations = {\n    \"A\": (PRO, PRO),\n    \"B\": (ANTI, ANTI),\n    \"C\": (PRO, ANTI),\n    \"D\": (PRO, PRO),\n    \"E\": (ANTI, ANTI),\n    \"F\": (PRO, ANTI),\n    \"G\": (PRO, PRO),\n    \"H\": (ANTI, ANTI),\n    \"I\": (PRO, ANTI),",
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "parallel_combinations",
        "kind": 5,
        "importPath": "data.letter_engine_data",
        "description": "data.letter_engine_data",
        "peekOfCode": "parallel_combinations = {\n    (\"n\", \"e\", \"w\", \"s\"),\n    (\"e\", \"s\", \"n\", \"w\"),\n    (\"s\", \"w\", \"e\", \"n\"),\n    (\"w\", \"n\", \"s\", \"e\"),\n    (\"n\", \"w\", \"e\", \"s\"),\n    (\"w\", \"s\", \"n\", \"e\"),\n    (\"s\", \"e\", \"w\", \"n\"),\n    (\"e\", \"n\", \"s\", \"w\"),\n}",
        "detail": "data.letter_engine_data",
        "documentation": {}
    },
    {
        "label": "get_specific_start_end_pos",
        "kind": 2,
        "importPath": "data.positions_map",
        "description": "data.positions_map",
        "peekOfCode": "def get_specific_start_end_pos(\n    blue_motion: Motion, red_motion: Motion\n) -> dict[str, SpecificPositions]:\n    start_locs = (\n        blue_motion.start_loc,\n        red_motion.start_loc,\n    )\n    end_locs = (\n        red_motion.end_loc,\n        blue_motion.end_loc,",
        "detail": "data.positions_map",
        "documentation": {}
    },
    {
        "label": "get_next_letters",
        "kind": 2,
        "importPath": "data.rules",
        "description": "data.rules",
        "peekOfCode": "def get_next_letters(letter: all_letters) -> list[all_letters]:\n    \"\"\"Return the next possible letters for the given letter.\"\"\"\n    if letter in alpha_ending_letters:\n        return alpha_starting_letters\n    elif letter in beta_ending_letters:\n        return beta_starting_letters\n    elif letter in gamma_ending_letters:\n        return gamma_starting_letters\n    else:\n        return []",
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "alpha_ending_letters",
        "kind": 5,
        "importPath": "data.rules",
        "description": "data.rules",
        "peekOfCode": "alpha_ending_letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"W\",\n    \"X\",\n    \"W-\",",
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "beta_ending_letters",
        "kind": 5,
        "importPath": "data.rules",
        "description": "data.rules",
        "peekOfCode": "beta_ending_letters = [\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"Y\",\n    \"Z\",\n    \"Y-\",",
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "gamma_ending_letters",
        "kind": 5,
        "importPath": "data.rules",
        "description": "data.rules",
        "peekOfCode": "gamma_ending_letters = [\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",",
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "alpha_starting_letters",
        "kind": 5,
        "importPath": "data.rules",
        "description": "data.rules",
        "peekOfCode": "alpha_starting_letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"Σ\",\n    \"Δ\",\n    \"θ-\",",
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "beta_starting_letters",
        "kind": 5,
        "importPath": "data.rules",
        "description": "data.rules",
        "peekOfCode": "beta_starting_letters = [\n    \"G\",\n    \"H\",\n    \"I\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"Σ-\",\n    \"Δ-\",\n    \"θ\",",
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "gamma_starting_letters",
        "kind": 5,
        "importPath": "data.rules",
        "description": "data.rules",
        "peekOfCode": "gamma_starting_letters = [\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",",
        "detail": "data.rules",
        "documentation": {}
    },
    {
        "label": "get_start_end_locs",
        "kind": 2,
        "importPath": "data.start_end_loc_map",
        "description": "data.start_end_loc_map",
        "peekOfCode": "def get_start_end_locs(\n    motion_type: MotionTypes, rot_dir: PropRotDirs, arrow_location: Locations\n) -> StartEndLocationTuple:\n    return (\n        start_end_loc_map.get(arrow_location, {})\n        .get(rot_dir, {})\n        .get(motion_type, (None, None))\n    )",
        "detail": "data.start_end_loc_map",
        "documentation": {}
    },
    {
        "label": "start_end_loc_map",
        "kind": 5,
        "importPath": "data.start_end_loc_map",
        "description": "data.start_end_loc_map",
        "peekOfCode": "start_end_loc_map = {\n    NORTHEAST: {\n        CLOCKWISE: {\n            ANTI: (EAST, NORTH),\n            PRO: (NORTH, EAST),\n        },\n        COUNTER_CLOCKWISE: {\n            ANTI: (NORTH, EAST),\n            PRO: (EAST, NORTH),\n        },",
        "detail": "data.start_end_loc_map",
        "documentation": {}
    },
    {
        "label": "ArrowAttrHandler",
        "kind": 6,
        "importPath": "objects.arrow.managers.arrow_attr_handler",
        "description": "objects.arrow.managers.arrow_attr_handler",
        "peekOfCode": "class ArrowAttrHandler:\n    def __init__(self, arrow: \"Arrow\") -> None:\n        self.a = arrow\n        self.a.color = self.a.arrow_dict[COLOR]\n        self.a.turns = self.a.arrow_dict[TURNS]\n    def update_attributes(\n        self, arrow_dict: dict[str, Union[Colors, Locations, MotionTypes, Turns]]\n    ) -> None:\n        arrow_attributes = [COLOR, LOC, MOTION_TYPE, TURNS]\n        for attr in arrow_attributes:",
        "detail": "objects.arrow.managers.arrow_attr_handler",
        "documentation": {}
    },
    {
        "label": "ArrowLocationCalculator",
        "kind": 6,
        "importPath": "objects.arrow.managers.arrow_location_manager",
        "description": "objects.arrow.managers.arrow_location_manager",
        "peekOfCode": "class ArrowLocationCalculator:\n    def __init__(self, arrow: \"Arrow\") -> None:\n        self.a = arrow\n        self.pictograph = self.a.pictograph\n        self.location_resolvers = {\n            PRO: self.get_shift_location,\n            ANTI: self.get_shift_location,\n            FLOAT: self.get_shift_location,\n            DASH: self.get_dash_location,\n            STATIC: self.get_static_location,",
        "detail": "objects.arrow.managers.arrow_location_manager",
        "documentation": {}
    },
    {
        "label": "ArrowMirrorHandler",
        "kind": 6,
        "importPath": "objects.arrow.managers.arrow_mirror_handler",
        "description": "objects.arrow.managers.arrow_mirror_handler",
        "peekOfCode": "class ArrowMirrorHandler:\n    def __init__(self, arrow: \"Arrow\") -> None:\n        self.arrow = arrow\n    def update_mirror(self) -> None:\n        self.set_mirror_conditions()\n        self.set_svg_mirror(self.arrow)\n        if not self.arrow.is_ghost:\n            self.set_svg_mirror(self.arrow.ghost)\n    def set_mirror_conditions(self) -> None:\n        mirror_conditions = {",
        "detail": "objects.arrow.managers.arrow_mirror_handler",
        "documentation": {}
    },
    {
        "label": "ArrowMouseEventHandler",
        "kind": 6,
        "importPath": "objects.arrow.managers.arrow_mouse_event_handler",
        "description": "objects.arrow.managers.arrow_mouse_event_handler",
        "peekOfCode": "class ArrowMouseEventHandler:\n    def __init__(self, arrow: \"Arrow\") -> None:\n        self.arrow = arrow\n    def handle_mouse_press(self, event) -> None:\n        self.arrow.pictograph.mouse_event_handler.clear_selections()\n        self.arrow.pictograph.selected_arrow = self.arrow\n        self.arrow.setSelected(True)\n        if hasattr(self.arrow, GHOST) and self.arrow.ghost:\n            self.arrow.ghost.show()\n        self.arrow.scene.updater.update_pictograph()",
        "detail": "objects.arrow.managers.arrow_mouse_event_handler",
        "documentation": {}
    },
    {
        "label": "ArrowRotAngleCalculator",
        "kind": 6,
        "importPath": "objects.arrow.managers.arrow_rot_angle_calculator",
        "description": "objects.arrow.managers.arrow_rot_angle_calculator",
        "peekOfCode": "class ArrowRotAngleCalculator:\n    def __init__(self, arrow: \"Arrow\") -> None:\n        self.arrow = arrow\n        self.angle_resolvers = {\n            PRO: self._get_pro_anti_angle,\n            ANTI: self._get_pro_anti_angle,\n            DASH: self._get_dash_angle,\n            STATIC: self._get_static_angle,\n        }\n        if hasattr(self.arrow.scene, LETTER):",
        "detail": "objects.arrow.managers.arrow_rot_angle_calculator",
        "documentation": {}
    },
    {
        "label": "ArrowUpdater",
        "kind": 6,
        "importPath": "objects.arrow.managers.arrow_updater",
        "description": "objects.arrow.managers.arrow_updater",
        "peekOfCode": "class ArrowUpdater:\n    def __init__(self, arrow: \"Arrow\") -> None:\n        self.arrow = arrow\n    def update_arrow(self, arrow_dict=None) -> None:\n        if arrow_dict:\n            self.arrow.attr_manager.update_attributes(arrow_dict)\n            if not self.arrow.is_ghost and self.arrow.ghost:\n                self.arrow.ghost.attr_manager.update_attributes(arrow_dict)\n        if not self.arrow.is_ghost:\n            self.arrow.ghost.transform = self.arrow.transform",
        "detail": "objects.arrow.managers.arrow_updater",
        "documentation": {}
    },
    {
        "label": "Arrow",
        "kind": 6,
        "importPath": "objects.arrow.arrow",
        "description": "objects.arrow.arrow",
        "peekOfCode": "class Arrow(GraphicalObject):\n    svg_cache = {}\n    turns: Turns\n    motion: \"Motion\"\n    color: Colors\n    location: Locations\n    loc: Locations\n    is_svg_mirrored: bool\n    def __init__(self, pictograph, arrow_dict) -> None:\n        super().__init__(pictograph)",
        "detail": "objects.arrow.arrow",
        "documentation": {}
    },
    {
        "label": "GhostArrow",
        "kind": 6,
        "importPath": "objects.arrow.ghost_arrow",
        "description": "objects.arrow.ghost_arrow",
        "peekOfCode": "class GhostArrow(Arrow):\n    def __init__(self, pictograph: \"Pictograph\", arrow_dict) -> None:\n        super().__init__(pictograph, arrow_dict)\n        self.setOpacity(0.2)\n        self.pictograph = pictograph\n        self.color = arrow_dict[COLOR]\n        self.target_arrow: \"Arrow\" = None\n        self.is_ghost = True",
        "detail": "objects.arrow.ghost_arrow",
        "documentation": {}
    },
    {
        "label": "GraphicalObject",
        "kind": 6,
        "importPath": "objects.graphical_object.graphical_object",
        "description": "objects.graphical_object.graphical_object",
        "peekOfCode": "class GraphicalObject(QGraphicsSvgItem):\n    svg_file: str\n    self: Union[\"Arrow\", \"Prop\"]\n    ghost: Union[\"Arrow\", \"Prop\"]\n    is_ghost: bool = None\n    color: Colors\n    renderer: QSvgRenderer\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        super().__init__()\n        self.pictograph = pictograph",
        "detail": "objects.graphical_object.graphical_object",
        "documentation": {}
    },
    {
        "label": "SvgManager",
        "kind": 6,
        "importPath": "objects.graphical_object.svg_manager",
        "description": "objects.graphical_object.svg_manager",
        "peekOfCode": "class SvgManager:\n    def __init__(self, object: \"GraphicalObject\") -> None:\n        self.object: Union[\"Arrow\", \"Prop\"] = object\n        self.renderer = None\n    def set_svg_color(self, new_color: str) -> bytes:\n        def replace_class_color(match: re.Match) -> str:\n            return match.group(1) + new_hex_color + match.group(3)\n        def replace_fill_color(match: re.Match) -> str:\n            return match.group(1) + new_hex_color + match.group(3)\n        COLOR_MAP = {RED: HEX_RED, BLUE: HEX_BLUE}",
        "detail": "objects.graphical_object.svg_manager",
        "documentation": {}
    },
    {
        "label": "MotionAttrManager",
        "kind": 6,
        "importPath": "objects.motion.managers.motion_attr_manager",
        "description": "objects.motion.managers.motion_attr_manager",
        "peekOfCode": "class MotionAttrManager:\n    def __init__(self, motion: \"Motion\") -> None:\n        self.m = motion\n        self.m.color: Colors = self.m.motion_dict.get(COLOR)\n        self.m.turns: Turns = self.m.motion_dict.get(TURNS)\n        self.m.start_loc = None\n        self.m.end_loc = None\n        self.m.motion_type = None\n    def update_attributes(self, motion_dict: dict[str, str]) -> None:\n        for attribute, value in motion_dict.items():",
        "detail": "objects.motion.managers.motion_attr_manager",
        "documentation": {}
    },
    {
        "label": "MotionChecker",
        "kind": 6,
        "importPath": "objects.motion.managers.motion_checker",
        "description": "objects.motion.managers.motion_checker",
        "peekOfCode": "class MotionChecker:\n    def __init__(self, motion: \"Motion\") -> None:\n        self.motion = motion\n    def is_shift(self) -> bool:\n        return self.motion.motion_type in [PRO, ANTI, FLOAT]\n    def is_dash(self) -> bool:\n        return self.motion.motion_type == DASH\n    def is_static(self) -> bool:\n        return self.motion.motion_type == STATIC\n    def is_dash_or_static(self) -> bool:",
        "detail": "objects.motion.managers.motion_checker",
        "documentation": {}
    },
    {
        "label": "MotionManipulator",
        "kind": 6,
        "importPath": "objects.motion.managers.motion_manipulator",
        "description": "objects.motion.managers.motion_manipulator",
        "peekOfCode": "class MotionManipulator:\n    def __init__(self, motion: \"Motion\"):\n        self.motion = motion\n    def move_wasd(self, direction: Directions) -> None:\n        wasd_location_map = {\n            UP: {SOUTHEAST: NORTHEAST, SOUTHWEST: NORTHWEST},\n            LEFT: {NORTHEAST: NORTHWEST, SOUTHEAST: SOUTHWEST},\n            DOWN: {NORTHEAST: SOUTHEAST, NORTHWEST: SOUTHWEST},\n            RIGHT: {NORTHWEST: NORTHEAST, SOUTHWEST: SOUTHEAST},\n        }",
        "detail": "objects.motion.managers.motion_manipulator",
        "documentation": {}
    },
    {
        "label": "MotionOriCalculator",
        "kind": 6,
        "importPath": "objects.motion.managers.motion_ori_calculator",
        "description": "objects.motion.managers.motion_ori_calculator",
        "peekOfCode": "class MotionOriCalculator:\n    \"\"\"Calculates the end orientation of a motion.\"\"\"\n    def __init__(self, motion: \"Motion\") -> None:\n        self.m = motion\n    def get_end_ori(self) -> Orientations:\n        if self.m.motion_type == FLOAT:\n            handpath_direction = self.get_handpath_direction(\n                self.m.start_loc, self.m.end_loc\n            )\n            return self.calculate_float_orientation(",
        "detail": "objects.motion.managers.motion_ori_calculator",
        "documentation": {}
    },
    {
        "label": "MotionTurnsManager",
        "kind": 6,
        "importPath": "objects.motion.managers.motion_turn_manager",
        "description": "objects.motion.managers.motion_turn_manager",
        "peekOfCode": "class MotionTurnsManager:\n    def __init__(self, motion: \"Motion\") -> None:\n        self.m = motion\n    def adjust_turns(self, adjustment: float) -> None:\n        \"\"\"Adjust the turns of a given motion object\"\"\"\n        new_turns = MotionTurnsManager.clamp_turns(self.m.turns + adjustment)\n        self.m.turns_manager.set_motion_turns(new_turns)\n    def set_turns(self, new_turns: Turns) -> None:\n        \"\"\"set the turns for a given motion object\"\"\"\n        clamped_turns = MotionTurnsManager.clamp_turns(new_turns)",
        "detail": "objects.motion.managers.motion_turn_manager",
        "documentation": {}
    },
    {
        "label": "MotionUpdater",
        "kind": 6,
        "importPath": "objects.motion.managers.motion_updater",
        "description": "objects.motion.managers.motion_updater",
        "peekOfCode": "class MotionUpdater:\n    def __init__(self, motion: \"Motion\") -> None:\n        self.motion = motion\n    def update_motion(self, motion_dict=None) -> None:\n        if motion_dict:\n            self.motion.attr_manager.update_attributes(motion_dict)\n        arrow_dict = {\n            LOC: self.motion.arrow.location_calculator.get_arrow_location(),\n            MOTION_TYPE: self.motion.motion_type,\n            TURNS: self.motion.turns,",
        "detail": "objects.motion.managers.motion_updater",
        "documentation": {}
    },
    {
        "label": "Motion",
        "kind": 6,
        "importPath": "objects.motion.motion",
        "description": "objects.motion.motion",
        "peekOfCode": "class Motion:\n    def __init__(self, pictograph: \"Pictograph\", motion_dict: dict) -> None:\n        self.pictograph = pictograph\n        self.motion_dict = motion_dict\n        self.ori_calculator = MotionOriCalculator(self)\n        self.manipulator = MotionManipulator(self)\n        self.attr_manager = MotionAttrManager(self)\n        self.turns_manager = MotionTurnsManager(self)\n        self.updater = MotionUpdater(self)\n        self.check = MotionChecker(self)",
        "detail": "objects.motion.motion",
        "documentation": {}
    },
    {
        "label": "GhostProp",
        "kind": 6,
        "importPath": "objects.prop.ghost_prop",
        "description": "objects.prop.ghost_prop",
        "peekOfCode": "class GhostProp(Prop):\n    \"\"\"Represents a ghost prop object, displaying the position that a prop will be while dragging if the user were to drop it.\"\"\"\n    def __init__(\n        self,\n        pictograph: \"Pictograph\",\n        attributes,\n        motion: \"Motion\",\n    ) -> None:\n        super().__init__(pictograph, attributes, motion)\n        self.setOpacity(0.2)",
        "detail": "objects.prop.ghost_prop",
        "documentation": {}
    },
    {
        "label": "Prop",
        "kind": 6,
        "importPath": "objects.prop.prop",
        "description": "objects.prop.prop",
        "peekOfCode": "class Prop(GraphicalObject):\n    loc: Locations\n    ori: Orientations\n    axis: Axes\n    prop_type: PropTypes\n    def __init__(self, scene, prop_dict: dict, motion: \"Motion\") -> None:\n        super().__init__(scene)\n        self.motion = motion\n        self.scene: Pictograph = scene\n        self.arrow: Arrow",
        "detail": "objects.prop.prop",
        "documentation": {}
    },
    {
        "label": "PropAttrManager",
        "kind": 6,
        "importPath": "objects.prop.prop_attr_manager",
        "description": "objects.prop.prop_attr_manager",
        "peekOfCode": "class PropAttrManager:\n    def __init__(self, prop: \"Prop\") -> None:\n        self.p = prop\n        self.update_attributes(self.p.prop_dict)\n        self.p.set_z_value_based_on_color()\n    def update_attributes(\n        self, prop_dict: dict[str, Union[Colors, Locations, MotionTypes, Turns]]\n    ) -> None:\n        prop_attributes = [COLOR, LOC, LAYER, ORI, AXIS, MOTION, PROP_TYPE]\n        for attr in prop_attributes:",
        "detail": "objects.prop.prop_attr_manager",
        "documentation": {}
    },
    {
        "label": "PropChecker",
        "kind": 6,
        "importPath": "objects.prop.prop_checker",
        "description": "objects.prop.prop_checker",
        "peekOfCode": "class PropChecker:\n    def __init__(self, prop: \"Prop\") -> None:\n        self.prop = prop\n    def is_radial(self) -> bool:\n        return self.prop.ori in [IN, OUT]\n    def is_nonradial(self) -> bool:\n        return self.prop.ori in [CLOCK, COUNTER]",
        "detail": "objects.prop.prop_checker",
        "documentation": {}
    },
    {
        "label": "Staff",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Staff(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = STAFF\n        super().__init__(pictograph, attributes, motion)\nclass BigStaff(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGSTAFF\n        super().__init__(pictograph, attributes, motion)\nclass Triad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "BigStaff",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class BigStaff(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGSTAFF\n        super().__init__(pictograph, attributes, motion)\nclass Triad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = TRIAD\n        super().__init__(pictograph, attributes, motion)\nclass BigTriad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Triad",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Triad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = TRIAD\n        super().__init__(pictograph, attributes, motion)\nclass BigTriad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGTRIAD\n        super().__init__(pictograph, attributes, motion)\nclass MiniHoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "BigTriad",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class BigTriad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGTRIAD\n        super().__init__(pictograph, attributes, motion)\nclass MiniHoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = MINIHOOP\n        super().__init__(pictograph, attributes, motion)\nclass Fan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "MiniHoop",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class MiniHoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = MINIHOOP\n        super().__init__(pictograph, attributes, motion)\nclass Fan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = FAN\n        super().__init__(pictograph, attributes, motion)\nclass BigFan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Fan",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Fan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = FAN\n        super().__init__(pictograph, attributes, motion)\nclass BigFan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGFAN\n        super().__init__(pictograph, attributes, motion)\nclass Club(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "BigFan",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class BigFan(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGFAN\n        super().__init__(pictograph, attributes, motion)\nclass Club(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = CLUB\n        super().__init__(pictograph, attributes, motion)\nclass Buugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Club",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Club(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = CLUB\n        super().__init__(pictograph, attributes, motion)\nclass Buugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BUUGENG\n        super().__init__(pictograph, attributes, motion)\nclass BigBuugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Buugeng",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Buugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BUUGENG\n        super().__init__(pictograph, attributes, motion)\nclass BigBuugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGBUUGENG\n        super().__init__(pictograph, attributes, motion)\nclass Fractalgeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "BigBuugeng",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class BigBuugeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGBUUGENG\n        super().__init__(pictograph, attributes, motion)\nclass Fractalgeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = FRACTALGENG\n        super().__init__(pictograph, attributes, motion)\nclass DoubleStar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Fractalgeng",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Fractalgeng(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = FRACTALGENG\n        super().__init__(pictograph, attributes, motion)\nclass DoubleStar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = DOUBLESTAR\n        super().__init__(pictograph, attributes, motion)\nclass BigHoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "DoubleStar",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class DoubleStar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = DOUBLESTAR\n        super().__init__(pictograph, attributes, motion)\nclass BigHoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGHOOP\n        super().__init__(pictograph, attributes, motion)\nclass BigDoubleStar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "BigHoop",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class BigHoop(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGHOOP\n        super().__init__(pictograph, attributes, motion)\nclass BigDoubleStar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGDOUBLESTAR\n        super().__init__(pictograph, attributes, motion)\nclass Quiad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "BigDoubleStar",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class BigDoubleStar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = BIGDOUBLESTAR\n        super().__init__(pictograph, attributes, motion)\nclass Quiad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = QUIAD\n        super().__init__(pictograph, attributes, motion)\nclass Sword(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Quiad",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Quiad(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = QUIAD\n        super().__init__(pictograph, attributes, motion)\nclass Sword(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = SWORD\n        super().__init__(pictograph, attributes, motion)\nclass Guitar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Sword",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Sword(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = SWORD\n        super().__init__(pictograph, attributes, motion)\nclass Guitar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = GUITAR\n        super().__init__(pictograph, attributes, motion)\nclass Ukulele(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Guitar",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Guitar(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = GUITAR\n        super().__init__(pictograph, attributes, motion)\nclass Ukulele(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = UKULELE\n        super().__init__(pictograph, attributes, motion)\nclass Chicken(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Ukulele",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Ukulele(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = UKULELE\n        super().__init__(pictograph, attributes, motion)\nclass Chicken(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = CHICKEN\n        super().__init__(pictograph, attributes, motion)",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "Chicken",
        "kind": 6,
        "importPath": "objects.prop.prop_classes",
        "description": "objects.prop.prop_classes",
        "peekOfCode": "class Chicken(Prop):\n    def __init__(self, pictograph: \"Pictograph\", attributes, motion: \"Motion\") -> None:\n        attributes[PROP_TYPE] = CHICKEN\n        super().__init__(pictograph, attributes, motion)",
        "detail": "objects.prop.prop_classes",
        "documentation": {}
    },
    {
        "label": "PropMouseEventHandler",
        "kind": 6,
        "importPath": "objects.prop.prop_mouse_event_handler",
        "description": "objects.prop.prop_mouse_event_handler",
        "peekOfCode": "class PropMouseEventHandler:\n    def __init__(self, prop: \"Prop\") -> None:\n        self.p = prop\n    def handle_mouse_press(self) -> None:\n        self.p.setSelected(True)\n        if isinstance(self.p.scene, self.p.scene.__class__):\n            if not self.p.ghost:\n                self.p.ghost = self.p.scene.ghost_props[self.p.color]\n            self.p.ghost.color = self.p.color\n            self.p.ghost.loc = self.p.loc",
        "detail": "objects.prop.prop_mouse_event_handler",
        "documentation": {}
    },
    {
        "label": "PropOffsetCalculator",
        "kind": 6,
        "importPath": "objects.prop.prop_offset_calculator",
        "description": "objects.prop.prop_offset_calculator",
        "peekOfCode": "class PropOffsetCalculator:\n    def __init__(self, prop: \"Prop\") -> None:\n        self.prop = prop\n    def get_offset(self, prop_length, prop_width) -> tuple[int, int]:\n        offset_map = {}\n        if self.prop.ori == IN:\n            offset_map = {\n                NORTH: (prop_width, 0),\n                SOUTH: (0, prop_length),\n                WEST: (0, 0),",
        "detail": "objects.prop.prop_offset_calculator",
        "documentation": {}
    },
    {
        "label": "PropRotAngleManager",
        "kind": 6,
        "importPath": "objects.prop.prop_rot_angle_manager",
        "description": "objects.prop.prop_rot_angle_manager",
        "peekOfCode": "class PropRotAngleManager:\n    def __init__(self, prop: \"Prop\") -> None:\n        self.prop = prop\n    def get_rotation_angle(self) -> int:\n        angle_map = {\n            IN: {\n                NORTH: 90,\n                SOUTH: 270,\n                WEST: 0,\n                EAST: 180,",
        "detail": "objects.prop.prop_rot_angle_manager",
        "documentation": {}
    },
    {
        "label": "PropUpdater",
        "kind": 6,
        "importPath": "objects.prop.prop_updater",
        "description": "objects.prop.prop_updater",
        "peekOfCode": "class PropUpdater:\n    def __init__(self, prop: \"Prop\") -> None:\n        self.p = prop\n        self.svg_file = self.p.svg_manager.get_svg_file()\n        self.p.svg_manager.setup_svg_renderer(self.svg_file)\n    def update_prop(\n        self, prop_dict: dict[str, Union[Colors, Locations, Orientations]] = None\n    ) -> None:\n        if prop_dict:\n            self.p.attr_manager.update_attributes(prop_dict)",
        "detail": "objects.prop.prop_updater",
        "documentation": {}
    },
    {
        "label": "GridItem",
        "kind": 6,
        "importPath": "objects.grid",
        "description": "objects.grid",
        "peekOfCode": "class GridItem(QGraphicsSvgItem):\n    def __init__(self, path) -> None:\n        super().__init__(path)\n        self.setFlag(QGraphicsSvgItem.GraphicsItemFlag.ItemIsSelectable, False)\n        self.setFlag(QGraphicsSvgItem.GraphicsItemFlag.ItemIsMovable, False)\n        self.setZValue(100)\n    def wheelEvent(self, event: QGraphicsSceneWheelEvent | None) -> None:\n        return super().wheelEvent(event)\n    def mousePressEvent(self, event) -> None:\n        event.ignore()",
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "GridPoint",
        "kind": 6,
        "importPath": "objects.grid",
        "description": "objects.grid",
        "peekOfCode": "class GridPoint(NamedTuple):\n    name: str\n    coordinates: QPointF\nclass GridLayer:\n    def __init__(self, points_data: dict[str, str]) -> None:\n        self.points: dict[str, GridPoint] = {}\n        for name, coords in points_data.items():\n            if coords != \"None\":\n                x, y = map(float, coords.strip(\"()\").split(\", \"))\n                self.points[name] = GridPoint(name, QPointF(x, y))",
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "GridLayer",
        "kind": 6,
        "importPath": "objects.grid",
        "description": "objects.grid",
        "peekOfCode": "class GridLayer:\n    def __init__(self, points_data: dict[str, str]) -> None:\n        self.points: dict[str, GridPoint] = {}\n        for name, coords in points_data.items():\n            if coords != \"None\":\n                x, y = map(float, coords.strip(\"()\").split(\", \"))\n                self.points[name] = GridPoint(name, QPointF(x, y))\n            else:\n                self.points[name] = GridPoint(name, None)\nclass GridData:",
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "GridData",
        "kind": 6,
        "importPath": "objects.grid",
        "description": "objects.grid",
        "peekOfCode": "class GridData:\n    def __init__(self, data: dict[str, Union[str, dict[str, dict[str, str]]]]) -> None:\n        self.hand_points_normal = GridLayer(data[\"hand_points\"][\"diamond\"][\"normal\"])\n        self.hand_points_strict = GridLayer(data[\"hand_points\"][\"diamond\"][\"strict\"])\n        self.layer2_points_normal = GridLayer(\n            data[\"layer2_points\"][\"diamond\"][\"normal\"]\n        )\n        self.layer2_points_strict = GridLayer(\n            data[\"layer2_points\"][\"diamond\"][\"strict\"]\n        )",
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "Grid",
        "kind": 6,
        "importPath": "objects.grid",
        "description": "objects.grid",
        "peekOfCode": "class Grid:\n    def __init__(self, scene: Union[\"ArrowBox\", \"PropBox\", \"Pictograph\"]) -> None:\n        self.scene = scene\n        self.items: dict[GridModes, GridItem] = {}\n        self.grid_mode = DIAMOND\n        self.grid_data = self._load_grid_data()\n        self._create_grid_items(scene)\n        self.center = self.grid_data.center_point.coordinates\n    def _load_grid_data(self) -> GridData:\n        with open(",
        "detail": "objects.grid",
        "documentation": {}
    },
    {
        "label": "all_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "all_letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_alpha_to_alpha_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_alpha_to_alpha_letters = [\"A\", \"B\", \"C\"]\nType1_beta_to_alpha_letters = [\"D\", \"E\", \"F\"]\nType1_beta_to_beta_letters = [\"G\", \"H\", \"I\"]\nType1_alpha_to_beta_letters = [\"J\", \"K\", \"L\"]\nType1_gamma_opp_parallel_letters = [\"M\", \"N\", \"O\"]\nType1_gamma_opp_antiparallel_letters = [\"P\", \"Q\", \"R\"]\nType1_gamma_same_dir_letters = [\"S\", \"T\", \"U\", \"V\"]\nType1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_beta_to_alpha_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_beta_to_alpha_letters = [\"D\", \"E\", \"F\"]\nType1_beta_to_beta_letters = [\"G\", \"H\", \"I\"]\nType1_alpha_to_beta_letters = [\"J\", \"K\", \"L\"]\nType1_gamma_opp_parallel_letters = [\"M\", \"N\", \"O\"]\nType1_gamma_opp_antiparallel_letters = [\"P\", \"Q\", \"R\"]\nType1_gamma_same_dir_letters = [\"S\", \"T\", \"U\", \"V\"]\nType1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)\nType1_same_prop_rot_dir_letters = [",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_beta_to_beta_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_beta_to_beta_letters = [\"G\", \"H\", \"I\"]\nType1_alpha_to_beta_letters = [\"J\", \"K\", \"L\"]\nType1_gamma_opp_parallel_letters = [\"M\", \"N\", \"O\"]\nType1_gamma_opp_antiparallel_letters = [\"P\", \"Q\", \"R\"]\nType1_gamma_same_dir_letters = [\"S\", \"T\", \"U\", \"V\"]\nType1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)\nType1_same_prop_rot_dir_letters = [\n    \"A\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_alpha_to_beta_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_alpha_to_beta_letters = [\"J\", \"K\", \"L\"]\nType1_gamma_opp_parallel_letters = [\"M\", \"N\", \"O\"]\nType1_gamma_opp_antiparallel_letters = [\"P\", \"Q\", \"R\"]\nType1_gamma_same_dir_letters = [\"S\", \"T\", \"U\", \"V\"]\nType1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)\nType1_same_prop_rot_dir_letters = [\n    \"A\",\n    \"B\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_gamma_opp_parallel_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_gamma_opp_parallel_letters = [\"M\", \"N\", \"O\"]\nType1_gamma_opp_antiparallel_letters = [\"P\", \"Q\", \"R\"]\nType1_gamma_same_dir_letters = [\"S\", \"T\", \"U\", \"V\"]\nType1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)\nType1_same_prop_rot_dir_letters = [\n    \"A\",\n    \"B\",\n    \"F\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_gamma_opp_antiparallel_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_gamma_opp_antiparallel_letters = [\"P\", \"Q\", \"R\"]\nType1_gamma_same_dir_letters = [\"S\", \"T\", \"U\", \"V\"]\nType1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)\nType1_same_prop_rot_dir_letters = [\n    \"A\",\n    \"B\",\n    \"F\",\n    \"G\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_gamma_same_dir_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_gamma_same_dir_letters = [\"S\", \"T\", \"U\", \"V\"]\nType1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)\nType1_same_prop_rot_dir_letters = [\n    \"A\",\n    \"B\",\n    \"F\",\n    \"G\",\n    \"H\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_gamma_opp_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_gamma_opp_letters = (\n    Type1_gamma_opp_parallel_letters + Type1_gamma_opp_antiparallel_letters\n)\nType1_same_prop_rot_dir_letters = [\n    \"A\",\n    \"B\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"L\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_same_prop_rot_dir_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_same_prop_rot_dir_letters = [\n    \"A\",\n    \"B\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"L\",\n    \"O\",\n    \"R\",\n    \"S\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_opp_prop_rot_dir_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_opp_prop_rot_dir_letters = [\"C\", \"D\", \"E\", \"I\", \"J\", \"K\", \"M\", \"N\", \"P\", \"Q\"]\nType1_hybrid_letters = [\"C\", \"F\", \"I\", \"L\", \"O\", \"R\", \"U\", \"V\"]\nType1_pro_letters = [\n    \"A\",\n    \"D\",\n    \"G\",\n    \"J\",\n    \"M\",\n    \"P\",\n    \"S\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_hybrid_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_hybrid_letters = [\"C\", \"F\", \"I\", \"L\", \"O\", \"R\", \"U\", \"V\"]\nType1_pro_letters = [\n    \"A\",\n    \"D\",\n    \"G\",\n    \"J\",\n    \"M\",\n    \"P\",\n    \"S\",\n]",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_pro_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_pro_letters = [\n    \"A\",\n    \"D\",\n    \"G\",\n    \"J\",\n    \"M\",\n    \"P\",\n    \"S\",\n]\nType1_anti_letters = [",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_anti_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_anti_letters = [\n    \"B\",\n    \"E\",\n    \"H\",\n    \"K\",\n    \"N\",\n    \"Q\",\n    \"T\",\n]\nType1_non_hybrid_letters = Type1_pro_letters + Type1_anti_letters",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_non_hybrid_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_non_hybrid_letters = Type1_pro_letters + Type1_anti_letters\nnon_hybrid_letters = Type1_non_hybrid_letters + [\"Φ-\", \"Ψ-\", \"Λ-\", \"α\", \"β\", \"Γ\"]\nhybrid_letters = Type1_hybrid_letters + [\n    \"Φ\",\n    \"Ψ\",\n    \"Λ\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "non_hybrid_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "non_hybrid_letters = Type1_non_hybrid_letters + [\"Φ-\", \"Ψ-\", \"Λ-\", \"α\", \"β\", \"Γ\"]\nhybrid_letters = Type1_hybrid_letters + [\n    \"Φ\",\n    \"Ψ\",\n    \"Λ\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"W-\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "hybrid_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "hybrid_letters = Type1_hybrid_letters + [\n    \"Φ\",\n    \"Ψ\",\n    \"Λ\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"W-\",\n    \"X-\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_alpha_beta_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_alpha_beta_letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_gamma_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_gamma_letters = [\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"U\",\n    \"S\",\n    \"T\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "alpha_ending_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "alpha_ending_letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"W\",\n    \"X\",\n    \"W-\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "beta_ending_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "beta_ending_letters = [\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"Y\",\n    \"Z\",\n    \"Y-\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "gamma_ending_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "gamma_ending_letters = [\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "alpha_starting_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "alpha_starting_letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"Σ\",\n    \"Δ\",\n    \"θ-\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "beta_starting_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "beta_starting_letters = [\n    \"G\",\n    \"H\",\n    \"I\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"θ\",\n    \"Ω\",\n    \"Σ-\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "gamma_starting_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "gamma_starting_letters = [\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type1_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type1_letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type2_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type2_letters = [\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"Σ\",\n    \"Δ\",\n    \"θ\",\n    \"Ω\",\n]",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type3_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type3_letters = [\n    \"W-\",\n    \"X-\",\n    \"Y-\",\n    \"Z-\",\n    \"Σ-\",\n    \"Δ-\",\n    \"θ-\",\n    \"Ω-\",\n]",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type4_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type4_letters = [\n    \"Φ\",\n    \"Ψ\",\n    \"Λ\",\n]\nType5_letters = [\n    \"Φ-\",\n    \"Ψ-\",\n    \"Λ-\",\n]",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type5_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type5_letters = [\n    \"Φ-\",\n    \"Ψ-\",\n    \"Λ-\",\n]\nType6_letters = [\n    \"α\",\n    \"β\",\n    \"Γ\",\n]",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Type6_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "Type6_letters = [\n    \"α\",\n    \"β\",\n    \"Γ\",\n]\ndash_letters = {\"W-\", \"X-\", \"Y-\", \"Z-\", \"Σ-\", \"Δ-\", \"θ-\", \"Ω-\", \"Φ-\", \"Ψ-\", \"Λ-\"}\npro_letters = {\n    \"A\",\n    \"C\",\n    \"D\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "dash_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "dash_letters = {\"W-\", \"X-\", \"Y-\", \"Z-\", \"Σ-\", \"Δ-\", \"θ-\", \"Ω-\", \"Φ-\", \"Ψ-\", \"Λ-\"}\npro_letters = {\n    \"A\",\n    \"C\",\n    \"D\",\n    \"F\",\n    \"G\",\n    \"I\",\n    \"J\",\n    \"L\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "pro_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "pro_letters = {\n    \"A\",\n    \"C\",\n    \"D\",\n    \"F\",\n    \"G\",\n    \"I\",\n    \"J\",\n    \"L\",\n    \"M\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "anti_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "anti_letters = {\n    \"B\",\n    \"C\",\n    \"E\",\n    \"F\",\n    \"H\",\n    \"I\",\n    \"K\",\n    \"L\",\n    \"N\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "dash_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "dash_letters = {\n    \"W-\",\n    \"X-\",\n    \"Y-\",\n    \"Z-\",\n    \"Σ-\",\n    \"Δ-\",\n    \"θ-\",\n    \"Ω-\",\n    \"Φ\",",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "static_letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.letter_lists",
        "description": "utilities.TypeChecking.letter_lists",
        "peekOfCode": "static_letters = {\"W\", \"X\", \"Y\", \"Z\", \"Σ\", \"Δ\", \"θ\", \"Ω\", \"Φ\", \"Ψ\", \"Λ\", \"α\", \"β\", \"Γ\"}",
        "detail": "utilities.TypeChecking.letter_lists",
        "documentation": {}
    },
    {
        "label": "Turns",
        "kind": 5,
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "peekOfCode": "Turns = Union[int, float]\nMotionTypes = Literal[\"pro\", \"anti\", \"float\", \"dash\", \"static\"]\nLocations = Literal[\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"]\nColors = Literal[\"blue\", \"red\"]\nOrientations = Literal[\"in\", \"out\", \"clock\", \"counter\"]\nPropRotDirs = Literal[\"cw\", \"ccw\", \"no_rot\"]",
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "MotionTypes",
        "kind": 5,
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "peekOfCode": "MotionTypes = Literal[\"pro\", \"anti\", \"float\", \"dash\", \"static\"]\nLocations = Literal[\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"]\nColors = Literal[\"blue\", \"red\"]\nOrientations = Literal[\"in\", \"out\", \"clock\", \"counter\"]\nPropRotDirs = Literal[\"cw\", \"ccw\", \"no_rot\"]",
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Locations",
        "kind": 5,
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "peekOfCode": "Locations = Literal[\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"]\nColors = Literal[\"blue\", \"red\"]\nOrientations = Literal[\"in\", \"out\", \"clock\", \"counter\"]\nPropRotDirs = Literal[\"cw\", \"ccw\", \"no_rot\"]",
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Colors",
        "kind": 5,
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "peekOfCode": "Colors = Literal[\"blue\", \"red\"]\nOrientations = Literal[\"in\", \"out\", \"clock\", \"counter\"]\nPropRotDirs = Literal[\"cw\", \"ccw\", \"no_rot\"]",
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "Orientations",
        "kind": 5,
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "peekOfCode": "Orientations = Literal[\"in\", \"out\", \"clock\", \"counter\"]\nPropRotDirs = Literal[\"cw\", \"ccw\", \"no_rot\"]",
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "PropRotDirs",
        "kind": 5,
        "importPath": "utilities.TypeChecking.MotionAttributes",
        "description": "utilities.TypeChecking.MotionAttributes",
        "peekOfCode": "PropRotDirs = Literal[\"cw\", \"ccw\", \"no_rot\"]",
        "detail": "utilities.TypeChecking.MotionAttributes",
        "documentation": {}
    },
    {
        "label": "PropTypes",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "PropTypes = Literal[\n    \"staff\",\n    \"bigstaff\",\n    \"club\",\n    \"buugeng\",\n    \"bigbuugeng\",\n    \"fractalgeng\",\n    \"fan\",\n    \"bigfan\",\n    \"triad\",",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "big_unilateral_prop_types",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "big_unilateral_prop_types = [\n    BIGHOOP,\n    BIGFAN,\n    BIGTRIAD,\n    GUITAR,\n    SWORD,\n    CHICKEN,\n]\nsmall_unilateral_prop_types = [\n    FAN,",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "small_unilateral_prop_types",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "small_unilateral_prop_types = [\n    FAN,\n    CLUB,\n    MINIHOOP,\n    TRIAD,\n    UKULELE,\n]\nbig_bilateral_prop_types = [\n    BIGSTAFF,\n    BIGBUUGENG,",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "big_bilateral_prop_types",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "big_bilateral_prop_types = [\n    BIGSTAFF,\n    BIGBUUGENG,\n    BIGDOUBLESTAR,\n]\nsmall_bilateral_prop_types = [\n    STAFF,\n    BUUGENG,\n    DOUBLESTAR,\n    QUIAD,",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "small_bilateral_prop_types",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "small_bilateral_prop_types = [\n    STAFF,\n    BUUGENG,\n    DOUBLESTAR,\n    QUIAD,\n    FRACTALGENG,\n]\nnon_strictly_placed_props = [\n    STAFF,\n    FAN,",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "non_strictly_placed_props",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "non_strictly_placed_props = [\n    STAFF,\n    FAN,\n    BIGFAN,\n    CLUB,\n    BUUGENG,\n    MINIHOOP,\n    TRIAD,\n    QUIAD,\n    UKULELE,",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "strictly_placed_props",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "strictly_placed_props = [\n    BIGHOOP,\n    DOUBLESTAR,\n    BIGTRIAD,\n    BIGFAN,\n    BIGBUUGENG,\n    BIGDOUBLESTAR,\n]\n### LISTS FOR ITERATION ###\nPropTypeslist = (",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "PropTypeslist",
        "kind": 5,
        "importPath": "utilities.TypeChecking.prop_types",
        "description": "utilities.TypeChecking.prop_types",
        "peekOfCode": "PropTypeslist = (\n    \"staff\",\n    \"bigstaff\",\n    \"club\",\n    \"buugeng\",\n    \"bigbuugeng\",\n    \"fractalgeng\",\n    \"fan\",\n    \"bigfan\",\n    \"triad\",",
        "detail": "utilities.TypeChecking.prop_types",
        "documentation": {}
    },
    {
        "label": "ParallelCombinationsSet",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "ParallelCombinationsSet = set[tuple[str, str, str, str]]\nHandpaths = Literal[\"dash_handpath\", \"static_handpath\", \"cw_handpath\", \"ccw_handpath\"]\nRotationAngles = Literal[0, 90, 180, 270]\nOptimalLocationEntries = dict[Literal[\"x\", \"y\"], float]\nStartEndLocationTuple = tuple[Locations]\nOptimalLocationDicts = dict[str, OptimalLocationEntries]\nPositions = Literal[\"alpha\", \"beta\", \"gamma\"]\nSpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Handpaths",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "Handpaths = Literal[\"dash_handpath\", \"static_handpath\", \"cw_handpath\", \"ccw_handpath\"]\nRotationAngles = Literal[0, 90, 180, 270]\nOptimalLocationEntries = dict[Literal[\"x\", \"y\"], float]\nStartEndLocationTuple = tuple[Locations]\nOptimalLocationDicts = dict[str, OptimalLocationEntries]\nPositions = Literal[\"alpha\", \"beta\", \"gamma\"]\nSpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "RotationAngles",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "RotationAngles = Literal[0, 90, 180, 270]\nOptimalLocationEntries = dict[Literal[\"x\", \"y\"], float]\nStartEndLocationTuple = tuple[Locations]\nOptimalLocationDicts = dict[str, OptimalLocationEntries]\nPositions = Literal[\"alpha\", \"beta\", \"gamma\"]\nSpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",\n    \"alpha4\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "OptimalLocationEntries",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "OptimalLocationEntries = dict[Literal[\"x\", \"y\"], float]\nStartEndLocationTuple = tuple[Locations]\nOptimalLocationDicts = dict[str, OptimalLocationEntries]\nPositions = Literal[\"alpha\", \"beta\", \"gamma\"]\nSpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",\n    \"alpha4\",\n    \"beta1\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "StartEndLocationTuple",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "StartEndLocationTuple = tuple[Locations]\nOptimalLocationDicts = dict[str, OptimalLocationEntries]\nPositions = Literal[\"alpha\", \"beta\", \"gamma\"]\nSpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",\n    \"alpha4\",\n    \"beta1\",\n    \"beta2\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "OptimalLocationDicts",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "OptimalLocationDicts = dict[str, OptimalLocationEntries]\nPositions = Literal[\"alpha\", \"beta\", \"gamma\"]\nSpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",\n    \"alpha4\",\n    \"beta1\",\n    \"beta2\",\n    \"beta3\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Positions",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "Positions = Literal[\"alpha\", \"beta\", \"gamma\"]\nSpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",\n    \"alpha4\",\n    \"beta1\",\n    \"beta2\",\n    \"beta3\",\n    \"beta4\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "SpecificPositions",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "SpecificPositions = Literal[\n    \"alpha1\",\n    \"alpha2\",\n    \"alpha3\",\n    \"alpha4\",\n    \"beta1\",\n    \"beta2\",\n    \"beta3\",\n    \"beta4\",\n    \"gamma1\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "ShiftHandpaths",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "ShiftHandpaths = Literal[\"cw_handpath\", \"ccw_handpath\"]\nHandpaths = Literal[\"dash_handpath\", \"static_handpath\", \"cw_handpath\", \"ccw_handpath\"]\nHexColors = Literal[\"#ED1C24\", \"#2E3192\"]\nDirections = Literal[\"left\", \"right\", \"up\", \"down\"]\nGridModes = Literal[\"diamond\", \"box\"]\nRadialOrientations = Literal[\"in\", \"out\"]\nNonRadialOrientations = Literal[\"clock\", \"counter\"]\nOrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Handpaths",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "Handpaths = Literal[\"dash_handpath\", \"static_handpath\", \"cw_handpath\", \"ccw_handpath\"]\nHexColors = Literal[\"#ED1C24\", \"#2E3192\"]\nDirections = Literal[\"left\", \"right\", \"up\", \"down\"]\nGridModes = Literal[\"diamond\", \"box\"]\nRadialOrientations = Literal[\"in\", \"out\"]\nNonRadialOrientations = Literal[\"clock\", \"counter\"]\nOrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "HexColors",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "HexColors = Literal[\"#ED1C24\", \"#2E3192\"]\nDirections = Literal[\"left\", \"right\", \"up\", \"down\"]\nGridModes = Literal[\"diamond\", \"box\"]\nRadialOrientations = Literal[\"in\", \"out\"]\nNonRadialOrientations = Literal[\"clock\", \"counter\"]\nOrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Directions",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "Directions = Literal[\"left\", \"right\", \"up\", \"down\"]\nGridModes = Literal[\"diamond\", \"box\"]\nRadialOrientations = Literal[\"in\", \"out\"]\nNonRadialOrientations = Literal[\"clock\", \"counter\"]\nOrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "GridModes",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "GridModes = Literal[\"diamond\", \"box\"]\nRadialOrientations = Literal[\"in\", \"out\"]\nNonRadialOrientations = Literal[\"clock\", \"counter\"]\nOrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",\n    \"pro_vs_anti\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "RadialOrientations",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "RadialOrientations = Literal[\"in\", \"out\"]\nNonRadialOrientations = Literal[\"clock\", \"counter\"]\nOrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",\n    \"pro_vs_anti\",\n    \"static_vs_pro\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "NonRadialOrientations",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "NonRadialOrientations = Literal[\"clock\", \"counter\"]\nOrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",\n    \"pro_vs_anti\",\n    \"static_vs_pro\",\n    \"static_vs_anti\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "OrientationTypes",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "OrientationTypes = Literal[\"radial\", \"nonradial\"]\nAxes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",\n    \"pro_vs_anti\",\n    \"static_vs_pro\",\n    \"static_vs_anti\",\n    \"dash_vs_pro\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Axes",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "Axes = Literal[\"horizontal\", \"vertical\"]\nMotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",\n    \"pro_vs_anti\",\n    \"static_vs_pro\",\n    \"static_vs_anti\",\n    \"dash_vs_pro\",\n    \"dash_vs_anti\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionTypeCombinations",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "MotionTypeCombinations = Literal[\n    \"pro_vs_pro\",\n    \"anti_vs_anti\",\n    \"static_vs_static\",\n    \"pro_vs_anti\",\n    \"static_vs_pro\",\n    \"static_vs_anti\",\n    \"dash_vs_pro\",\n    \"dash_vs_anti\",\n    \"dash_vs_static\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LeadStates",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "LeadStates = Literal[\"leading\", \"trailing\"]\nVtgTimings = Literal[\"split\", \"together\"]\nVtgDirections = Literal[\"same\", \"opp\"]\nOpenCloseStates = Literal[\"open\", \"close\"]\nLetters = Literal[\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "VtgTimings",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "VtgTimings = Literal[\"split\", \"together\"]\nVtgDirections = Literal[\"same\", \"opp\"]\nOpenCloseStates = Literal[\"open\", \"close\"]\nLetters = Literal[\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "VtgDirections",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "VtgDirections = Literal[\"same\", \"opp\"]\nOpenCloseStates = Literal[\"open\", \"close\"]\nLetters = Literal[\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "OpenCloseStates",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "OpenCloseStates = Literal[\"open\", \"close\"]\nLetters = Literal[\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Letters",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "Letters = Literal[\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "AdjustmentStrs",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "AdjustmentStrs = Literal[\"-1\", \"-0.5\", \"+1\", \"+0.5\"]\nAdjustmentNums = Union[float, int]\nLetterTypes = Literal[\"Type1\", \"Type2\", \"Type3\", \"Type4\", \"Type5\", \"Type6\"]\nLetterTypeDescriptions = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nMotionAttributes = Literal[\n    \"color\",\n    \"arrow\",\n    \"prop\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "AdjustmentNums",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "AdjustmentNums = Union[float, int]\nLetterTypes = Literal[\"Type1\", \"Type2\", \"Type3\", \"Type4\", \"Type5\", \"Type6\"]\nLetterTypeDescriptions = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nMotionAttributes = Literal[\n    \"color\",\n    \"arrow\",\n    \"prop\",\n    \"motion_type\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypes",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "LetterTypes = Literal[\"Type1\", \"Type2\", \"Type3\", \"Type4\", \"Type5\", \"Type6\"]\nLetterTypeDescriptions = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nMotionAttributes = Literal[\n    \"color\",\n    \"arrow\",\n    \"prop\",\n    \"motion_type\",\n    \"prop_rot_dir\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterTypeDescriptions",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "LetterTypeDescriptions = Literal[\n    \"Dual-Shift\", \"Shift\", \"Cross-Shift\", \"Dash\", \"Dual-Dash\", \"Static\"\n]\nMotionAttributes = Literal[\n    \"color\",\n    \"arrow\",\n    \"prop\",\n    \"motion_type\",\n    \"prop_rot_dir\",\n    \"turns\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "MotionAttributes",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "MotionAttributes = Literal[\n    \"color\",\n    \"arrow\",\n    \"prop\",\n    \"motion_type\",\n    \"prop_rot_dir\",\n    \"turns\",\n    \"start_loc\",\n    \"start_ori\",\n    \"end_loc\",",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "Pictograph_Key",
        "kind": 5,
        "importPath": "utilities.TypeChecking.TypeChecking",
        "description": "utilities.TypeChecking.TypeChecking",
        "peekOfCode": "Pictograph_Key = str",
        "detail": "utilities.TypeChecking.TypeChecking",
        "documentation": {}
    },
    {
        "label": "LetterCalculator",
        "kind": 6,
        "importPath": "utilities.letter_calculator",
        "description": "utilities.letter_calculator",
        "peekOfCode": "class LetterCalculator:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        self.letters = pictograph.main_widget.letters\n        self.parallel_combinations: set[\n            tuple[str, str, str, str]\n        ] = parallel_combinations\n        self.cached_parallel = None\n        self.cached_handpath = None\n    def get_current_letter(self) -> all_letters:",
        "detail": "utilities.letter_calculator",
        "documentation": {}
    },
    {
        "label": "LetterItem",
        "kind": 6,
        "importPath": "utilities.letter_item",
        "description": "utilities.letter_item",
        "peekOfCode": "class LetterItem(QGraphicsSvgItem):\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        super().__init__()\n        self.p = pictograph\n    def position_letter_item(self) -> None:\n        x = int(self.boundingRect().height() / 2)\n        y = int(self.p.height() - (self.boundingRect().height() * 1.5))\n        self.setPos(x, y)\n    def set_letter_renderer(self) -> None:\n        letter_type = LetterType.get_letter_type(self.p.letter)",
        "detail": "utilities.letter_item",
        "documentation": {}
    },
    {
        "label": "SvgResizer",
        "kind": 6,
        "importPath": "utilities.svg_resizer",
        "description": "utilities.svg_resizer",
        "peekOfCode": "class SvgResizer(QMainWindow):\n    \"\"\"\n    A class for resizing SVG files.\n    Attributes:\n        svg_file_paths (list[str]): The list of selected SVG file paths.\n    Methods:\n        __init__(): Initializes the SvgResizer class.\n        initUI(): Initializes the user interface.\n        select_svg_files(): Opens a file dialog to select SVG files.\n        load_thumbnails(svg_file_paths): Loads SVG thumbnails into the graphics view.",
        "detail": "utilities.svg_resizer",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "utilities.svg_resizer",
        "description": "utilities.svg_resizer",
        "peekOfCode": "app = QApplication(sys.argv)\nsvg_resizer = SvgResizer()\nsys.exit(app.exec())",
        "detail": "utilities.svg_resizer",
        "documentation": {}
    },
    {
        "label": "svg_resizer",
        "kind": 5,
        "importPath": "utilities.svg_resizer",
        "description": "utilities.svg_resizer",
        "peekOfCode": "svg_resizer = SvgResizer()\nsys.exit(app.exec())",
        "detail": "utilities.svg_resizer",
        "documentation": {}
    },
    {
        "label": "WindowGeometryManager",
        "kind": 6,
        "importPath": "utilities.window_manager",
        "description": "utilities.window_manager",
        "peekOfCode": "class WindowGeometryManager:\n    def __init__(self, window: \"MainWindow\") -> None:\n        self.window = window\n    def set_dimensions(self) -> None:\n        screens = QGuiApplication.screens()\n        screen = screens[1] if len(screens) > 1 else QGuiApplication.primaryScreen()\n        available_geometry = screen.availableGeometry()\n        window_width = int(available_geometry.width() * 0.9)\n        window_height = int(available_geometry.height() * 0.9)\n        x = available_geometry.x() + int(",
        "detail": "utilities.window_manager",
        "documentation": {}
    },
    {
        "label": "ActionButtonFrame",
        "kind": 6,
        "importPath": "widgets.codex.action_button_frame",
        "description": "widgets.codex.action_button_frame",
        "peekOfCode": "class ActionButtonFrame(QFrame):\n    def __init__(self, button_panel: \"CodexButtonPanel\") -> None:\n        super().__init__(button_panel)\n        self.bp = button_panel\n        # self.select_all_button = self._create_button(\n        #     \"Select All\", self.bp.select_all_letters\n        # )\n        # self.deselect_all_button = self._create_button(\n        #     \"Deselect All\", self.bp.deselect_all_letters\n        # )",
        "detail": "widgets.codex.action_button_frame",
        "documentation": {}
    },
    {
        "label": "Codex",
        "kind": 6,
        "importPath": "widgets.codex.codex",
        "description": "widgets.codex.codex",
        "peekOfCode": "class Codex(QWidget):\n    imageGenerated = pyqtSignal(str)\n    selected_letters: list[Letters] = []\n    def __init__(self, main_tab_widget: \"MainTabWidget\") -> None:\n        super().__init__(main_tab_widget)\n        self.main_tab_widget = main_tab_widget\n        self.letters_dict = self.main_tab_widget.main_widget.letters\n        self.scroll_area = ScrollArea(self)\n        self.image_generator = CodexImageGenerator(self)\n        self.button_panel = CodexButtonPanel(self)",
        "detail": "widgets.codex.codex",
        "documentation": {}
    },
    {
        "label": "CodexButtonPanel",
        "kind": 6,
        "importPath": "widgets.codex.codex_button_panel",
        "description": "widgets.codex.codex_button_panel",
        "peekOfCode": "class CodexButtonPanel(QFrame):\n    def __init__(self, codex: \"Codex\") -> None:\n        super().__init__(codex)\n        self.codex = codex\n        self.letter_btn_frame = LetterButtonFrame(self)\n        # self.action_btn_frame = ActionButtonFrame(self)\n        self._setup_layout()\n    def _setup_layout(self) -> QFrame:\n        self.setStyleSheet(\"QFrame { border: 1px solid black; }\")\n        self.setContentsMargins(0, 0, 0, 0)",
        "detail": "widgets.codex.codex_button_panel",
        "documentation": {}
    },
    {
        "label": "CodexImageGenerator",
        "kind": 6,
        "importPath": "widgets.codex.codex_image_generator",
        "description": "widgets.codex.codex_image_generator",
        "peekOfCode": "class CodexImageGenerator:\n    def __init__(self, codex: \"Codex\") -> None:\n        self.codex = codex\n    def generate_selected_images(self) -> None:\n        main_widget = self.codex.parentWidget()\n        main_widget.setEnabled(False)\n        QApplication.setOverrideCursor(Qt.CursorShape.WaitCursor)\n        self.codex.setMouseTracking(False)\n        for letter in self.codex.selected_letters:\n            pictograph_dict_list = self.codex.main_tab_widget.main_widget.letters[",
        "detail": "widgets.codex.codex_image_generator",
        "documentation": {}
    },
    {
        "label": "AdjustTurnsButton",
        "kind": 6,
        "importPath": "widgets.factories.button_factory.buttons.adjust_turns_button",
        "description": "widgets.factories.button_factory.buttons.adjust_turns_button",
        "peekOfCode": "class AdjustTurnsButton(QPushButton):\n    def __init__(self, parent_widget: \"TurnsWidget\") -> None:\n        super().__init__(parent_widget)\n        self.parent_widget = parent_widget\n    def update_adjust_turns_button_size(self, button_size) -> None:\n        self.button_size = button_size\n        self.border_radius = button_size / 2\n        self.setStyleSheet(self._get_button_style())\n        self.setFont(QFont(\"Arial\", int(button_size * 0.3)))\n    def _get_button_style(self) -> str:",
        "detail": "widgets.factories.button_factory.buttons.adjust_turns_button",
        "documentation": {}
    },
    {
        "label": "RotDirButton",
        "kind": 6,
        "importPath": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "description": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "peekOfCode": "class RotDirButton(QPushButton):\n    def __init__(self, direction) -> None:\n        super().__init__()\n        self.direction = direction\n    def get_button_style(self, pressed: bool) -> str:\n        if pressed:\n            return \"\"\"\n                QPushButton {\n                    background-color: #ccd9ff;\n                    border: 2px solid #555555;",
        "detail": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "documentation": {}
    },
    {
        "label": "OpenCloseButton",
        "kind": 6,
        "importPath": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "description": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "peekOfCode": "class OpenCloseButton(RotDirButton):\n    def __init__(self, open_close_state: VtgDirections) -> None:\n        super().__init__(open_close_state)\n        self.open_close_dir = open_close_state\nclass VtgDirButton(RotDirButton):\n    def __init__(self, vtg_dir: VtgDirections) -> None:\n        super().__init__(vtg_dir)\n        self.vtg_dir = vtg_dir\nclass PropRotDirButton(RotDirButton):\n    def __init__(self, prop_rot_dir: PropRotDirs) -> None:",
        "detail": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "documentation": {}
    },
    {
        "label": "VtgDirButton",
        "kind": 6,
        "importPath": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "description": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "peekOfCode": "class VtgDirButton(RotDirButton):\n    def __init__(self, vtg_dir: VtgDirections) -> None:\n        super().__init__(vtg_dir)\n        self.vtg_dir = vtg_dir\nclass PropRotDirButton(RotDirButton):\n    def __init__(self, prop_rot_dir: PropRotDirs) -> None:\n        super().__init__(prop_rot_dir)\n        self.prop_rot_dir = prop_rot_dir",
        "detail": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "documentation": {}
    },
    {
        "label": "PropRotDirButton",
        "kind": 6,
        "importPath": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "description": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "peekOfCode": "class PropRotDirButton(RotDirButton):\n    def __init__(self, prop_rot_dir: PropRotDirs) -> None:\n        super().__init__(prop_rot_dir)\n        self.prop_rot_dir = prop_rot_dir",
        "detail": "widgets.factories.button_factory.buttons.rot_dir_buttons",
        "documentation": {}
    },
    {
        "label": "SwapButton",
        "kind": 6,
        "importPath": "widgets.factories.button_factory.buttons.swap_button",
        "description": "widgets.factories.button_factory.buttons.swap_button",
        "peekOfCode": "class SwapButton(QPushButton):\n    def __init__(\n        self,\n        parent_widget: Union[\"StartEndLocWidget\", \"TurnsWidget\", \"MotionTypeWidget\"],\n        text=None,\n    ) -> None:\n        super().__init__(text, parent_widget)\n        self.parent_widget = parent_widget\n    def update_attr_box_adjust_turns_button_size(self, button_size) -> None:\n        self.button_size = button_size",
        "detail": "widgets.factories.button_factory.buttons.swap_button",
        "documentation": {}
    },
    {
        "label": "ButtonFactory",
        "kind": 6,
        "importPath": "widgets.factories.button_factory.button_factory",
        "description": "widgets.factories.button_factory.button_factory",
        "peekOfCode": "class ButtonFactory:\n    @staticmethod\n    def create_vtg_dir_button(icon_path: str, callback, vtg_dir) -> VtgDirButton:\n        button = VtgDirButton(vtg_dir)\n        button.setIcon(QIcon(icon_path))\n        button.clicked.connect(callback)\n        return button\n    @staticmethod\n    def create_prop_rot_dir_button(\n        icon_path: str, callback, prop_rot_dir",
        "detail": "widgets.factories.button_factory.button_factory",
        "documentation": {}
    },
    {
        "label": "TurnsBoxFactory",
        "kind": 6,
        "importPath": "widgets.factories.attr_box_factory",
        "description": "widgets.factories.attr_box_factory",
        "peekOfCode": "class TurnsBoxFactory:\n    def __init__(self, turns_panel: \"TurnsPanel\") -> None:\n        self.turns_panel = turns_panel\n    def create_boxes(self) -> list[TurnsBox]:\n        attributes = []\n        if self.turns_panel.attribute_type == MOTION_TYPE:\n            return [\n                TurnsBox(self.turns_panel, MOTION_TYPE, motion_type)\n                for motion_type in [PRO, ANTI, DASH, STATIC]\n            ]",
        "detail": "widgets.factories.attr_box_factory",
        "documentation": {}
    },
    {
        "label": "LetterFactory",
        "kind": 6,
        "importPath": "widgets.factories.letter_factory",
        "description": "widgets.factories.letter_factory",
        "peekOfCode": "class LetterFactory:\n    _letter_cache = {}\n    @classmethod\n    def create_letter(cls, letter_str: str) -> Letters:\n        if letter_str not in cls._letter_cache:\n            cls._letter_cache[letter_str] = Letters(letter_str)\n        return cls._letter_cache[letter_str]",
        "detail": "widgets.factories.letter_factory",
        "documentation": {}
    },
    {
        "label": "PropFactory",
        "kind": 6,
        "importPath": "widgets.factories.prop_factory",
        "description": "widgets.factories.prop_factory",
        "peekOfCode": "class PropFactory:\n    def __init__(self):\n        self.prop_classes = {\n            STAFF: Staff,\n            BIGSTAFF: BigStaff,\n            TRIAD: Triad,\n            BIGTRIAD: BigTriad,\n            MINIHOOP: MiniHoop,\n            FAN: Fan,\n            BIGFAN: BigFan,",
        "detail": "widgets.factories.prop_factory",
        "documentation": {}
    },
    {
        "label": "ArrowBox",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox",
        "peekOfCode": "class ArrowBox(BaseObjectBox):\n    def __init__(\n        self, main_widget: \"MainWidget\", graph_editor: \"GraphEditorFrame\"\n    ) -> None:\n        super().__init__(main_widget, graph_editor)\n        self.main_widget = main_widget\n        self.view = ArrowBoxView(self, graph_editor)\n        self.grid = Grid(self)\n        self.target_arrow: \"Arrow\" = None\n        self.drag = None",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox",
        "documentation": {}
    },
    {
        "label": "ArrowBoxDrag",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_drag",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_drag",
        "peekOfCode": "class ArrowBoxDrag(BaseObjectBoxDrag):\n    def __init__(\n        self, main_widget: \"MainWidget\", pictograph: \"Pictograph\", arrowbox: \"ArrowBox\"\n    ) -> None:\n        super().__init__(main_widget, pictograph, arrowbox)\n        self.arrowbox = arrowbox\n        self.BaseObjectBox = arrowbox\n        self.ghost: GhostArrow = None\n        self.start_ori = IN\n        self.setup_dependencies(main_widget, pictograph, arrowbox)",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_drag",
        "documentation": {}
    },
    {
        "label": "ArrowBoxView",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_view",
        "peekOfCode": "class ArrowBoxView(BaseObjectBoxView):\n    def __init__(self, arrowbox: \"ArrowBox\", graph_editor: \"GraphEditorFrame\") -> None:\n        super().__init__(arrowbox, graph_editor)\n        self.setScene(arrowbox)\n        self.arrowbox = arrowbox\n    def leaveEvent(self, event) -> None:\n        self.arrowbox.dim_all_arrows()",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.arrowbox.arrowbox_view",
        "documentation": {}
    },
    {
        "label": "BaseObjectBox",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "peekOfCode": "class BaseObjectBox(QGraphicsScene):\n    def __init__(\n        self, main_widget: \"MainWidget\", graph_editor: \"GraphEditorFrame\"\n    ) -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.main_window = main_widget.main_window\n        self.pictograph = graph_editor.main_pictograph\n        self.setSceneRect(0, 0, 950, 950)\n        self.view: BaseObjectBoxView = None",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox",
        "documentation": {}
    },
    {
        "label": "BaseObjectBoxDrag",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "peekOfCode": "class BaseObjectBoxDrag(QWidget):\n    def __init__(\n        self,\n        main_widget: \"MainWidget\",\n        pictograph: \"Pictograph\",\n        BaseObjectBox: \"BaseObjectBox\",\n    ) -> None:\n        super().__init__(main_widget)\n        self.setParent(main_widget)\n        self.setWindowFlags(Qt.WindowType.FramelessWindowHint)",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_drag",
        "documentation": {}
    },
    {
        "label": "BaseObjectBoxView",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "peekOfCode": "class BaseObjectBoxView(QGraphicsView):\n    def __init__(\n        self, BaseObjectBox: \"BaseObjectBox\", graph_editor: \"GraphEditorFrame\"\n    ) -> None:\n        super().__init__()\n        self.graph_editor = graph_editor\n        self.setScene(BaseObjectBox)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.BaseObjectBox = BaseObjectBox",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.base_objectbox.base_objectbox_view",
        "documentation": {}
    },
    {
        "label": "PropBox",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox",
        "peekOfCode": "class PropBox(BaseObjectBox):\n    def __init__(\n        self, main_widget: \"MainWidget\", graph_editor: \"GraphEditorFrame\"\n    ) -> None:\n        super().__init__(main_widget, graph_editor)\n        self.setup_properties(main_widget, graph_editor)\n        self.setup_ui()\n        self.populate_props()\n    def setup_properties(\n        self, main_widget: \"MainWidget\", graph_editor: \"GraphEditorFrame\"",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox",
        "documentation": {}
    },
    {
        "label": "PropBoxDrag",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_drag",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_drag",
        "peekOfCode": "class PropBoxDrag(BaseObjectBoxDrag):\n    def __init__(\n        self, main_widget: \"MainWidget\", pictograph: \"Pictograph\", propbox: \"PropBox\"\n    ) -> None:\n        super().__init__(main_widget, pictograph, propbox)\n        self.propbox = propbox\n        self.arrow = None\n    def match_target_prop(self, target_prop: \"Prop\") -> None:\n        self.target_prop = target_prop\n        self.arrow = target_prop.motion.arrow",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_drag",
        "documentation": {}
    },
    {
        "label": "PropBoxView",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_view",
        "description": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_view",
        "peekOfCode": "class PropBoxView(BaseObjectBoxView):\n    def __init__(self, propbox: \"PropBox\", graph_editor: \"GraphEditorFrame\") -> None:\n        super().__init__(propbox, graph_editor)\n        self.setScene(propbox)\n        self.propbox = propbox",
        "detail": "widgets.graph_editor_tab.graph_editor_object_panel.propbox.propbox_view",
        "documentation": {}
    },
    {
        "label": "GraphEditorTurnsBox",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_attr_box",
        "description": "widgets.graph_editor_tab.graph_editor_attr_box",
        "peekOfCode": "class GraphEditorTurnsBox(TurnsBox):\n    def __init__(\n        self, turns_panel: \"TurnsPanel\", pictograph: \"Pictograph\", color: Colors\n    ) -> None:\n        super().__init__(turns_panel, pictograph)\n        self.color = color\n        self.pictograph = pictograph\n        self._setup_widgets()\n        self.apply_border_style(HEX_RED if self.color == RED else HEX_BLUE)\n    def _setup_widgets(self) -> None:",
        "detail": "widgets.graph_editor_tab.graph_editor_attr_box",
        "documentation": {}
    },
    {
        "label": "GraphEditorAttrPanel",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_attr_panel",
        "description": "widgets.graph_editor_tab.graph_editor_attr_panel",
        "peekOfCode": "class GraphEditorAttrPanel(TurnsPanel):\n    def __init__(self, graph_editor: \"GraphEditorFrame\") -> None:\n        self.graph_editor = graph_editor\n        super().__init__(graph_editor)\n        self.setup_layouts()\n    def _setup_attr_boxes(self) -> None:\n        self.blue_attr_box: GraphEditorTurnsBox = GraphEditorTurnsBox(\n            self, self.graph_editor.main_pictograph, BLUE\n        )\n        self.red_attr_box: GraphEditorTurnsBox = GraphEditorTurnsBox(",
        "detail": "widgets.graph_editor_tab.graph_editor_attr_panel",
        "documentation": {}
    },
    {
        "label": "GraphEditorFrame",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_frame",
        "description": "widgets.graph_editor_tab.graph_editor_frame",
        "peekOfCode": "class GraphEditorFrame(QFrame):\n    def __init__(\n        self, main_widget: \"MainWidget\", graph_editor_tab: \"GraphEditorTab\"\n    ) -> None:\n        super().__init__()\n        self._setup_main_widget_attributes(main_widget)\n        # self._setup_frame_style()\n        self._create_children(main_widget)\n        self._setup_main_layout()\n        self._apply_layout()",
        "detail": "widgets.graph_editor_tab.graph_editor_frame",
        "documentation": {}
    },
    {
        "label": "GraphEditorHeaderWidget",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_header_widget",
        "description": "widgets.graph_editor_tab.graph_editor_header_widget",
        "peekOfCode": "class GraphEditorHeaderWidget(HeaderWidget):\n    def __init__(self, turns_box: \"GraphEditorTurnsBox\") -> None:\n        super().__init__(turns_box)\n        self.header_label = self._setup_header_label()\n        self.rotate_cw_button = self._create_rotate_motion_button(\n            f\"{ICON_DIR}rotate_cw.png\", self._rotate_cw\n        )\n        self.rotate_ccw_button = self._create_rotate_motion_button(\n            f\"{ICON_DIR}rotate_ccw.png\", self._rotate_ccw\n        )",
        "detail": "widgets.graph_editor_tab.graph_editor_header_widget",
        "documentation": {}
    },
    {
        "label": "KeyEventHandler",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_key_event_handler",
        "description": "widgets.graph_editor_tab.graph_editor_key_event_handler",
        "peekOfCode": "class KeyEventHandler:\n    \"\"\"\n    Handles key events for the graph editor.\n    Args:\n        event (QKeyEvent): The key event.\n        main_widget (MainWidget): The main widget.\n        pictograph (Pictograph): The graph board.\n    Returns:\n        None\n    \"\"\"",
        "detail": "widgets.graph_editor_tab.graph_editor_key_event_handler",
        "documentation": {}
    },
    {
        "label": "GraphEditorPictograph",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_pictograph",
        "description": "widgets.graph_editor_tab.graph_editor_pictograph",
        "peekOfCode": "class GraphEditorPictograph(Pictograph):\n    def __init__(\n        self, main_widget: \"MainWidget\", graph_editor: \"GraphEditorFrame\"\n    ) -> None:\n        super().__init__(main_widget, graph_type=\"main\")\n        self.main_widget = main_widget\n        self.graph_editor = graph_editor\n        self.view: GraphEditorPictographView",
        "detail": "widgets.graph_editor_tab.graph_editor_pictograph",
        "documentation": {}
    },
    {
        "label": "GraphEditorPictographView",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_pictograph_view",
        "description": "widgets.graph_editor_tab.graph_editor_pictograph_view",
        "peekOfCode": "class GraphEditorPictographView(QGraphicsView):\n    def __init__(self, main_pictograph: \"GraphEditorPictograph\") -> None:\n        super().__init__(main_pictograph)\n        self.main_pictograph = main_pictograph\n        self.setAlignment(Qt.AlignmentFlag.AlignTop | Qt.AlignmentFlag.AlignLeft)\n        self.setScene(self.main_pictograph)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.buttons = self.init_buttons()\n        self.add_black_borders()",
        "detail": "widgets.graph_editor_tab.graph_editor_pictograph_view",
        "documentation": {}
    },
    {
        "label": "GraphEditorPictographWidget",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_pictograph_widget",
        "description": "widgets.graph_editor_tab.graph_editor_pictograph_widget",
        "peekOfCode": "class GraphEditorPictographWidget(QWidget):\n    def __init__(\n        self,\n        graph_editor: \"GraphEditorFrame\",\n        main_pictograph_view: \"GraphEditorPictographView\",\n    ) -> None:\n        super().__init__(graph_editor)\n        self.graph_editor = graph_editor\n        self.main_pictograph_view = main_pictograph_view\n        self.layout: QVBoxLayout = QVBoxLayout(self)",
        "detail": "widgets.graph_editor_tab.graph_editor_pictograph_widget",
        "documentation": {}
    },
    {
        "label": "GraphEditorTab",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_tab",
        "description": "widgets.graph_editor_tab.graph_editor_tab",
        "peekOfCode": "class GraphEditorTab(QFrame):\n    def __init__(self, main_widget: \"MainWidget\", main_tab_widget: \"MainTabWidget\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.main_window = main_widget.main_window\n        self.main_layout = QHBoxLayout(self)\n        self.setup_ui()\n        # self.add_black_borders()\n    def add_black_borders(self) -> None:\n        self.setFrameStyle(QFrame.Shape.Box | QFrame.Shadow.Plain)",
        "detail": "widgets.graph_editor_tab.graph_editor_tab",
        "documentation": {}
    },
    {
        "label": "GraphEditorTurnsWidget",
        "kind": 6,
        "importPath": "widgets.graph_editor_tab.graph_editor_turns_widget",
        "description": "widgets.graph_editor_tab.graph_editor_turns_widget",
        "peekOfCode": "class GraphEditorTurnsWidget(TurnsWidget):\n    def __init__(self, turns_box: \"GraphEditorTurnsBox\") -> None:\n        super().__init__(turns_box)\n        self.clockwise_pixmap = self._create_clock_pixmap(CLOCKWISE_ICON)\n        self.counter_clockwise_pixmap = self._create_clock_pixmap(\n            COUNTER_CLOCKWISE_ICON\n        )\n        self._setup_ui()\n    def _setup_ui(self) -> None:\n        # super().setup_ui()",
        "detail": "widgets.graph_editor_tab.graph_editor_turns_widget",
        "documentation": {}
    },
    {
        "label": "LetterButton",
        "kind": 6,
        "importPath": "widgets.letter_button_frame.components.letter_button",
        "description": "widgets.letter_button_frame.components.letter_button",
        "peekOfCode": "class LetterButton(QPushButton):\n    def __init__(self, icon_path: str, letter_str: str) -> None:\n        super().__init__()\n        self.setIcon(QIcon(icon_path))\n        self.setFlat(True)\n        self.setStyleSheet(self.get_button_style(False))\n        self.letter = letter_str\n    def get_button_style(self, pressed: bool) -> str:\n        if pressed:\n            return \"\"\"",
        "detail": "widgets.letter_button_frame.components.letter_button",
        "documentation": {}
    },
    {
        "label": "LetterButtonClickHandler",
        "kind": 6,
        "importPath": "widgets.letter_button_frame.components.letter_button_click_handler",
        "description": "widgets.letter_button_frame.components.letter_button_click_handler",
        "peekOfCode": "class LetterButtonClickHandler:\n    def __init__(self, letter_button_manager: \"LetterButtonManager\") -> None:\n        self.letter_button_frame = letter_button_manager.letter_button_frame\n        self.button_panel = self.letter_button_frame.button_panel\n        self.section_manager = self.button_panel.codex.scroll_area.sections_manager\n    def on_letter_button_clicked(self, letter: str) -> None:\n        button = self.letter_button_frame.button_manager.buttons[letter]\n        is_selected = letter in self.button_panel.codex.selected_letters\n        if is_selected:\n            self.button_panel.codex.selected_letters.remove(letter)",
        "detail": "widgets.letter_button_frame.components.letter_button_click_handler",
        "documentation": {}
    },
    {
        "label": "LetterButtonFrameLayoutStyler",
        "kind": 6,
        "importPath": "widgets.letter_button_frame.components.letter_button_frame_layout_styler",
        "description": "widgets.letter_button_frame.components.letter_button_frame_layout_styler",
        "peekOfCode": "class LetterButtonFrameLayoutStyler:\n    def __init__(self, letter_button_frame: \"LetterButtonFrame\") -> None:\n        self.spacing = letter_button_frame.spacing\n        self.letter_button_frame = letter_button_frame\n        self.border_colors = {\n            \"Type1\": (\"#6F2DA8\", \"#00b3ff\"),  # Purple, Cyan\n            \"Type2\": (\"#6F2DA8\", \"#6F2DA8\"),  # Purple, Purple\n            \"Type3\": (\"#6F2DA8\", \"#26e600\"),  # Purple, Green\n            \"Type4\": (\"#26e600\", \"#26e600\"),  # Green, Green\n            \"Type5\": (\"#26e600\", \"#00b3ff\"),  # Green, Cyan",
        "detail": "widgets.letter_button_frame.components.letter_button_frame_layout_styler",
        "documentation": {}
    },
    {
        "label": "LetterButtonManager",
        "kind": 6,
        "importPath": "widgets.letter_button_frame.components.letter_button_manager",
        "description": "widgets.letter_button_frame.components.letter_button_manager",
        "peekOfCode": "class LetterButtonManager:\n    def __init__(self, letter_button_frame: \"LetterButtonFrame\") -> None:\n        self.letter_rows = letter_button_frame.letter_rows\n        self.icon_dir = LETTER_BTN_ICON_DIR\n        self.buttons: dict[Letters, LetterButton] = {}\n        self.letter_button_frame = letter_button_frame\n        self.click_handler = LetterButtonClickHandler(self)\n    def create_buttons(self) -> None:\n        for type_name, rows in self.letter_rows.items():\n            for row in rows:",
        "detail": "widgets.letter_button_frame.components.letter_button_manager",
        "documentation": {}
    },
    {
        "label": "LetterButtonStyler",
        "kind": 6,
        "importPath": "widgets.letter_button_frame.components.letter_button_styler",
        "description": "widgets.letter_button_frame.components.letter_button_styler",
        "peekOfCode": "class LetterButtonStyler:\n    DEFAULT_STYLE = \"\"\"\n        QPushButton {\n            background-color: white;\n            border: 1px solid black;\n            border-radius: 0px;\n            padding: 0px;\n        }\n        QPushButton:hover {\n            background-color: #e6f0ff;",
        "detail": "widgets.letter_button_frame.components.letter_button_styler",
        "documentation": {}
    },
    {
        "label": "LetterButtonFrame",
        "kind": 6,
        "importPath": "widgets.letter_button_frame.letter_button_frame",
        "description": "widgets.letter_button_frame.letter_button_frame",
        "peekOfCode": "class LetterButtonFrame(QFrame):\n    def __init__(self, button_panel: \"CodexButtonPanel\") -> None:\n        super().__init__()\n        self.button_panel = button_panel\n        self.spacing = 5\n        self.outer_frames: dict[str, QFrame] = {}\n        self.letter_rows = self._define_letter_rows()\n        self.layout_styler = LetterButtonFrameLayoutStyler(self)\n        self.button_manager = LetterButtonManager(self)\n        self.button_manager.create_buttons()",
        "detail": "widgets.letter_button_frame.letter_button_frame",
        "documentation": {}
    },
    {
        "label": "MainTabWidget",
        "kind": 6,
        "importPath": "widgets.main_tab_widget.main_tab_widget",
        "description": "widgets.main_tab_widget.main_tab_widget",
        "peekOfCode": "class MainTabWidget(QTabWidget):\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        super().__init__(main_widget)\n        self.main_widget = main_widget\n        self.setStyleSheet(self.get_main_tab_stylesheet())\n        self.codex = Codex(self)\n        self.tabs = [self.codex]\n        self.addTab(self.codex, \"Codex\")\n        # self.addTab(graph_editor_tab, \"Graph Editor\")\n        # self.addTab(option_picker_tab, \"Option Picker\")",
        "detail": "widgets.main_tab_widget.main_tab_widget",
        "documentation": {}
    },
    {
        "label": "LetterLoader",
        "kind": 6,
        "importPath": "widgets.main_widget.letter_loader",
        "description": "widgets.main_widget.letter_loader",
        "peekOfCode": "class LetterLoader:\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        self.main_widget = main_widget\n    def load_all_letters(self) -> dict[str, list[dict]]:\n        df = pd.read_csv(\"PictographDataframe.csv\")\n        df = df.sort_values(by=[LETTER, START_POS, END_POS])\n        df = self.add_turns_and_ori_to_pictograph_dict(df)\n        letters = {\n            letter_str: df[df[LETTER] == letter_str].to_dict(orient=\"records\")\n            for letter_str in df[LETTER].unique()",
        "detail": "widgets.main_widget.letter_loader",
        "documentation": {}
    },
    {
        "label": "MainWidget",
        "kind": 6,
        "importPath": "widgets.main_widget.main_widget",
        "description": "widgets.main_widget.main_widget",
        "peekOfCode": "class MainWidget(QWidget):\n    prop_type: PropTypes = STAFF\n    def __init__(self, main_window: \"MainWindow\") -> None:\n        super().__init__(main_window)\n        self.main_window = main_window\n        self._setup_default_modes()\n        self._setup_letters()\n        self._setup_components()\n        self._setup_layouts()\n        self.special_placement_loader = SpecialPlacementLoader(self)",
        "detail": "widgets.main_widget.main_widget",
        "documentation": {}
    },
    {
        "label": "MainWidgetLayoutManager",
        "kind": 6,
        "importPath": "widgets.main_widget.main_widget_layout_manager",
        "description": "widgets.main_widget.main_widget_layout_manager",
        "peekOfCode": "class MainWidgetLayoutManager:\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        self.main_widget = main_widget\n    def configure_layouts(self) -> None:\n        left_frame = self._setup_left_frame()\n        right_frame = self._setup_right_frame()\n        self._setup_main_layout(left_frame, right_frame)\n    def _setup_main_layout(self, left_frame, right_frame) -> None:\n        self.main_widget.layout: QHBoxLayout = QHBoxLayout(self.main_widget)\n        self.main_widget.layout.addWidget(left_frame, 3)",
        "detail": "widgets.main_widget.main_widget_layout_manager",
        "documentation": {}
    },
    {
        "label": "SpecialPlacementLoader",
        "kind": 6,
        "importPath": "widgets.main_widget.special_placement_loader",
        "description": "widgets.main_widget.special_placement_loader",
        "peekOfCode": "class SpecialPlacementLoader:\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        self.main_widget = main_widget\n        self.special_placements = {\n            \"from_layer1\": {},\n            \"from_layer2\": {},\n            \"from_layer3_blue2_red1\": {},\n            \"from_layer3_blue1_red2\": {},\n        }\n    def load_special_placements(self) -> None:",
        "detail": "widgets.main_widget.special_placement_loader",
        "documentation": {}
    },
    {
        "label": "MainWindowMenuBar",
        "kind": 6,
        "importPath": "widgets.menu_bar.menu_bar",
        "description": "widgets.menu_bar.menu_bar",
        "peekOfCode": "class MainWindowMenuBar(QMenuBar):\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self._setup_menu()\n        self._setup_settings_menu()\n    def _setup_settings_menu(self) -> None:\n        settings_action = QAction(\"Settings\", self)\n        settings_action.triggered.connect(self.open_preferences_dialog)\n        self.addAction(settings_action)",
        "detail": "widgets.menu_bar.menu_bar",
        "documentation": {}
    },
    {
        "label": "PictographSizeAdjuster",
        "kind": 6,
        "importPath": "widgets.menu_bar.pictograph_size_adjuster",
        "description": "widgets.menu_bar.pictograph_size_adjuster",
        "peekOfCode": "class PictographSizeAdjuster(QGroupBox):\n    MAX_COLUMN_COUNT = 8\n    MIN_COLUMN_COUNT = 3\n    def __init__(self, preferences_dialog: \"PreferencesDialog\") -> None:\n        super().__init__()\n        self.preferences_dialog = preferences_dialog\n        self._setup_size_slider()\n        self._setup_layout()\n    def _setup_size_slider(self) -> None:\n        self.size_slider = ClickableSlider(Qt.Orientation.Horizontal)",
        "detail": "widgets.menu_bar.pictograph_size_adjuster",
        "documentation": {}
    },
    {
        "label": "PreferencesDialog",
        "kind": 6,
        "importPath": "widgets.menu_bar.preferences_dialog",
        "description": "widgets.menu_bar.preferences_dialog",
        "peekOfCode": "class PreferencesDialog(QDialog):\n    def __init__(self, main_window: \"MainWindow\") -> None:\n        super().__init__(main_window)\n        self.main_window = main_window\n        self.settings_manager = main_window.settings_manager\n        self.scroll_area = (\n            self.main_window.main_widget.main_tab_widget.codex.scroll_area\n        )\n        self.setWindowTitle(\"Preferences\")\n        self.pictograph_size_adjuster = PictographSizeAdjuster(self)",
        "detail": "widgets.menu_bar.preferences_dialog",
        "documentation": {}
    },
    {
        "label": "PropTypeSelector",
        "kind": 6,
        "importPath": "widgets.menu_bar.prop_type_selector",
        "description": "widgets.menu_bar.prop_type_selector",
        "peekOfCode": "class PropTypeSelector(QGroupBox):\n    def __init__(self, preferences_dialog: \"PreferencesDialog\") -> None:\n        super().__init__(\"Prop Type Selector\")\n        self.preferences_dialog = preferences_dialog\n        self._setup_prop_type_combobox()\n        self._setup_layout()\n    def _setup_prop_type_combobox(self) -> None:\n        self.prop_type_combobox = QComboBox()\n        self.prop_type_combobox.addItems(\n            [",
        "detail": "widgets.menu_bar.prop_type_selector",
        "documentation": {}
    },
    {
        "label": "Option",
        "kind": 6,
        "importPath": "widgets.option_picker_tab.option",
        "description": "widgets.option_picker_tab.option",
        "peekOfCode": "class Option(Pictograph):\n    imageGenerated = pyqtSignal(str)  # Signal to indicate when an image is generated\n    ### INIT ###\n    def __init__(\n        self, main_widget: \"MainWidget\", option_picker_scroll: \"OptionPickerScrollArea\"\n    ) -> None:\n        self.view: \"OptionView\" = None\n        super().__init__(main_widget, OPTION)\n        self.main_widget = main_widget\n        self.option_picker_scroll = option_picker_scroll",
        "detail": "widgets.option_picker_tab.option",
        "documentation": {}
    },
    {
        "label": "OptionView",
        "kind": 6,
        "importPath": "widgets.option_picker_tab.option",
        "description": "widgets.option_picker_tab.option",
        "peekOfCode": "class OptionView(QGraphicsView):\n    def __init__(self, option: \"Option\") -> None:\n        super().__init__(option)\n        self.option = option\n        self.setAlignment(Qt.AlignmentFlag.AlignTop | Qt.AlignmentFlag.AlignLeft)\n        self.setScene(self.option)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n    def resize_option_view(self) -> None:\n        view_width = int(",
        "detail": "widgets.option_picker_tab.option",
        "documentation": {}
    },
    {
        "label": "OptionPickerScrollArea",
        "kind": 6,
        "importPath": "widgets.option_picker_tab.option_picker_scroll_area",
        "description": "widgets.option_picker_tab.option_picker_scroll_area",
        "peekOfCode": "class OptionPickerScrollArea(ScrollArea):\n    def __init__(\n        self, main_widget: \"MainWidget\", option_picker_tab: \"OptionPickerTab\"\n    ) -> None:\n        super().__init__(main_widget, option_picker_tab)\n        self.main_widget = main_widget\n        self.option_picker_tab = option_picker_tab\n        self._connect_signals()\n        self._show_start_pos()\n    ### SETUP ###",
        "detail": "widgets.option_picker_tab.option_picker_scroll_area",
        "documentation": {}
    },
    {
        "label": "OptionPickerTab",
        "kind": 6,
        "importPath": "widgets.option_picker_tab.option_picker_tab",
        "description": "widgets.option_picker_tab.option_picker_tab",
        "peekOfCode": "class OptionPickerTab(QFrame):\n    def __init__(self, main_widget: \"MainWidget\", main_tab_widget: \"MainTabWidget\") -> None:\n        super().__init__(main_widget)\n        self.main_widget = main_widget\n        self.pictograph_df = self.load_and_sort_data(\"PictographDataFrame.csv\")\n        self.setup_ui()\n    def setup_ui(self) -> None:\n        self.layout: QVBoxLayout = QVBoxLayout(self)\n        self.scroll_area = OptionPickerScrollArea(self.main_widget, self)\n        # self.filter_tab = FilterTab(self.scroll_area)",
        "detail": "widgets.option_picker_tab.option_picker_tab",
        "documentation": {}
    },
    {
        "label": "MirroredEntryCreator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.mirrored_entry_creator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.mirrored_entry_creator",
        "peekOfCode": "class MirroredEntryCreator:\n    def __init__(self, data_updater: \"SpecialPlacementDataUpdater\", turns_tuple_generator: \"TurnsTupleGenerator\"):\n        self.data_updater = data_updater\n        self.turns_tuple_generator = turns_tuple_generator\n    def create_entry(self, letter: str, arrow: Arrow):\n        # Logic to create a new mirrored entry\n        ori_key = self.data_updater._get_ori_key(arrow.motion)\n        letter_data, _ = self._fetch_letter_data_and_original_turn_data(ori_key, letter, arrow)\n        # Check for mixed orientation and apply logic accordingly\n        if arrow.pictograph.check.starts_from_mixed_orientation():",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.mirrored_entry_creator",
        "documentation": {}
    },
    {
        "label": "MotionAttrKeyGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.motion_attr_key_generator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.motion_attr_key_generator",
        "peekOfCode": "class MotionAttrKeyGenerator:\n    def __init__(self, positioner: \"SpecialArrowPositioner\") -> None:\n        self.positioner = positioner\n    def get_key(self, arrow: \"Arrow\") -> str:\n        if self.positioner.pictograph.letter in [\"S\", \"T\"]:\n            if arrow.motion.start_ori in [IN, OUT]:\n                return f\"{arrow.motion.lead_state}_from_layer1\"\n            elif arrow.motion.start_ori in [CLOCK, COUNTER]:\n                return f\"{arrow.motion.lead_state}_from_layer2\"\n        elif arrow.pictograph.check.starts_from_mixed_orientation():",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.motion_attr_key_generator",
        "documentation": {}
    },
    {
        "label": "SpecialPlacementDataUpdater",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_data_updater",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_data_updater",
        "peekOfCode": "class SpecialPlacementDataUpdater:\n    def __init__(self, positioner: \"SpecialArrowPositioner\") -> None:\n        self.positioner = positioner\n        self.json_handler = SpecialPlacementJsonHandler()\n        self.entry_remover = SpecialPlacementEntryRemover(self)\n        self.mirrored_entry_manager = SpecialPlacementMirroredEntryManager(self)\n    def _get_letter_data(self, letter: str, ori_key: str) -> dict:\n        return (\n            self.positioner.placement_manager.pictograph.main_widget.special_placements[\n                ori_key",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_data_updater",
        "documentation": {}
    },
    {
        "label": "SpecialPlacementEntryRemover",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_entry_remover",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_entry_remover",
        "peekOfCode": "class SpecialPlacementEntryRemover:\n    \"\"\"Handles removal of special placement entries.\"\"\"\n    def __init__(\n        self,\n        data_updater: \"SpecialPlacementDataUpdater\",\n    ) -> None:\n        self.positioner = data_updater.positioner\n        self.data_updater = data_updater\n        self.turns_tuple_generator = self.positioner.placement_manager.pictograph.main_widget.turns_tuple_generator\n    def remove_special_placement_entry(self, letter: str, arrow: Arrow) -> None:",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_entry_remover",
        "documentation": {}
    },
    {
        "label": "SpecialPlacementJsonHandler",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_json_handler",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_json_handler",
        "peekOfCode": "class SpecialPlacementJsonHandler:\n    \"\"\"Handles read/write JSON file operations.\"\"\"\n    @staticmethod\n    def load_json_data(file_path) -> dict:\n        try:\n            if os.path.exists(file_path):\n                with open(file_path, \"r\", encoding=\"utf-8\") as file:\n                    return json.load(file)\n            return {}\n        except Exception as e:",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_json_handler",
        "documentation": {}
    },
    {
        "label": "SpecialPlacementMirroredEntryManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_mirrored_entry_manager",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_mirrored_entry_manager",
        "peekOfCode": "class SpecialPlacementMirroredEntryManager:\n    def __init__(self, data_updater: \"SpecialPlacementDataUpdater\") -> None:\n        self.data_updater = data_updater\n        self.turns_tuple_generator = (\n            data_updater.positioner.placement_manager.pictograph.main_widget.turns_tuple_generator\n        )\n    def update_mirrored_entry_in_json(self, arrow: \"Arrow\") -> None:\n        letter_type = LetterType.get_letter_type(arrow.pictograph.letter)\n        mirrored_turns_tuple = self.turns_tuple_generator.generate_mirrored_tuple(arrow)\n        if mirrored_turns_tuple:",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.handlers.special_placement_mirrored_entry_manager",
        "documentation": {}
    },
    {
        "label": "SpecialArrowPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.special_arrow_positioner",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.special_arrow_positioner",
        "peekOfCode": "class SpecialArrowPositioner:\n    def __init__(self, placement_manager: \"ArrowPlacementManager\") -> None:\n        self.placement_manager = placement_manager\n        self.pictograph: Pictograph = placement_manager.pictograph\n        self.data_loader = self\n        self.data_updater = SpecialPlacementDataUpdater(self)\n        self.motion_key_generator = MotionAttrKeyGenerator(self)",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.special_arrow_positioner.special_arrow_positioner",
        "documentation": {}
    },
    {
        "label": "MirroredTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.mirrored_turns_tuple_generator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.mirrored_turns_tuple_generator",
        "peekOfCode": "class MirroredTurnsTupleGenerator:\n    def __init__(self, turns_tuple_generator: \"TurnsTupleGenerator\"):\n        self.turns_tuple_generator = turns_tuple_generator\n    def generate(self, arrow: \"Arrow\") -> Union[str, None]:\n        letter = arrow.pictograph.letter\n        letter_type = LetterType.get_letter_type(arrow.pictograph.letter)\n        if (\n            arrow.motion.motion_type\n            != arrow.pictograph.get.other_motion(arrow.motion).motion_type\n            or letter in [\"S\", \"T\"]",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.mirrored_turns_tuple_generator",
        "documentation": {}
    },
    {
        "label": "TurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generator",
        "peekOfCode": "class TurnsTupleGenerator:\n    \"\"\"\n    Manages the generation of turn tuples for different letter types in a pictograph. \n    It delegates to specific generator classes based on letter type.\n    Attributes:\n        generators (dict): Maps generator keys to specialized generator instances for various letter types.\n        key_map (dict): Maps letters to generator keys, with special handling for 'S', 'T', 'Λ', 'Λ-', and 'Γ'.\n        mirrored_generator (MirroredTurnsTupleGenerator): Handles mirrored turn tuple generation.\n    Methods:\n        _create_key_map(): Initializes the letter-to-generator key mapping.",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generator",
        "documentation": {}
    },
    {
        "label": "BaseTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class BaseTurnsTupleGenerator:\n    def _normalize_turns(self, arrow: Arrow) -> int:\n        return int(arrow.turns) if arrow.turns in {0.0, 1.0, 2.0, 3.0} else arrow.turns\n    def set_pictograph(self, pictograph: \"Pictograph\"):\n        self.p = pictograph\n        self.blue_arrow = self.p.arrows.get(BLUE)\n        self.red_arrow = self.p.arrows.get(RED)\nclass Type1HybridTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "Type1HybridTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class Type1HybridTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        pro_arrow = (\n            self.blue_arrow\n            if self.blue_arrow.motion.motion_type == PRO\n            else self.red_arrow\n        )\n        anti_arrow = (\n            self.blue_arrow",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "Type2TurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class Type2TurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        shift = (\n            self.red_arrow\n            if self.red_arrow.motion.check.is_shift()\n            else self.blue_arrow\n        )\n        static = (\n            self.red_arrow",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "Type3TurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class Type3TurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        shift = self.p.get.shift()\n        dash = self.p.get.dash()\n        if dash.turns > 0 and shift.turns > 0:\n            direction = \"s\" if dash.prop_rot_dir == shift.prop_rot_dir else \"o\"\n            return f\"({direction}, {self._normalize_turns(shift)}, {self._normalize_turns(dash)})\"\n        elif dash.turns > 0:\n            direction = dash.prop_rot_dir.lower()",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "Type4TurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class Type4TurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        dash = self.p.get.dash()\n        static = self.p.get.static()\n        if dash.turns == 0 and static.turns == 0:\n            return f\"({self._normalize_turns(dash)}, {self._normalize_turns(static)})\"\n        elif dash.turns == 0 or static.turns == 0:\n            turning_motion = dash if dash.turns != 0 else static\n            return f\"({turning_motion.prop_rot_dir}, {self._normalize_turns(dash)}, {self._normalize_turns(static)})\"",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "Type56TurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class Type56TurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        if self.blue_arrow.turns == 0 and self.red_arrow.turns == 0:\n            return f\"({self._normalize_turns(self.blue_arrow)}, {self._normalize_turns(self.red_arrow)})\"\n        elif self.blue_arrow.motion.turns == 0 or self.red_arrow.motion.turns == 0:\n            turning_motion = (\n                self.blue_arrow.motion\n                if self.blue_arrow.motion.turns != 0\n                else self.red_arrow.motion",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "ColorTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class ColorTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        return f\"({self._normalize_turns(self.blue_arrow)}, {self._normalize_turns(self.red_arrow)})\"\nclass LeadStateTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        leading_motion = self.p.get.leading_motion()\n        trailing_motion = self.p.get.trailing_motion()\n        if leading_motion:",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "LeadStateTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class LeadStateTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        leading_motion = self.p.get.leading_motion()\n        trailing_motion = self.p.get.trailing_motion()\n        if leading_motion:\n            return f\"({leading_motion.turns}, {trailing_motion.turns})\"\n        else:\n            return f\"({self._normalize_turns(self.blue_arrow)}, {self._normalize_turns(self.red_arrow)})\"\nclass LambdaTurnsTupleGenerator(BaseTurnsTupleGenerator):",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "LambdaTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class LambdaTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        dash = self.p.get.dash()\n        static = self.p.get.static()\n        dash_direction_map, static_direction_map = self._get_direction_maps()\n        if dash.turns == 0 and static.turns > 0:\n            open_close_state = static_direction_map.get(\n                (dash.end_loc, static.end_loc, static.prop_rot_dir), \"\"\n            )",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "LambdaDashTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class LambdaDashTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        blue_dash = self.p.blue_motion\n        red_dash = self.p.red_motion\n        blue_dash_map, red_dash_map = self._get_direction_maps()\n        if blue_dash.turns == 0 and red_dash.turns > 0:\n            red_dash_state = red_dash_map.get(\n                (blue_dash.end_loc, red_dash.end_loc, red_dash.prop_rot_dir), \"\"\n            )",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "GammaTurnsTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "peekOfCode": "class GammaTurnsTupleGenerator(BaseTurnsTupleGenerator):\n    def generate_key(self, pictograph) -> str:\n        super().set_pictograph(pictograph)\n        blue_static = self.p.blue_motion\n        red_static = self.p.red_motion\n        blue_static_map, red_static_map = self._get_direction_maps()\n        if blue_static.turns == 0 and red_static.turns > 0:\n            red_static_state = red_static_map.get(\n                (blue_static.end_loc, red_static.end_loc, red_static.prop_rot_dir), \"\"\n            )",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.turns_tuple_generator.turns_tuple_generators",
        "documentation": {}
    },
    {
        "label": "ArrowAdjustmentCalculator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.arrow_adjustment_calculator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.arrow_adjustment_calculator",
        "peekOfCode": "class ArrowAdjustmentCalculator:\n    def __init__(self, placement_manager: \"ArrowPlacementManager\") -> None:\n        self.pm = placement_manager\n    def get_adjustment(self, arrow: Arrow) -> QPointF:\n        turns_tuple = arrow.pictograph.main_widget.turns_tuple_generator.generate_turns_tuple(\n            self.pm.pictograph\n        )\n        ori_key = self.pm.special_positioner.data_updater._get_ori_key(arrow.motion)\n        special_placements = self.pm.pictograph.main_widget.special_placements[ori_key]\n        if not self.pm.pictograph.letter in special_placements:",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.arrow_adjustment_calculator",
        "documentation": {}
    },
    {
        "label": "ArrowInitialPosCalculator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.arrow_initial_pos_calculator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.arrow_initial_pos_calculator",
        "peekOfCode": "class ArrowInitialPosCalculator:\n    def __init__(self, placement_manager: \"ArrowPlacementManager\") -> None:\n        self.pictograph: \"Pictograph\" = placement_manager.pictograph\n    def get_initial_pos(self, arrow: Arrow) -> QPointF:\n        if arrow.motion.motion_type in [PRO, ANTI]:\n            return self._get_diamond_shift_pos(arrow)\n        elif arrow.motion.motion_type in [STATIC, DASH]:\n            return self._get_diamond_static_dash_pos(arrow)\n    def _get_diamond_shift_pos(self, arrow: Arrow) -> QPointF:\n        layer = self.pictograph.grid.grid_data.layer2_points_normal",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.arrow_initial_pos_calculator",
        "documentation": {}
    },
    {
        "label": "DefaultArrowPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.default_arrow_positioner",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.default_arrow_positioner",
        "peekOfCode": "class DefaultArrowPositioner:\n    def __init__(self, placement_manager: \"ArrowPlacementManager\") -> None:\n        self.placement_manager = placement_manager\n        self.motion_type_files = {\n            PRO: \"pro_placements.json\",\n            ANTI: \"anti_placements.json\",\n            DASH: \"dash_placements.json\",\n            STATIC: \"static_placements.json\",\n        }\n    def _load_default_placements(",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.default_arrow_positioner",
        "documentation": {}
    },
    {
        "label": "DirectionalTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.directional_tuple_generator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.directional_tuple_generator",
        "peekOfCode": "class DirectionalTupleGenerator:\n    def __init__(self, motion: Motion, other_motion: Motion) -> None:\n        self.motion = motion\n        self.other_motion = other_motion\n    @property\n    def _situations(\n        self,\n    ) -> dict[tuple[str, str, str], Callable[[int, int], list[tuple[int, int]]]]:\n        return {\n            (DASH, NO_ROT, PRO): self._pro_vs_no_rot_dash,",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.directional_tuple_generator",
        "documentation": {}
    },
    {
        "label": "DirectionalTupleGenerator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.old dir tuple generator",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.old dir tuple generator",
        "peekOfCode": "class DirectionalTupleGenerator:\n    def __init__(self, motion: Motion, other_motion: Motion) -> None:\n        self.motion = motion\n        self.other_motion = other_motion\n    def generate_directional_tuples(self, x: int, y: int) -> list[tuple[int, int]]:\n        motion_type = self.motion.motion_type\n        prop_rot_dir = self.motion.prop_rot_dir\n        if motion_type == DASH and self.motion.turns > 0:\n            if self.motion.prop_rot_dir == self.other_motion.prop_rot_dir:\n                self.motion.pictograph.vtg_timing = SAME",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.old dir tuple generator",
        "documentation": {}
    },
    {
        "label": "QuadrantIndexHandler",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.quadrant_index_handler",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.quadrant_index_handler",
        "peekOfCode": "class QuadrantIndexHandler:\n    def __init__(self, placement_manager: \"ArrowPlacementManager\") -> None:\n        self.grid_mode = placement_manager.pictograph.main_widget.grid_mode\n    def get_quadrant_index(self, arrow: Arrow) -> Literal[0, 1, 2, 3]:\n        if self.grid_mode == DIAMOND:\n            if arrow.motion.motion_type in [PRO, ANTI]:\n                return self._diamond_shift_quadrant_index(arrow.loc)\n            elif arrow.motion.motion_type in [STATIC, DASH]:\n                return self._diamond_static_dash_quadrant_index(arrow.loc)\n        return 0",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.handlers.quadrant_index_handler",
        "documentation": {}
    },
    {
        "label": "ArrowPlacementManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.arrow_placement_manager.arrow_placement_manager",
        "description": "widgets.pictograph.components.placement_managers.arrow_placement_manager.arrow_placement_manager",
        "peekOfCode": "class ArrowPlacementManager:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        # Positioners\n        self.default_positioner = DefaultArrowPositioner(self)\n        self.special_positioner = SpecialArrowPositioner(self)\n        self.initial_pos_calculator = ArrowInitialPosCalculator(self)\n        self.adjustment_calculator = ArrowAdjustmentCalculator(self)\n        self.quadrant_index_handler = QuadrantIndexHandler(self)\n    def update_arrow_placements(self) -> None:",
        "detail": "widgets.pictograph.components.placement_managers.arrow_placement_manager.arrow_placement_manager",
        "documentation": {}
    },
    {
        "label": "BetaPropDirectionCalculator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.beta_prop_direction_calculator",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.beta_prop_direction_calculator",
        "peekOfCode": "class BetaPropDirectionCalculator:\n    def get_dir(self, motion: Motion) -> Directions:\n        \"\"\"Determine the translation direction based on the motion type, start location, end location, and end layer.\"\"\"\n        if (\n            motion.pictograph.letter == \"I\"\n            and motion.pictograph.check.ends_in_radial_ori()\n        ):\n            return self.get_direction_for_radial_I(motion)\n        elif (\n            motion.pictograph.letter == \"I\"",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.beta_prop_direction_calculator",
        "documentation": {}
    },
    {
        "label": "BetaPropPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.beta_prop_positioner",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.beta_prop_positioner",
        "peekOfCode": "class BetaPropPositioner:\n    def __init__(self, ppm: \"PropPlacementManager\") -> None:\n        self.pictograph: \"Pictograph\" = ppm.pictograph\n        self.ppm = ppm\n        self.classifier = PropClassifier(self.pictograph)\n        self.small_prop_positioner = SmallPropPositioner(self)\n        self.big_prop_positioner = BigPropPositioner(self)\n        self.reposition_beta_by_letter_handler = RepositionBetaByLetterHandler(self)\n        self.swap_beta_handler = SwapBetaHandler(self)\n    def reposition_beta_props(self) -> None:",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.beta_prop_positioner",
        "documentation": {}
    },
    {
        "label": "BigPropPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.big_prop_positioner",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.big_prop_positioner",
        "peekOfCode": "class BigPropPositioner:\n    def __init__(self, beta_prop_positioner: \"BetaPropPositioner\") -> None:\n        self.beta_prop_positioner = beta_prop_positioner\n        self.ppm = beta_prop_positioner.ppm\n        self.pictograph = beta_prop_positioner.pictograph\n    def reposition(self) -> None:\n        if self.pictograph.check.ends_in_non_hybrid_ori():\n            for prop in self.beta_prop_positioner.classifier.big_props:\n                self.ppm.default_positioner.set_prop_to_default_loc(prop)\n                (",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.big_prop_positioner",
        "documentation": {}
    },
    {
        "label": "DefaultPropPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.default_prop_positioner",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.default_prop_positioner",
        "peekOfCode": "class DefaultPropPositioner:\n    def __init__(self, prop_placement_manager: \"PropPlacementManager\") -> None:\n        self.pictograph = prop_placement_manager.pictograph\n        self.prop_placement_manager = prop_placement_manager\n        self.location_points_cache = {}\n    def set_prop_to_default_loc(self, prop: Prop, strict: bool = False) -> None:\n        position_offsets = (\n            self.prop_placement_manager.offset_calculator.get_or_calculate_offsets(prop)\n        )\n        key = (prop.ori, prop.loc)",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.default_prop_positioner",
        "documentation": {}
    },
    {
        "label": "PropClassifier",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.prop_classifier",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.prop_classifier",
        "peekOfCode": "class PropClassifier:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        self.classify_props()\n    def classify_props(self) -> None:\n        self.big_uni = []\n        self.small_uni = []\n        self.small_bi = []\n        self.big_bi = []\n        for prop in self.pictograph.props.values():",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.prop_classifier",
        "documentation": {}
    },
    {
        "label": "PropOffsetCalculator",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.prop_offset_calculator",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.prop_offset_calculator",
        "peekOfCode": "class PropOffsetCalculator:\n    def __init__(self, prop_placement_manager: \"PropPlacementManager\") -> None:\n        self.position_offsets_cache: dict[Prop, dict[tuple[str, str], QPointF]] = {}\n        self.prop_placement_manager = prop_placement_manager\n    def get_or_calculate_offsets(self, prop: Prop) -> dict[tuple[str, str], QPointF]:\n        if prop not in self.position_offsets_cache:\n            self.position_offsets_cache[prop] = self.calculate_offsets(prop)\n        return self.position_offsets_cache[prop]\n    def calculate_offsets(self, prop: Prop) -> dict[tuple[str, str], QPointF]:\n        prop_length = prop.boundingRect().width()",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.prop_offset_calculator",
        "documentation": {}
    },
    {
        "label": "RepositionBetaByLetterHandler",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.reposition_beta_props_by_letter_manager",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.reposition_beta_props_by_letter_manager",
        "peekOfCode": "class RepositionBetaByLetterHandler:\n    def __init__(self, beta_prop_positioner: \"BetaPropPositioner\") -> None:\n        self.pictograph = beta_prop_positioner.pictograph\n        self.ppm = beta_prop_positioner.ppm\n        self.red_prop = self.pictograph.red_prop\n        self.blue_prop = self.pictograph.blue_prop\n    def reposition_G_H(self) -> None:\n        further_direction = self.ppm.dir_calculator.get_dir(self.pictograph.red_motion)\n        other_direction = self.ppm.dir_calculator.get_opposite_dir(further_direction)\n        self.move_prop(self.red_prop, further_direction)",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.reposition_beta_props_by_letter_manager",
        "documentation": {}
    },
    {
        "label": "SmallBilateralPropPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_bilateral_prop_positioner",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_bilateral_prop_positioner",
        "peekOfCode": "class SmallBilateralPropPositioner:\n    def __init__(self, beta_prop_positioner: \"BetaPropPositioner\") -> None:\n        self.beta_prop_positioner = beta_prop_positioner\n        self.ppm = beta_prop_positioner.ppm\n        self.pictograph = beta_prop_positioner.pictograph\n    def reposition(self) -> None:\n        if self.pictograph.check.ends_in_hybrid_ori():\n            for prop in self.pictograph.props.values():\n                self.ppm.default_positioner.set_prop_to_default_loc(prop)\n        else:",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_bilateral_prop_positioner",
        "documentation": {}
    },
    {
        "label": "SmallPropPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_prop_positioner",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_prop_positioner",
        "peekOfCode": "class SmallPropPositioner:\n    def __init__(self, beta_prop_positioner: \"BetaPropPositioner\") -> None:\n        self.beta_prop_positioner = beta_prop_positioner\n        self.pictograph = beta_prop_positioner.pictograph\n    def reposition(self) -> None:\n        if len(self.beta_prop_positioner.classifier.small_uni) == 2:\n            SmallUnilateralPropPositioner(self.beta_prop_positioner).reposition(\n                self.beta_prop_positioner.classifier.small_uni\n            )\n        elif len(self.beta_prop_positioner.classifier.small_bi) == 2:",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_prop_positioner",
        "documentation": {}
    },
    {
        "label": "SmallUnilateralPropPositioner",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_unilateral_prop_positioner",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_unilateral_prop_positioner",
        "peekOfCode": "class SmallUnilateralPropPositioner:\n    def __init__(self, beta_prop_positioner: \"BetaPropPositioner\") -> None:\n        self.beta_prop_positioner = beta_prop_positioner\n        self.ppm = beta_prop_positioner.ppm\n        self.pictograph = beta_prop_positioner.pictograph\n    def reposition(self) -> None:\n        if (\n            self.beta_prop_positioner.classifier.small_uni[0].ori\n            == self.beta_prop_positioner.classifier.small_uni[1].ori\n        ):",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.small_unilateral_prop_positioner",
        "documentation": {}
    },
    {
        "label": "SwapBetaHandler",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.swap_beta_handler",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.swap_beta_handler",
        "peekOfCode": "class SwapBetaHandler:\n    def __init__(self, beta_prop_positioner: \"BetaPropPositioner\") -> None:\n        self.beta_prop_positioner = beta_prop_positioner\n        self.pictograph = beta_prop_positioner.pictograph\n        self.ppm = beta_prop_positioner.ppm\n        self.blue_prop = self.pictograph.blue_prop\n        self.red_prop = self.pictograph.red_prop\n    def _swap_props(\n        self, prop_a: Prop, prop_b: Prop, direction_a: str, direction_b: str\n    ) -> None:",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.handlers.swap_beta_handler",
        "documentation": {}
    },
    {
        "label": "PropPlacementManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.placement_managers.prop_placement_manager.prop_placement_manager",
        "description": "widgets.pictograph.components.placement_managers.prop_placement_manager.prop_placement_manager",
        "peekOfCode": "class PropPlacementManager:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        # Positioners\n        self.default_positioner = DefaultPropPositioner(self)\n        self.beta_positioner = BetaPropPositioner(self)\n        self.offset_calculator = PropOffsetCalculator(self)\n        self.dir_calculator = BetaPropDirectionCalculator()\n    def update_prop_positions(self) -> None:\n        for prop in self.pictograph.props.values():",
        "detail": "widgets.pictograph.components.placement_managers.prop_placement_manager.prop_placement_manager",
        "documentation": {}
    },
    {
        "label": "ArrowMovementManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.wasd_adjustment_manager.arrow_movement_manager",
        "description": "widgets.pictograph.components.wasd_adjustment_manager.arrow_movement_manager",
        "peekOfCode": "class ArrowMovementManager:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n    def handle_arrow_movement(self, key, shift_held, ctrl_held) -> None:\n        if not self.pictograph.selected_arrow:\n            return\n        if shift_held and ctrl_held:\n            adjustment_increment = 200\n        elif shift_held:\n            adjustment_increment = 20",
        "detail": "widgets.pictograph.components.wasd_adjustment_manager.arrow_movement_manager",
        "documentation": {}
    },
    {
        "label": "PropPlacementOverrideManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.wasd_adjustment_manager.prop_placement_override_manager",
        "description": "widgets.pictograph.components.wasd_adjustment_manager.prop_placement_override_manager",
        "peekOfCode": "class PropPlacementOverrideManager:\n    def __init__(self, wasd_manager: \"WASD_AdjustmentManager\") -> None:\n        self.pictograph = wasd_manager.pictograph\n        self.special_positioner = (\n            self.pictograph.arrow_placement_manager.special_positioner\n        )\n        self.turns_tuple_generator = self.pictograph.main_widget.turns_tuple_generator\n    def handle_prop_placement_override(self, key) -> None:\n        if not (\n            self.pictograph.check.ends_in_nonradial_ori()",
        "detail": "widgets.pictograph.components.wasd_adjustment_manager.prop_placement_override_manager",
        "documentation": {}
    },
    {
        "label": "RotationAngleOverrideManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.wasd_adjustment_manager.rotation_angle_override_manager",
        "description": "widgets.pictograph.components.wasd_adjustment_manager.rotation_angle_override_manager",
        "peekOfCode": "class RotationAngleOverrideManager:\n    \"\"\"\n    Manages rotation angle overrides for arrows in a pictograph based on specific letter types and motions.\n    This class handles special cases where the rotation angle of an arrow needs to be overridden, based on the data\n    defined in the \"{letter}_placements.json\" file.\n    \"\"\"\n    def __init__(self, wasd_adjustment_manager: \"WASD_AdjustmentManager\") -> None:\n        self.wasd_manager = wasd_adjustment_manager\n        self.pictograph = wasd_adjustment_manager.pictograph\n        self.special_positioner = (",
        "detail": "widgets.pictograph.components.wasd_adjustment_manager.rotation_angle_override_manager",
        "documentation": {}
    },
    {
        "label": "WASD_AdjustmentManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.wasd_adjustment_manager.wasd_adjustment_manager",
        "description": "widgets.pictograph.components.wasd_adjustment_manager.wasd_adjustment_manager",
        "peekOfCode": "class WASD_AdjustmentManager:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n        self.movement_manager = ArrowMovementManager(pictograph)\n        self.rotation_angle_override_manager = RotationAngleOverrideManager(self)\n        self.prop_placement_override_manager = PropPlacementOverrideManager(self)\n    def handle_special_placement_removal(self) -> None:\n        if not self.pictograph.selected_arrow:\n            return\n        letter = self.pictograph.letter",
        "detail": "widgets.pictograph.components.wasd_adjustment_manager.wasd_adjustment_manager",
        "documentation": {}
    },
    {
        "label": "AddToSequenceManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_add_to_sequence_manager",
        "description": "widgets.pictograph.components.pictograph_add_to_sequence_manager",
        "peekOfCode": "class AddToSequenceManager:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n    def add_to_sequence_callback(self) -> None:\n        new_beat = self.create_new_beat()\n        self.pictograph.main_widget.main_sequence_widget.beat_frame.add_scene_to_sequence(\n            new_beat\n        )\n    def create_new_beat(self) -> QGraphicsScene:\n        from widgets.sequence_widget.beat_frame.beat import Beat",
        "detail": "widgets.pictograph.components.pictograph_add_to_sequence_manager",
        "documentation": {}
    },
    {
        "label": "PictographAttrManager",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_attr_manager",
        "description": "widgets.pictograph.components.pictograph_attr_manager",
        "peekOfCode": "class PictographAttrManager:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n    def update_attributes(self, pictograph_dict: dict) -> None:\n        for attr_name, attr_value in pictograph_dict.items():\n            if attr_value is not None:\n                setattr(self.pictograph, attr_name, attr_value)",
        "detail": "widgets.pictograph.components.pictograph_attr_manager",
        "documentation": {}
    },
    {
        "label": "PictographChecker",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_checker",
        "description": "widgets.pictograph.components.pictograph_checker",
        "peekOfCode": "class PictographChecker:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.p = pictograph\n    def ends_in_beta(self) -> bool:\n        return self.p.letter in beta_ending_letters\n    def ends_in_alpha(self) -> bool:\n        return self.p.letter in alpha_ending_letters\n    def ends_in_gamma(self) -> bool:\n        return self.p.letter in gamma_ending_letters\n    def ends_in_hybrid_ori(self) -> bool:",
        "detail": "widgets.pictograph.components.pictograph_checker",
        "documentation": {}
    },
    {
        "label": "PictographContextMenuHandler",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_context_menu_handler",
        "description": "widgets.pictograph.components.pictograph_context_menu_handler",
        "peekOfCode": "class PictographContextMenuHandler:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n    def handle_context_menu(self, event: \"QGraphicsSceneMouseEvent\") -> None:\n        scene_pos = self.pictograph.view.mapToScene(event.pos().toPoint())\n        items_at_pos = self.pictograph.items(scene_pos)\n        clicked_item = None\n        for item in items_at_pos:\n            if isinstance(item, Arrow) or isinstance(item, Prop):\n                clicked_item = item",
        "detail": "widgets.pictograph.components.pictograph_context_menu_handler",
        "documentation": {}
    },
    {
        "label": "PictographMouseEventHandler",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_event_handler",
        "description": "widgets.pictograph.components.pictograph_event_handler",
        "peekOfCode": "class PictographMouseEventHandler:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.p = pictograph\n    def handle_mouse_press(self, event: \"QGraphicsSceneMouseEvent\") -> None:\n        scene_pos = event.scenePos()\n        items_at_pos = self.p.items(scene_pos)\n        arrow = next((item for item in items_at_pos if isinstance(item, Arrow)), None)\n        if arrow:\n            self.p.selected_arrow = arrow\n            self.p.dragged_arrow = arrow",
        "detail": "widgets.pictograph.components.pictograph_event_handler",
        "documentation": {}
    },
    {
        "label": "PictographGetter",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_getter",
        "description": "widgets.pictograph.components.pictograph_getter",
        "peekOfCode": "class PictographGetter:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.p = pictograph\n    def letter_type(self, letter: all_letters) -> Optional[str]:\n        for letter_type in LetterType:\n            if letter in letter_type.letters:\n                return letter_type.description\n        return None\n    def motions_by_type(self, motion_type: MotionTypes) -> list[Motion]:\n        return [",
        "detail": "widgets.pictograph.components.pictograph_getter",
        "documentation": {}
    },
    {
        "label": "PictographImageRenderer",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_image_renderer",
        "description": "widgets.pictograph.components.pictograph_image_renderer",
        "peekOfCode": "class PictographImageRenderer:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph\n    def render_and_cache_image(self) -> None:\n        image_path = self.pictograph.main_widget.generate_image_path(self.pictograph)\n        if os.path.isfile(image_path):\n            pixmap = self.pictograph.main_widget.get_cached_pixmap(image_path)\n            if pixmap is None:\n                pixmap = QPixmap(image_path)\n                self.pictograph.main_widget.cache_image(image_path, pixmap)",
        "detail": "widgets.pictograph.components.pictograph_image_renderer",
        "documentation": {}
    },
    {
        "label": "PictographInit",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_init",
        "description": "widgets.pictograph.components.pictograph_init",
        "peekOfCode": "class PictographInit:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.p = pictograph\n        self.p.setSceneRect(0, 0, 950, 950)\n        self.p.setBackgroundBrush(Qt.GlobalColor.white)\n        self.prop_factory = PropFactory()\n    ### INIT ###\n    def init_all_components(self) -> None:\n        self.p.dragged_prop = None\n        self.p.dragged_arrow = None",
        "detail": "widgets.pictograph.components.pictograph_init",
        "documentation": {}
    },
    {
        "label": "prop_class_mapping",
        "kind": 5,
        "importPath": "widgets.pictograph.components.pictograph_init",
        "description": "widgets.pictograph.components.pictograph_init",
        "peekOfCode": "prop_class_mapping = {\n    STAFF: Staff,\n    BIGSTAFF: BigStaff,\n    CLUB: Club,\n    FAN: Fan,\n    BIGFAN: BigFan,\n    MINIHOOP: MiniHoop,\n    BUUGENG: Buugeng,\n    BIGBUUGENG: BigBuugeng,\n    FRACTALGENG: Fractalgeng,",
        "detail": "widgets.pictograph.components.pictograph_init",
        "documentation": {}
    },
    {
        "label": "PictographStateUpdater",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_state_updater",
        "description": "widgets.pictograph.components.pictograph_state_updater",
        "peekOfCode": "class PictographStateUpdater:\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        self.p = pictograph\n    def update_pictograph(self, pictograph_dict: dict = None) -> None:\n        if pictograph_dict:\n            if self.p.check.is_pictograph_dict_complete(pictograph_dict):\n                self.p.pictograph_dict = pictograph_dict\n            self._update_from_pictograph_dict(pictograph_dict)\n        self.p.letter_item.update_letter()\n        self._position_objects()",
        "detail": "widgets.pictograph.components.pictograph_state_updater",
        "documentation": {}
    },
    {
        "label": "PictographView",
        "kind": 6,
        "importPath": "widgets.pictograph.components.pictograph_view",
        "description": "widgets.pictograph.components.pictograph_view",
        "peekOfCode": "class PictographView(QGraphicsView):\n    def __init__(self, pictograph: \"Pictograph\") -> None:\n        super().__init__(pictograph)\n        self.pictograph = pictograph\n        self.setScene(self.pictograph)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        # set horizontal size policy to Expanding\n        self.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Preferred)\n    def resize_for_scroll_area(self) -> None:",
        "detail": "widgets.pictograph.components.pictograph_view",
        "documentation": {}
    },
    {
        "label": "Pictograph",
        "kind": 6,
        "importPath": "widgets.pictograph.pictograph",
        "description": "widgets.pictograph.pictograph",
        "peekOfCode": "class Pictograph(QGraphicsScene):\n    def __init__(self, main_widget: \"MainWidget\", scroll_area: \"ScrollArea\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.scroll_area = scroll_area\n        self.initializer = PictographInit(self)\n        self.mouse_event_handler = PictographMouseEventHandler(self)\n        self.context_menu_handler = PictographContextMenuHandler(self)\n        self.updater = PictographStateUpdater(self)\n        self.image_renderer = PictographImageRenderer(self)",
        "detail": "widgets.pictograph.pictograph",
        "documentation": {}
    },
    {
        "label": "FilterTab",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "peekOfCode": "class FilterTab(QTabWidget):\n    def __init__(self, section: \"SectionWidget\") -> None:\n        super().__init__(section)\n        self.section = section\n        self.attr_box_border_width = 3\n        self.motion_type_turns_panel = TurnsPanel(self, MOTION_TYPE)\n        self.color_turns_panel = TurnsPanel(self, COLOR)\n        self.lead_state_turns_panel = TurnsPanel(self, LEAD_STATE)\n        self.panels: list[TurnsPanel] = [\n            self.motion_type_turns_panel,",
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.filter_tab",
        "documentation": {}
    },
    {
        "label": "ScrollAreaSectionPictographFrame",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.pictograph_frame",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.pictograph_frame",
        "peekOfCode": "class ScrollAreaSectionPictographFrame(QFrame):\n    def __init__(self, scroll_area_section: \"SectionWidget\") -> None:\n        super().__init__()\n        self.section = scroll_area_section\n        self.layout: QGridLayout = QGridLayout(self)\n        self.layout.setAlignment(Qt.AlignmentFlag.AlignTop)\n        self.layout.setContentsMargins(0, 0, 0, 0)",
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.pictograph_frame",
        "documentation": {}
    },
    {
        "label": "SectionHeader",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.section_header",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.section_header",
        "peekOfCode": "class SectionHeader(QWidget):\n    clicked = pyqtSignal()\n    EXPAND_ARROW_PATH = \"images/icons/dropdown/expand.png\"\n    COLLAPSE_ARROW_PATH = \"images/icons/dropdown/collapse.png\"\n    def __init__(self, section_widget: \"SectionWidget\") -> None:\n        super().__init__()\n        self.section = section_widget\n        self.type_label = SectionTypeLabel(section_widget)\n        self.arrow_label = QLabel()\n        self.arrow_label.setSizePolicy(",
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.section_header",
        "documentation": {}
    },
    {
        "label": "SectionTypeLabel",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.components.type_label",
        "description": "widgets.scroll_area.components.section_manager.section_widget.components.type_label",
        "peekOfCode": "class SectionTypeLabel(QLabel):\n    clicked = pyqtSignal()\n    TYPE_MAP = {\n        \"Type1\": \"Dual-Shift\",\n        \"Type2\": \"Shift\",\n        \"Type3\": \"Cross-Shift\",\n        \"Type4\": \"Dash\",\n        \"Type5\": \"Dual-Dash\",\n        \"Type6\": \"Static\",\n    }",
        "detail": "widgets.scroll_area.components.section_manager.section_widget.components.type_label",
        "documentation": {}
    },
    {
        "label": "SectionWidget",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.section_widget.section_widget",
        "description": "widgets.scroll_area.components.section_manager.section_widget.section_widget",
        "peekOfCode": "class SectionWidget(QGroupBox):\n    SCROLLBAR_WIDTH = 20\n    def __init__(self, letter_type: LetterTypes, scroll_area: \"ScrollArea\") -> None:\n        super().__init__(None)\n        self.scroll_area = scroll_area\n        self.letter_type = letter_type\n        self.vtg_dir_btn_state: dict[str, bool] = {SAME: False, OPP: False}\n        self.filter_tab: FilterTab = None\n    def setup_components(self) -> None:\n        self.vtg_dir_button_manager = VtgDirButtonManager(self)",
        "detail": "widgets.scroll_area.components.section_manager.section_widget.section_widget",
        "documentation": {}
    },
    {
        "label": "PictographOrganizer",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.pictograph_organizer",
        "description": "widgets.scroll_area.components.section_manager.pictograph_organizer",
        "peekOfCode": "class PictographOrganizer:\n    def __init__(self):\n        self.pictographs_by_type: dict[LetterTypes, list[Pictograph]] = {}\n    def organize_pictographs_by_type(self, pictographs: dict[str, Pictograph]):\n        for key, pictograph in pictographs.items():\n            letter_type = self.get_pictograph_letter_type(key)\n            if letter_type not in self.pictographs_by_type:\n                self.pictographs_by_type[letter_type] = []\n            self.pictographs_by_type[letter_type].append(pictograph)\n    def get_pictograph_letter_type(self, pictograph_key: str) -> LetterType:",
        "detail": "widgets.scroll_area.components.section_manager.pictograph_organizer",
        "documentation": {}
    },
    {
        "label": "ScrollAreaSectionManager",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.section_manager",
        "description": "widgets.scroll_area.components.section_manager.section_manager",
        "peekOfCode": "class ScrollAreaSectionManager:\n    \"\"\"Manages all of the sections in the scroll area. Individual sections are managed by the SectionWidget class.\"\"\"\n    SECTION_ORDER = [\"Type1\", \"Type2\", \"Type3\", \"Type4\", \"Type5\", \"Type6\"]\n    def __init__(self, scroll_area: \"ScrollArea\") -> None:\n        self.scroll_area = scroll_area\n        self.sections: dict[LetterTypes, SectionWidget] = {}\n        self.filter_tabs_cache: dict[LetterTypes, FilterTab] = {}\n        self.pictograph_cache: dict[Letters, list[LetterTypes]] = {}\n        self.letters_by_type: dict[\n            LetterTypes, list[Letters]",
        "detail": "widgets.scroll_area.components.section_manager.section_manager",
        "documentation": {}
    },
    {
        "label": "SectionOrganizer",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.section_manager.section_organizer",
        "description": "widgets.scroll_area.components.section_manager.section_organizer",
        "peekOfCode": "class SectionOrganizer:\n    SECTION_ORDER = [\"Type1\", \"Type2\", \"Type3\", \"Type4\", \"Type5\", \"Type6\"]\n    def get_correct_index_for_section(\n        self, letter_type: LetterTypes, ordered_section_types: list[str]\n    ) -> int:\n        try:\n            desired_position = self.SECTION_ORDER.index(letter_type)\n            current_positions = [\n                self.SECTION_ORDER.index(typ) for typ in ordered_section_types\n            ]",
        "detail": "widgets.scroll_area.components.section_manager.section_organizer",
        "documentation": {}
    },
    {
        "label": "ScrollAreaDisplayManager",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.scroll_area_display_manager",
        "description": "widgets.scroll_area.components.scroll_area_display_manager",
        "peekOfCode": "class ScrollAreaDisplayManager:\n    SPACING = 5\n    COLUMN_COUNT = 8\n    def __init__(self, scroll_area: \"ScrollArea\") -> None:\n        self.scroll_area = scroll_area\n    def order_and_display_pictographs(self) -> None:\n        ordered_pictographs = self.get_ordered_pictographs()\n        for index, (key, codex_pictograph) in enumerate(ordered_pictographs.items()):\n            self.add_pictograph_to_layout(codex_pictograph, index)\n    def get_ordered_pictographs(self) -> dict[Letters, Pictograph]:",
        "detail": "widgets.scroll_area.components.scroll_area_display_manager",
        "documentation": {}
    },
    {
        "label": "ScrollAreaPictographFactory",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.scroll_area_pictograph_factory",
        "description": "widgets.scroll_area.components.scroll_area_pictograph_factory",
        "peekOfCode": "class ScrollAreaPictographFactory:\n    def __init__(self, scroll_area: \"ScrollArea\") -> None:\n        self.scroll_area = scroll_area\n    def get_or_create_pictograph(\n        self, pictograph_key: str, pictograph_dict=None\n    ) -> Pictograph:\n        letter = pictograph_key.split(\"_\")[0]\n        all_pictographs = self.scroll_area.main_widget.all_pictographs\n        if pictograph_key in all_pictographs.get(letter, {}):\n            return all_pictographs[letter][pictograph_key]",
        "detail": "widgets.scroll_area.components.scroll_area_pictograph_factory",
        "documentation": {}
    },
    {
        "label": "ScrollAreaUpdater",
        "kind": 6,
        "importPath": "widgets.scroll_area.components.scroll_area_updater",
        "description": "widgets.scroll_area.components.scroll_area_updater",
        "peekOfCode": "class ScrollAreaUpdater:\n    def __init__(self, scroll_area: \"ScrollArea\") -> None:\n        self.scroll_area = scroll_area\n    def update_pictographs(self) -> None:\n        deselected_letters = (\n            self.scroll_area.pictograph_factory.get_deselected_letters()\n        )\n        selected_letters = set(self.scroll_area.codex.selected_letters)\n        if self._only_deselection_occurred(deselected_letters, selected_letters):\n            for letter in deselected_letters:",
        "detail": "widgets.scroll_area.components.scroll_area_updater",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "kind": 6,
        "importPath": "widgets.scroll_area.scroll_area",
        "description": "widgets.scroll_area.scroll_area",
        "peekOfCode": "class ScrollArea(QScrollArea):\n    def __init__(self, codex: \"Codex\") -> None:\n        super().__init__(codex)\n        self.main_widget = codex.main_tab_widget.main_widget\n        self.codex = codex\n        self.letters = self.main_widget.letters\n        self.pictographs: dict[Letters, Pictograph] = {}\n        self.stretch_index = -1  # Initialize stretch index\n        self._setup_ui()\n        self._setup_managers()",
        "detail": "widgets.scroll_area.scroll_area",
        "documentation": {}
    },
    {
        "label": "Beat",
        "kind": 6,
        "importPath": "widgets.sequence_widget.beat_frame.beat",
        "description": "widgets.sequence_widget.beat_frame.beat",
        "peekOfCode": "class Beat(Pictograph):\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        super().__init__(main_widget, \"beat\")\n        self.main_widget = main_widget\nclass BeatView(QGraphicsView):\n    def __init__(self, beat_frame: \"BeatFrame\") -> None:\n        super().__init__(beat_frame)\n        self.setAlignment(Qt.AlignmentFlag.AlignTop | Qt.AlignmentFlag.AlignLeft)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)",
        "detail": "widgets.sequence_widget.beat_frame.beat",
        "documentation": {}
    },
    {
        "label": "BeatView",
        "kind": 6,
        "importPath": "widgets.sequence_widget.beat_frame.beat",
        "description": "widgets.sequence_widget.beat_frame.beat",
        "peekOfCode": "class BeatView(QGraphicsView):\n    def __init__(self, beat_frame: \"BeatFrame\") -> None:\n        super().__init__(beat_frame)\n        self.setAlignment(Qt.AlignmentFlag.AlignTop | Qt.AlignmentFlag.AlignLeft)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.pictograph: \"Pictograph\" = None\n        self.beat: Beat = None\n    def set_pictograph(self, pictograph: \"Pictograph\") -> None:\n        self.pictograph = pictograph",
        "detail": "widgets.sequence_widget.beat_frame.beat",
        "documentation": {}
    },
    {
        "label": "BeatFrame",
        "kind": 6,
        "importPath": "widgets.sequence_widget.beat_frame.beat_frame",
        "description": "widgets.sequence_widget.beat_frame.beat_frame",
        "peekOfCode": "class BeatFrame(QFrame):\n    picker_updater = pyqtSignal(Option, dict)\n    COLUMN_COUNT = 5\n    ROW_COUNT = 4\n    def __init__(\n        self,\n        main_widget: \"MainWidget\",\n        sequence_widget: \"MainSequenceWidget\",\n    ) -> None:\n        super().__init__()",
        "detail": "widgets.sequence_widget.beat_frame.beat_frame",
        "documentation": {}
    },
    {
        "label": "StartPositionBeat",
        "kind": 6,
        "importPath": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "description": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "peekOfCode": "class StartPositionBeat(Pictograph):\n    def __init__(self, main_widget: \"MainWidget\", beat_frame: \"BeatFrame\") -> None:\n        super().__init__(main_widget, \"start_pos_beat\")\n        self.main_widget = main_widget\n        self.beat_frame = beat_frame\nclass StartPositionBeatView(QGraphicsView):\n    def __init__(self, beat_frame: \"BeatFrame\") -> None:\n        super().__init__(beat_frame)\n        self.setAlignment(Qt.AlignmentFlag.AlignTop | Qt.AlignmentFlag.AlignLeft)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)",
        "detail": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "documentation": {}
    },
    {
        "label": "StartPositionBeatView",
        "kind": 6,
        "importPath": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "description": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "peekOfCode": "class StartPositionBeatView(QGraphicsView):\n    def __init__(self, beat_frame: \"BeatFrame\") -> None:\n        super().__init__(beat_frame)\n        self.setAlignment(Qt.AlignmentFlag.AlignTop | Qt.AlignmentFlag.AlignLeft)\n        self.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)\n        self.start_pos: \"StartPositionBeat\" = None\n        self.beat_frame = beat_frame\n    def set_start_pos(self, start_pos: \"StartPositionBeat\") -> None:\n        self.start_pos = start_pos",
        "detail": "widgets.sequence_widget.beat_frame.start_pos_beat",
        "documentation": {}
    },
    {
        "label": "ButtonFrame",
        "kind": 6,
        "importPath": "widgets.sequence_widget.button_frame",
        "description": "widgets.sequence_widget.button_frame",
        "peekOfCode": "class ButtonFrame(QFrame):\n    def __init__(\n        self,\n        main_widget: \"MainWidget\",\n        beat_frame: \"BeatFrame\",\n    ) -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.beat_frame = beat_frame\n        self.button_height = int(self.main_widget.height() * 1 / 20)",
        "detail": "widgets.sequence_widget.button_frame",
        "documentation": {}
    },
    {
        "label": "MainSequenceWidget",
        "kind": 6,
        "importPath": "widgets.sequence_widget.sequence_widget",
        "description": "widgets.sequence_widget.sequence_widget",
        "peekOfCode": "class MainSequenceWidget(QWidget):\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        super().__init__()\n        self.main_widget = main_widget\n        self.setSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)\n        self.beat_frame = BeatFrame(self.main_widget, self)\n        self.button_frame = ButtonFrame(self.main_widget, self)\n        self.beats = self.beat_frame.beats\n        self.layout: QVBoxLayout = QVBoxLayout(self)\n        self.layout.setSpacing(0)",
        "detail": "widgets.sequence_widget.sequence_widget",
        "documentation": {}
    },
    {
        "label": "MotionRelevanceChecker",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.turns_widget.managers.motion_relevance_checker",
        "description": "widgets.turns_box.turns_box_widgets.turns_widget.managers.motion_relevance_checker",
        "peekOfCode": "class MotionRelevanceChecker:\n    def __init__(self, turns_box: \"TurnsBox\") -> None:\n        self.turns_box = turns_box\n    def is_motion_relevant(self, motion: \"Motion\") -> bool:\n        attr_type = self.turns_box.attribute_type\n        is_same_letter_type = (\n            self.turns_box.turns_panel.filter_tab.section.letter_type\n            == LetterType.get_letter_type(motion.pictograph.letter)\n        )\n        if not is_same_letter_type:",
        "detail": "widgets.turns_box.turns_box_widgets.turns_widget.managers.motion_relevance_checker",
        "documentation": {}
    },
    {
        "label": "TurnsButtonManager",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_button_manager",
        "description": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_button_manager",
        "peekOfCode": "class TurnsButtonManager:\n    def __init__(self, turns_widget: \"TurnsWidget\") -> None:\n        self.turns_widget = turns_widget\n        self.adjustments = [(-1, \"-1\"), (-0.5, \"-0.5\"), (0.5, \"+0.5\"), (1, \"+1\")]\n        self.adjust_turns_buttons: list[AdjustTurnsButton] = []\n    def setup_adjust_turns_buttons(self) -> None:\n        \"\"\"Create and setup adjustment buttons.\"\"\"\n        self._setup_button_frames()\n        self.adjust_turns_buttons = [\n            self._create_and_add_button(adj, text) for adj, text in self.adjustments",
        "detail": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_button_manager",
        "documentation": {}
    },
    {
        "label": "TurnDisplayManager",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_display_manager",
        "description": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_display_manager",
        "peekOfCode": "class TurnDisplayManager:\n    def __init__(self, turns_widget: \"TurnsWidget\") -> None:\n        self.turns_widget = turns_widget\n        self.turns_box: TurnsBox = turns_widget.turns_box\n    def setup_display_components(self) -> None:\n        self.setup_turns_display()\n        self.setup_turns_display_with_label_frame()\n        self.add_turns_display_to_layout()\n    def setup_turns_display_with_label_frame(self) -> None:\n        self.turns_display_with_label_frame = QFrame()",
        "detail": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_display_manager",
        "documentation": {}
    },
    {
        "label": "TurnsUpdater",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_updater",
        "description": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_updater",
        "peekOfCode": "class TurnsUpdater:\n    def __init__(self, turns_widget: \"TurnsWidget\") -> None:\n        self.turns_box = turns_widget.turns_box\n        self.turns_widget = turns_widget\n    def set_motion_turns(self, motion: \"Motion\", new_turns: Turns) -> None:\n        self._update_turns_and_rotation(motion, new_turns)\n        pictograph_dict = {f\"{motion.color}_turns\": new_turns}\n        motion.pictograph.updater.update_pictograph(pictograph_dict)\n    def _adjust_turns_for_pictograph(\n        self, pictograph: \"Pictograph\", adjustment: Turns",
        "detail": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turns_updater",
        "documentation": {}
    },
    {
        "label": "TurnsAdjustmentManager",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turn_adjustment_display_manager",
        "description": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turn_adjustment_display_manager",
        "peekOfCode": "class TurnsAdjustmentManager:\n    def __init__(self, turns_widget: \"TurnsWidget\") -> None:\n        self.turns_widget = turns_widget\n        self.pictographs = self._get_pictographs()\n    def adjust_turns(self, adjustment: Turns) -> None:\n        turns = self._get_turns()\n        turns = self._clamp_turns(turns + adjustment)\n        turns = self.convert_turn_floats_to_ints(turns)\n        self._update_turns_display(turns)\n        self._update_visibility_based_on_motion(turns)",
        "detail": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turn_adjustment_display_manager",
        "documentation": {}
    },
    {
        "label": "TurnDirectSetManager",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turn_direct_set_manager",
        "description": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turn_direct_set_manager",
        "peekOfCode": "class TurnDirectSetManager:\n    def __init__(self, turns_widget: \"TurnsWidget\") -> None:\n        self.turns_widget = turns_widget\n    def setup_direct_set_buttons(self) -> None:\n        self.turns_buttons_frame = QFrame()\n        self.turns_buttons_layout = QHBoxLayout(self.turns_buttons_frame)\n        self.turns_buttons_layout.setAlignment(Qt.AlignmentFlag.AlignCenter)\n        turns_values = [\"0\", \"0.5\", \"1\", \"1.5\", \"2\", \"2.5\", \"3\"]\n        for value in turns_values:\n            button = QPushButton(value, self.turns_widget)",
        "detail": "widgets.turns_box.turns_box_widgets.turns_widget.managers.turn_direct_set_manager",
        "documentation": {}
    },
    {
        "label": "TurnsWidget",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.turns_widget.turns_widget",
        "description": "widgets.turns_box.turns_box_widgets.turns_widget.turns_widget",
        "peekOfCode": "class TurnsWidget(TurnsBoxWidget):\n    def __init__(self, turns_box: \"TurnsBox\") -> None:\n        super().__init__(turns_box)\n        self.turns_box = turns_box\n        self.turns_label: QLabel = None\n        self.layout: QVBoxLayout = QVBoxLayout(self)\n        self.layout.setContentsMargins(0, 4, 0, 0)\n        self.layout.setSpacing(0)\n        self.direct_set_manager = TurnDirectSetManager(self)\n        self.display_manager = TurnDisplayManager(self)",
        "detail": "widgets.turns_box.turns_box_widgets.turns_widget.turns_widget",
        "documentation": {}
    },
    {
        "label": "TurnsBoxWidget",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.base_attr_box_widget",
        "description": "widgets.turns_box.turns_box_widgets.base_attr_box_widget",
        "peekOfCode": "class TurnsBoxWidget(QWidget):\n    def __init__(self, turns_box) -> None:\n        super().__init__(turns_box)\n        self.turns_box: \"TurnsBox\" = turns_box\n    def create_attr_header_label(\n        self, text: str, align: Qt.AlignmentFlag = Qt.AlignmentFlag.AlignCenter\n    ) -> QLabel:\n        attr_label = QLabel(text, self)\n        attr_label.setFont(QFont(\"Arial\", self.turns_box.font_size))\n        attr_label.setAlignment(align)",
        "detail": "widgets.turns_box.turns_box_widgets.base_attr_box_widget",
        "documentation": {}
    },
    {
        "label": "MotionTypeWidget",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.motion_types_widget",
        "description": "widgets.turns_box.turns_box_widgets.motion_types_widget",
        "peekOfCode": "class MotionTypeWidget(TurnsBoxWidget):\n    def __init__(self, turns_box: \"GraphEditorTurnsBox\") -> None:\n        super().__init__(turns_box)\n        self.header_label = self.create_attr_header_label(\"Type\")\n        self.motion_type_box: QComboBox = self._setup_motion_type_box()\n        self.swap_button = self.create_swap_button(\n            SWAP_ICON, self._swap_motion_type_callback\n        )\n        self.swap_button_frame = self._setup_swap_button_frame()\n        self.main_vbox_frame = self._setup_main_vbox_frame()",
        "detail": "widgets.turns_box.turns_box_widgets.motion_types_widget",
        "documentation": {}
    },
    {
        "label": "PropRotDirButtonManager",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.prop_rot_dir_button_manager",
        "description": "widgets.turns_box.turns_box_widgets.prop_rot_dir_button_manager",
        "peekOfCode": "class PropRotDirButtonManager:\n    def __init__(self, turns_box: \"TurnsBox\") -> None:\n        self.turns_box = turns_box\n        self.previous_turns = 0\n        self.prop_rot_dir_buttons: list[\n            PropRotDirButton\n        ] = self._setup_prop_rot_dir_buttons()\n        self.buttons = self.prop_rot_dir_buttons\n    def _setup_prop_rot_dir_buttons(self) -> list[QPushButton]:\n        self.cw_button: PropRotDirButton = ButtonFactory.create_prop_rot_dir_button(",
        "detail": "widgets.turns_box.turns_box_widgets.prop_rot_dir_button_manager",
        "documentation": {}
    },
    {
        "label": "StartEndLocWidget",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.start_end_loc_widget",
        "description": "widgets.turns_box.turns_box_widgets.start_end_loc_widget",
        "peekOfCode": "class StartEndLocWidget(TurnsBoxWidget):\n    def __init__(self, turns_box: \"GraphEditorTurnsBox\") -> None:\n        super().__init__(turns_box)\n        # Setup start and end combo boxes\n        self.start_loc_box: QComboBox = self._setup_loc_box()\n        self.end_loc_box: QComboBox = self._setup_loc_box()\n        self.loc_boxes: list[QComboBox] = [self.start_loc_box, self.end_loc_box]\n        self.header_labels: list[QLabel] = []\n        # Setup frames for start and end combo boxes with headers\n        self.start_loc_box_with_header_frame = self._create_vbox_with_header_frame(",
        "detail": "widgets.turns_box.turns_box_widgets.start_end_loc_widget",
        "documentation": {}
    },
    {
        "label": "StartEndOriWidget",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.start_end_ori_widget",
        "description": "widgets.turns_box.turns_box_widgets.start_end_ori_widget",
        "peekOfCode": "class StartEndOriWidget(TurnsBoxWidget):\n    def __init__(self, turns_box: \"GraphEditorTurnsBox\") -> None:\n        super().__init__(turns_box)\n        # Setup start and end combo boxes\n        self.start_ori_box: QComboBox = self._setup_ori_box()\n        self.end_ori_box: QComboBox = self._setup_ori_box()\n        self.ori_boxes: list[QComboBox] = [self.start_ori_box, self.end_ori_box]\n        self.header_labels: list[QLabel] = []\n        # Setup frames for start and end combo boxes with headers\n        self.start_ori_box_with_header_frame = self._create_vbox_with_header_frame(",
        "detail": "widgets.turns_box.turns_box_widgets.start_end_ori_widget",
        "documentation": {}
    },
    {
        "label": "VtgDirButtonManager",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box_widgets.vtg_dir_button_manager",
        "description": "widgets.turns_box.turns_box_widgets.vtg_dir_button_manager",
        "peekOfCode": "class VtgDirButtonManager:\n    def __init__(self, section_widget: \"SectionWidget\") -> None:\n        self.section = section_widget\n        self.previous_turns = 0\n        self.vtg_dir_buttons: list[VtgDirButton] = self._setup_vtg_dir_buttons()\n        self.hide_vtg_dir_buttons()\n    def show_vtg_dir_buttons(self) -> None:\n        self.opp_button.show()\n        self.same_button.show()\n    def hide_vtg_dir_buttons(self) -> None:",
        "detail": "widgets.turns_box.turns_box_widgets.vtg_dir_button_manager",
        "documentation": {}
    },
    {
        "label": "TurnsBox",
        "kind": 6,
        "importPath": "widgets.turns_box.turns_box",
        "description": "widgets.turns_box.turns_box",
        "peekOfCode": "class TurnsBox(QFrame):\n    turns_widget: TurnsWidget\n    def __init__(\n        self,\n        turns_panel,\n        attribute_type: MotionAttributes,\n        attribute: Union[MotionTypes, Colors, LeadStates],\n    ) -> None:\n        super().__init__(turns_panel)\n        self.attribute_type: MotionAttributes = attribute_type",
        "detail": "widgets.turns_box.turns_box",
        "documentation": {}
    },
    {
        "label": "ClickableSlider",
        "kind": 6,
        "importPath": "widgets.clickable_slider",
        "description": "widgets.clickable_slider",
        "peekOfCode": "class ClickableSlider(QSlider):\n    def mousePressEvent(self, event: QMouseEvent) -> None:\n        if event.button() == Qt.MouseButton.LeftButton:\n            val = (\n                self.minimum()\n                + ((self.maximum() - self.minimum()) * event.position().x())\n                / self.width()\n            )\n            val = round(val)\n            self.setValue(val)",
        "detail": "widgets.clickable_slider",
        "documentation": {}
    },
    {
        "label": "HeaderWidget",
        "kind": 6,
        "importPath": "widgets.header_widget",
        "description": "widgets.header_widget",
        "peekOfCode": "class HeaderWidget(TurnsBoxWidget):\n    def __init__(self, turns_box: \"TurnsBox\") -> None:\n        super().__init__(turns_box)\n        self.turns_box = turns_box\n        self.separator: QFrame = self.create_separator()\n        self.header_label: QLabel = self._setup_header()\n        self.layout: QHBoxLayout = self._setup_layout()\n    def _setup_header(self) -> None:\n        if self.turns_box.attribute_type == COLOR:\n            text = \"Left\" if self.turns_box.color == BLUE else \"Right\"",
        "detail": "widgets.header_widget",
        "documentation": {}
    },
    {
        "label": "ImageCacheManager",
        "kind": 6,
        "importPath": "widgets.image_cache_manager",
        "description": "widgets.image_cache_manager",
        "peekOfCode": "class ImageCacheManager:\n    def __init__(self, main_widget: \"MainWidget\") -> None:\n        self.image_cache = {}\n        self.main_widget = main_widget\n    def cache_image(self, image_path, pixmap):\n        self.image_cache[image_path] = pixmap\n    def get_cached_pixmap(self, image_path: str) -> QPixmap | None:\n        if image_path not in self.image_cache:\n            return None\n        if self.image_cache[image_path] is None:",
        "detail": "widgets.image_cache_manager",
        "documentation": {}
    },
    {
        "label": "TurnsPanel",
        "kind": 6,
        "importPath": "widgets.turns_panel",
        "description": "widgets.turns_panel",
        "peekOfCode": "class TurnsPanel(QFrame):\n    def __init__(self, filter_tab: \"FilterTab\", attribute_type) -> None:\n        super().__init__()\n        self.filter_tab = filter_tab\n        self.attribute_type = attribute_type\n        self.turns_box_factory = TurnsBoxFactory(self)\n        self.boxes: list[TurnsBox] = self.turns_box_factory.create_boxes()\n        self.setup_layouts()\n        self.visible_boxes: list[TurnsBox] = []\n    def setup_layouts(self) -> None:",
        "detail": "widgets.turns_panel",
        "documentation": {}
    },
    {
        "label": "current_script_path",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "current_script_path = os.path.abspath(__file__).replace(\"\\\\\", \"/\")\ncurrent_script_path = current_script_path[0].upper() + current_script_path[1:]\ncurrent_dir = os.path.dirname(current_script_path)\ntka_sequence_constructor_dir = os.path.dirname(current_dir)\ntka_app_dir = os.path.dirname(tka_sequence_constructor_dir)\nspecial_placements_parent_directory = os.path.join(\"data/arrow_placement/special/\")\nINTEGER_TURNS = [0.0, 1.0, 2.0, 3.0]\nNORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "current_script_path",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "current_script_path = current_script_path[0].upper() + current_script_path[1:]\ncurrent_dir = os.path.dirname(current_script_path)\ntka_sequence_constructor_dir = os.path.dirname(current_dir)\ntka_app_dir = os.path.dirname(tka_sequence_constructor_dir)\nspecial_placements_parent_directory = os.path.join(\"data/arrow_placement/special/\")\nINTEGER_TURNS = [0.0, 1.0, 2.0, 3.0]\nNORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "current_dir = os.path.dirname(current_script_path)\ntka_sequence_constructor_dir = os.path.dirname(current_dir)\ntka_app_dir = os.path.dirname(tka_sequence_constructor_dir)\nspecial_placements_parent_directory = os.path.join(\"data/arrow_placement/special/\")\nINTEGER_TURNS = [0.0, 1.0, 2.0, 3.0]\nNORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "tka_sequence_constructor_dir",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "tka_sequence_constructor_dir = os.path.dirname(current_dir)\ntka_app_dir = os.path.dirname(tka_sequence_constructor_dir)\nspecial_placements_parent_directory = os.path.join(\"data/arrow_placement/special/\")\nINTEGER_TURNS = [0.0, 1.0, 2.0, 3.0]\nNORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "tka_app_dir",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "tka_app_dir = os.path.dirname(tka_sequence_constructor_dir)\nspecial_placements_parent_directory = os.path.join(\"data/arrow_placement/special/\")\nINTEGER_TURNS = [0.0, 1.0, 2.0, 3.0]\nNORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "special_placements_parent_directory",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "special_placements_parent_directory = os.path.join(\"data/arrow_placement/special/\")\nINTEGER_TURNS = [0.0, 1.0, 2.0, 3.0]\nNORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "INTEGER_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "INTEGER_TURNS = [0.0, 1.0, 2.0, 3.0]\nNORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "NORTH = \"n\"\nEAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EAST",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "EAST = \"e\"\nSOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SOUTH = \"s\"\nWEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WEST",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "WEST = \"w\"\nNORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTHEAST",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "NORTHEAST = \"ne\"\nSOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTHEAST",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SOUTHEAST = \"se\"\nSOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SOUTHWEST",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SOUTHWEST = \"sw\"\nNORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NORTHWEST",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "NORTHWEST = \"nw\"\nVERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "VERTICAL",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "VERTICAL = \"vertical\"\nHORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HORIZONTAL",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "HORIZONTAL = \"horizontal\"\nCLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CLOCKWISE = \"cw\"\nCOUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"\nOPP = \"opp\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "COUNTER_CLOCKWISE = \"ccw\"\nNO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"\nOPP = \"opp\"\n# Vtg Timings",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NO_ROT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "NO_ROT = \"no_rot\"\nLEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"\nOPP = \"opp\"\n# Vtg Timings\nSPLIT = \"split\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEADING",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LEADING = \"leading\"\nTRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"\nOPP = \"opp\"\n# Vtg Timings\nSPLIT = \"split\"\nTOG = \"tog\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TRAILING",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "TRAILING = \"trailing\"\nCW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"\nOPP = \"opp\"\n# Vtg Timings\nSPLIT = \"split\"\nTOG = \"tog\"\n# Open Close States",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CW_HANDPATH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CW_HANDPATH = \"cw_handpath\"\nCCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"\nOPP = \"opp\"\n# Vtg Timings\nSPLIT = \"split\"\nTOG = \"tog\"\n# Open Close States\nOPENING = \"op\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CCW_HANDPATH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CCW_HANDPATH = \"ccw_handpath\"\n# Vtg Directions\nSAME = \"same\"\nOPP = \"opp\"\n# Vtg Timings\nSPLIT = \"split\"\nTOG = \"tog\"\n# Open Close States\nOPENING = \"op\"\nCLOSING = \"cl\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SAME",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SAME = \"same\"\nOPP = \"opp\"\n# Vtg Timings\nSPLIT = \"split\"\nTOG = \"tog\"\n# Open Close States\nOPENING = \"op\"\nCLOSING = \"cl\"\nSTART_POS = \"start_pos\"\nEND_POS = \"end_pos\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPP",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "OPP = \"opp\"\n# Vtg Timings\nSPLIT = \"split\"\nTOG = \"tog\"\n# Open Close States\nOPENING = \"op\"\nCLOSING = \"cl\"\nSTART_POS = \"start_pos\"\nEND_POS = \"end_pos\"\nBLUE_MOTION_TYPE = \"blue_motion_type\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SPLIT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SPLIT = \"split\"\nTOG = \"tog\"\n# Open Close States\nOPENING = \"op\"\nCLOSING = \"cl\"\nSTART_POS = \"start_pos\"\nEND_POS = \"end_pos\"\nBLUE_MOTION_TYPE = \"blue_motion_type\"\nBLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TOG",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "TOG = \"tog\"\n# Open Close States\nOPENING = \"op\"\nCLOSING = \"cl\"\nSTART_POS = \"start_pos\"\nEND_POS = \"end_pos\"\nBLUE_MOTION_TYPE = \"blue_motion_type\"\nBLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPENING",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "OPENING = \"op\"\nCLOSING = \"cl\"\nSTART_POS = \"start_pos\"\nEND_POS = \"end_pos\"\nBLUE_MOTION_TYPE = \"blue_motion_type\"\nBLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOSING",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CLOSING = \"cl\"\nSTART_POS = \"start_pos\"\nEND_POS = \"end_pos\"\nBLUE_MOTION_TYPE = \"blue_motion_type\"\nBLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_POS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "START_POS = \"start_pos\"\nEND_POS = \"end_pos\"\nBLUE_MOTION_TYPE = \"blue_motion_type\"\nBLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_POS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "END_POS = \"end_pos\"\nBLUE_MOTION_TYPE = \"blue_motion_type\"\nBLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_MOTION_TYPE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE_MOTION_TYPE = \"blue_motion_type\"\nBLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_PROP_ROT_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE_PROP_ROT_DIR = \"blue_prop_rot_dir\"\nBLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_START_LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE_START_LOC = \"blue_start_loc\"\nBLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_END_LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE_END_LOC = \"blue_end_loc\"\nBLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_START_ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE_START_ORI = \"blue_start_ori\"\nBLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_END_ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE_END_ORI = \"blue_end_or\"\nBLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE_TURNS = \"blue_turns\"\nRED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_MOTION_TYPE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED_MOTION_TYPE = \"red_motion_type\"\nRED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_PROP_ROT_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED_PROP_ROT_DIR = \"red_prop_rot_dir\"\nRED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_START_LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED_START_LOC = \"red_start_loc\"\nRED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_END_LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED_END_LOC = \"red_end_loc\"\nRED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_START_ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED_START_ORI = \"red_start_ori\"\nRED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_END_ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED_END_ORI = \"red_end_or\"\nRED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED_TURNS = \"red_turns\"\nRED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RED",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED = \"red\"\nBLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLUE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLUE = \"blue\"\nHEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_RED",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "HEX_RED = \"#ED1C24\"\nHEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEX_BLUE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "HEX_BLUE = \"#2E3192\"\nRADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RADIAL",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RADIAL = \"radial\"\nNONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "NONRADIAL",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "NONRADIAL = \"nonradial\"\nIN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "IN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "IN = \"in\"\nOUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OUT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "OUT = \"out\"\nCLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CLOCK = \"clock\"\nCOUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "COUNTER = \"counter\"\nLEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEFT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LEFT = \"left\"\nRIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "RIGHT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RIGHT = \"right\"\nUP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "UP",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "UP = \"up\"\nDOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DOWN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DOWN = \"down\"\nLETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LETTER",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LETTER = \"letter\"\nPRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PRO = \"pro\"\nANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ANTI = \"anti\"\nFLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "FLOAT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "FLOAT = \"float\"\nDASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DASH = \"dash\"\nSTATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "STATIC = \"static\"\nVTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "VTG_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "VTG_DIR = \"vtg_dir\"\nVTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "VTG_TIMING",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "VTG_TIMING = \"vtg_timing\"\nLEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LEAD_STATE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LEAD_STATE = \"lead_state\"\nCOLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COLOR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "COLOR = \"color\"\nARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ARROW",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ARROW = \"arrow\"\nGHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GHOST_ARROW",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GHOST_ARROW = \"ghost_arrow\"\nPROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PROP = \"prop\"\nGHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GHOST_PROP",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GHOST_PROP = \"ghost_prop\"\nLETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LETTER_ITEM",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LETTER_ITEM = \"letter_item\"\nLOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LOC = \"loc\"\nMOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION_TYPE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "MOTION_TYPE = \"motion_type\"\nTURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "TURNS = \"turns\"\nPROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_TYPE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PROP_TYPE = \"prop_type\"\nPROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PROP_LOC = \"prop_loc\"\nPROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PROP_ORI = \"prop_ori\"\nPROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_ROT_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PROP_ROT_DIR = \"prop_rot_dir\"\nORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ORI = \"ori\"\nSTART_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "START_ORI = \"start_ori\"\nEND_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_ORI",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "END_ORI = \"end_ori\"\nAXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "AXIS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "AXIS = \"axis\"\nSTART_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "START_LOC = \"start_loc\"\nEND_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "END_LOC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "END_LOC = \"end_loc\"\nLAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LAYER",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LAYER = \"layer\"\nMOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MOTION",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "MOTION = \"motion\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ANTI_TURNS = \"anti_turns\"\nSTATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC_HANDPATH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "STATIC_HANDPATH = \"static_handpath\"\nDASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH_HANDPATH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DASH_HANDPATH = \"dash_handpath\"\nPICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PICTOGRAPH_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PICTOGRAPH_DIR = \"images/pictographs/\"\nARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ARROW_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ARROW_DIR = \"images/arrows/\"\nPROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PROP_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PROP_DIR = \"images/props/\"\nLETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LETTER_BTN_ICON_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LETTER_BTN_ICON_DIR = \"images/letter_button_icons\"\nLETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LETTERS_TRIMMED_SVG_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LETTERS_TRIMMED_SVG_DIR = \"images/letters_trimmed/\"\nICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ICON_DIR = \"images/icons/\"\nGRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GRID_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GRID_DIR = \"images/grid/\"\nGHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GHOST",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GHOST = \"ghost\"\nSTAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STAFF",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "STAFF = \"staff\"\nBIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BIGSTAFF",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BIGSTAFF = \"bigstaff\"\nCLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLUB",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CLUB = \"club\"\nBUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BUUGENG",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BUUGENG = \"buugeng\"\nBIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BIGBUUGENG",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BIGBUUGENG = \"bigbuugeng\"\nFRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "FRACTALGENG",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "FRACTALGENG = \"fractalgeng\"\nFAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "FAN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "FAN = \"fan\"\nBIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BIGFAN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BIGFAN = \"bigfan\"\nTRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "TRIAD",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "TRIAD = \"triad\"\nBIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BIGTRIAD",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BIGTRIAD = \"bigtriad\"\nMINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MINIHOOP",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "MINIHOOP = \"minihoop\"\nBIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BIGHOOP",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BIGHOOP = \"bighoop\"\nDOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DOUBLESTAR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DOUBLESTAR = \"doublestar\"\nBIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BIGDOUBLESTAR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BIGDOUBLESTAR = \"bigdoublestar\"\nQUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "QUIAD",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "QUIAD = \"quiad\"\nSWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SWORD",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SWORD = \"sword\"\nGUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GUITAR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GUITAR = \"guitar\"\nUKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "UKULELE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "UKULELE = \"ukulele\"\nCHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CHICKEN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CHICKEN = \"chicken\"\nMAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MAIN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "MAIN = \"main\"\nOPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "OPTION",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "OPTION = \"option\"\nBEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BEAT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BEAT = \"beat\"\nSTART_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "START_POS_BEAT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "START_POS_BEAT = \"start_pos_beat\"\nCODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CODEX_PICTOGRAPH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CODEX_PICTOGRAPH = \"codex_pictograph\"\nDIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DIAMOND",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DIAMOND = \"diamond\"\nBOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BOX",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BOX = \"box\"\nALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ALPHA",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ALPHA = \"alpha\"\nBETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BETA",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BETA = \"beta\"\nGAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA = \"gamma\"\nALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ALPHA1",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ALPHA1 = \"alpha1\"\nALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ALPHA2",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ALPHA2 = \"alpha2\"\nALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ALPHA3",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ALPHA3 = \"alpha3\"\nALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ALPHA4",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ALPHA4 = \"alpha4\"\nBETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BETA1",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BETA1 = \"beta1\"\nBETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BETA2",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BETA2 = \"beta2\"\nBETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BETA3",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BETA3 = \"beta3\"\nBETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BETA4",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BETA4 = \"beta4\"\nGAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA1",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA1 = \"gamma1\"\nGAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA2",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA2 = \"gamma2\"\nGAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA3",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA3 = \"gamma3\"\nGAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA4",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA4 = \"gamma4\"\nGAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA5",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA5 = \"gamma5\"\nGAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA6",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA6 = \"gamma6\"\nGAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA7",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA7 = \"gamma7\"\nGAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GAMMA8",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GAMMA8 = \"gamma8\"\nPRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "PRO_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "PRO_TURNS = \"pro_turns\"\nANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ANTI_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ANTI_TURNS = \"anti_turns\"\nDASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DASH_TURNS = \"dash_turns\"\nSTATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC_TURNS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "STATIC_TURNS = \"static_turns\"\nType1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type1",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "Type1 = \"Type1\"\nType2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type2",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "Type2 = \"Type2\"\nType3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type3",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "Type3 = \"Type3\"\nType4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type4",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "Type4 = \"Type4\"\nType5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type5",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "Type5 = \"Type5\"\nType6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Type6",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "Type6 = \"Type6\"\nDUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DUAL_SHIFT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DUAL_SHIFT = \"dual-shift\"\nSHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SHIFT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SHIFT = \"shift\"\nCROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CROSS_SHIFT",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CROSS_SHIFT = \"cross-shift\"\nDASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DASH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DASH = \"dash\"\nDUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DUAL_DASH",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DUAL_DASH = \"dual-dash\"\nSTATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "STATIC",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "STATIC = \"static\"\n### ICONS ###\nCLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK_DIR",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CLOCK_DIR = ICON_DIR + \"clock/\"\nCLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCKWISE_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CLOCKWISE_ICON = CLOCK_DIR + \"clockwise.png\"\nCOUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "COUNTER_CLOCKWISE_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "COUNTER_CLOCKWISE_ICON = CLOCK_DIR + \"counter_clockwise.png\"\nEMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "EMPTY_CLOCK_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "EMPTY_CLOCK_ICON = CLOCK_DIR + \"empty_clock.png\"\nCLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "CLOCK_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "CLOCK_ICON = CLOCK_DIR + \"clock.png\"\nSWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SWAP_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SWAP_ICON = \"swap.png\"\nMIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "MIRROR_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "MIRROR_ICON = \"mirror.png\"\nDECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DECREMENT_TURNS_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DECREMENT_TURNS_ICON = \"subtract_turns.png\"\nINCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "INCREMENT_TURNS_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "INCREMENT_TURNS_ICON = \"add_turns.png\"\nSWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,\n    \"counter_clockwise\": COUNTER_CLOCKWISE_ICON,",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "SWAP_COLORS_ICON",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "SWAP_COLORS_ICON = \"swap_colors.png\"\nICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,\n    \"counter_clockwise\": COUNTER_CLOCKWISE_ICON,\n}",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "ICON_PATHS",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "ICON_PATHS = {\n    \"swap_icon\": ICON_DIR + SWAP_ICON,\n    \"swap_start_end\": ICON_DIR + MIRROR_ICON,\n    \"subtract_turns\": ICON_DIR + DECREMENT_TURNS_ICON,\n    \"add_turns\": ICON_DIR + INCREMENT_TURNS_ICON,\n    \"swap_colors\": ICON_DIR + SWAP_COLORS_ICON,\n    \"clockwise\": CLOCKWISE_ICON,\n    \"counter_clockwise\": COUNTER_CLOCKWISE_ICON,\n}\nDISTANCE = 40",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "DISTANCE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "DISTANCE = 40",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LetterType",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class LetterType(Enum):\n    Type1 = (\n        [\n            \"A\",\n            \"B\",\n            \"C\",\n            \"D\",\n            \"E\",\n            \"F\",\n            \"G\",",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "MotionCombinationType",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class MotionCombinationType(Enum):\n    DUAL_SHIFT = \"Dual-Shift\"\n    SHIFT = \"Shift\"\n    CROSS_SHIFT = \"Cross-Shift\"\n    DASH = \"Dash\"\n    DUAL_DASH = \"Dual-Dash\"\n    STATIC = \"Static\"\nclass ArrowAttribute(Enum):\n    COLOR = \"color\"\n    LOC = \"loc\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "ArrowAttribute",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class ArrowAttribute(Enum):\n    COLOR = \"color\"\n    LOC = \"loc\"\n    MOTION_TYPE = \"motion_type\"\n    TURNS = \"turns\"\nclass PropAttribute(Enum):\n    COLOR = \"color\"\n    PROP_TYPE = \"prop_type\"\n    LOC = \"loc\"\n    AXIS = \"axis\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "PropAttribute",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class PropAttribute(Enum):\n    COLOR = \"color\"\n    PROP_TYPE = \"prop_type\"\n    LOC = \"loc\"\n    AXIS = \"axis\"\n    ORI = \"ori\"\nclass MotionAttribute(Enum):\n    COLOR = \"color\"\n    ARROW = \"arrow\"\n    PROP = \"prop\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "MotionAttribute",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class MotionAttribute(Enum):\n    COLOR = \"color\"\n    ARROW = \"arrow\"\n    PROP = \"prop\"\n    MOTION_TYPE = \"motion_type\"\n    PROP_ROT_DIR = \"prop_rot_dir\"\n    TURNS = \"turns\"\n    START_LOC = \"start_loc\"\n    START_ORI = \"start_ori\"\n    END_LOC = \"end_loc\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "OrientationCombination",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class OrientationCombination(Enum):\n    IN_VS_IN = \"in_vs_in\"\n    IN_VS_CLOCK_IN = \"in_vs_clock-in\"\n    IN_VS_CLOCK = \"in_vs_clock\"\n    IN_VS_CLOCK_OUT = \"in_vs_clock-out\"\n    IN_VS_OUT = \"in_vs_out\"\n    IN_VS_COUNTER_OUT = \"in_vs_counter-out\"\n    IN_VS_COUNTER = \"in_vs_counter\"\n    IN_VS_COUNTER_IN = \"in_vs_counter-in\"\n    CLOCK_IN_VS_CLOCK_IN = \"clock-in_vs_clock-in\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "SpecificStartEndPositionsDicts",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class SpecificStartEndPositionsDicts(TypedDict):\n    start_pos: SpecificPositions\n    end_pos: SpecificPositions\n### MOTION ATTRIBUTES ###\nclass MotionAttributesDicts(TypedDict):\n    color: Colors\n    motion_type: MotionTypes\n    prop_rot_dir: PropRotDirs\n    loc: Locations\n    turns: Turns",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "MotionAttributesDicts",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class MotionAttributesDicts(TypedDict):\n    color: Colors\n    motion_type: MotionTypes\n    prop_rot_dir: PropRotDirs\n    loc: Locations\n    turns: Turns\n    start_loc: Locations\n    start_ori: Orientations\n    end_loc: Locations\n    end_ori: Orientations",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "ArrowAttributesDicts",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class ArrowAttributesDicts(TypedDict):\n    color: Colors\n    motion_type: MotionTypes\n    location: Locations\n    turns: Turns\nclass PropAttributesDicts(TypedDict):\n    color: Colors\n    prop_type: PropTypes\n    loc: Locations\n    ori: Orientations",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "PropAttributesDicts",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class PropAttributesDicts(TypedDict):\n    color: Colors\n    prop_type: PropTypes\n    loc: Locations\n    ori: Orientations\n### LETTER GROUPS ###\nclass MotionTypeCombination(Enum):\n    PRO_VS_PRO = \"pro_vs_pro\"\n    ANTI_VS_ANTI = \"anti_vs_anti\"\n    STATIC_VS_STATIC = \"static_vs_static\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "MotionTypeCombination",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class MotionTypeCombination(Enum):\n    PRO_VS_PRO = \"pro_vs_pro\"\n    ANTI_VS_ANTI = \"anti_vs_anti\"\n    STATIC_VS_STATIC = \"static_vs_static\"\n    PRO_VS_ANTI = \"pro_vs_anti\"\n    STATIC_VS_PRO = \"static_vs_pro\"\n    STATIC_VS_ANTI = \"static_vs_anti\"\n    DASH_VS_PRO = \"dash_vs_pro\"\n    DASH_VS_ANTI = \"dash_vs_anti\"\n    DASH_VS_STATIC = \"dash_vs_static\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "MotionTypeLetterGroups",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class MotionTypeLetterGroups(Enum):\n    PRO_VS_PRO = \"ADGJMPS\"\n    ANTI_VS_ANTI = \"BEHKNQT\"\n    STATIC_VS_STATIC = \"αβΓ\"\n    PRO_VS_ANTI = \"CFILORUV\"\n    STATIC_VS_PRO = \"WYΣθ\"\n    STATIC_VS_ANTI = \"XZΔΩ\"\n    DASH_VS_PRO = \"W-Y-Σ-θ-\"\n    DASH_VS_ANTI = \"X-Z-Δ-Ω-\"\n    DASH_VS_STATIC = \"ΦΨΛ\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "VTGHandpathMode",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class VTGHandpathMode(Enum):\n    TOG_SAME = \"TS\"\n    TOG_OPPOSITE = \"TO\"\n    SPLIT_SAME = \"SS\"\n    SPLIT_OPPOSITE = \"SO\"\n    QUARTER_TIME_SAME = \"QTS\"\n    QUARTER_TIME_OPPOSITE = \"QTO\"\nclass TKAHandpathMode(Enum):\n    ALPHA_TO_ALPHA = \"α→α\"  # ABC\n    BETA_TO_ALPHA = \"β→α\"  # DEF",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "TKAHandpathMode",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class TKAHandpathMode(Enum):\n    ALPHA_TO_ALPHA = \"α→α\"  # ABC\n    BETA_TO_ALPHA = \"β→α\"  # DEF\n    BETA_TO_BETA = \"β→β\"  # GHI\n    ALPHA_TO_BETA = \"α→β\"  # JKL\n    GAMMA_TO_GAMMA_OPP_ANTIPARALLEL = \"Γ→Γ_opp_antiparallel\"  # MNO\n    GAMMA_TO_GAMMA_OPP_PARALLEL = \"Γ→Γ_opp_parallel\"  # PQR\n    GAMMA_TO_GAMMA_SAME_DIR = \"Γ→Γ_same\"  # STUV\n    GAMMACLOCK_TO_GAMMACLOCK = \"Γclock→Γclock\"\n    GAMMACLOCK_TO_GAMMACOUNTER = \"Γclock→Γcounter\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "PictographAttributesDict",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class PictographAttributesDict(TypedDict):\n    letter: all_letters\n    start_pos: SpecificPositions\n    end_pos: SpecificPositions\n    blue_motion_type: MotionTypes\n    blue_prop_rot_dir: PropRotDirs\n    blue_start_loc: Locations\n    blue_end_loc: Locations\n    blue_turns: Turns\n    blue_start_ori: Orientations",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "PictographType",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class PictographType(Enum):\n    MAIN = \"main\"\n    OPTION = \"option\"\n    BEAT = \"beat\"\n    START_POS = \"start_pos\"\n    CODEX_PICTOGRAPH = \"codex_pictograph\"\nclass Mode(Enum):\n    TOG_SAME = \"TS\"\n    TOG_OPPOSITE = \"TO\"\n    SPLIT_SAME = \"SS\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "Mode",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class Mode(Enum):\n    TOG_SAME = \"TS\"\n    TOG_OPPOSITE = \"TO\"\n    SPLIT_SAME = \"SS\"\n    SPLIT_OPPOSITE = \"SO\"\n    QUARTER_TIME_SAME = \"QTS\"\n    QUARTER_TIME_OPPOSITE = \"QTO\"\nclass MotionTypeCombination(Enum):\n    PRO_VS_PRO = \"pro_vs_pro\"\n    ANTI_VS_ANTI = \"anti_vs_anti\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "MotionTypeCombination",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class MotionTypeCombination(Enum):\n    PRO_VS_PRO = \"pro_vs_pro\"\n    ANTI_VS_ANTI = \"anti_vs_anti\"\n    STATIC_VS_STATIC = \"static_vs_static\"\n    PRO_VS_ANTI = \"pro_vs_anti\"\n    STATIC_VS_PRO = \"static_vs_pro\"\n    STATIC_VS_ANTI = \"static_vs_anti\"\n    DASH_VS_PRO = \"dash_vs_pro\"\n    DASH_VS_ANTI = \"dash_vs_anti\"\n    DASH_VS_STATIC = \"dash_vs_static\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "LetterGroupsByMotionType",
        "kind": 6,
        "importPath": "Enums",
        "description": "Enums",
        "peekOfCode": "class LetterGroupsByMotionType(Enum):\n    ADGJMPS = \"ADGJMPS\"\n    BEHKNQT = \"BEHKNQT\"\n    αβΓ = \"αβΓ\"\n    CFILORUV = \"CFILORUV\"\n    WYΣθ = \"WYΣθ\"\n    XZΔΩ = \"XZΔΩ\"\n    X_Z_Δ_Ω_ = \"X-Z-Δ-Ω-\"\n    ΦΨΛ = \"ΦΨΛ\"\n    Φ_Ψ_Λ_ = \"Φ-Ψ-Λ-\"",
        "detail": "Enums",
        "documentation": {}
    },
    {
        "label": "MainWindow",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class MainWindow(QMainWindow):\n    def __init__(self, profiler: Profiler) -> None:\n        super().__init__()\n        self.profiler = profiler\n        self.main_widget = MainWidget(self)\n        self.settings_manager = SettingsManager(self)\n        self.window_manager = WindowGeometryManager(self)\n        self.setCentralWidget(self.main_widget)\n        self.setWindowTitle(\"Sequence Constructor\")\n        self.menu_bar = MainWindowMenuBar(self.main_widget)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main() -> None:\n    app = QApplication(sys.argv)\n    profiler = Profiler()\n    main_window = MainWindow(profiler)\n    exit_code = main_window.exec_with_profiling(app)\n    root_directory = os.path.dirname(os.path.abspath(__file__))\n    profiler.write_profiling_stats_to_file(\"main_profiling_stats.txt\", root_directory)\n    sys.exit(exit_code)\nif __name__ == \"__main__\":\n    main()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Profiler",
        "kind": 6,
        "importPath": "profiler",
        "description": "profiler",
        "peekOfCode": "class Profiler:\n    def __init__(self, exclude_modules: Optional[list[str]] = None) -> None:\n        self.profiler: cProfile.Profile = cProfile.Profile()\n        self.exclude_modules = exclude_modules or [\"PyQt6\", \"__main__\"]\n    def enable(self) -> None:\n        self.profiler.enable()\n    def disable(self) -> None:\n        self.profiler.disable()\n    def runcall(self, func: Callable[..., Any]) -> Any:\n        return self.profiler.runcall(self.profile_filter(func))",
        "detail": "profiler",
        "documentation": {}
    },
    {
        "label": "SettingsManager",
        "kind": 6,
        "importPath": "settings_manager",
        "description": "settings_manager",
        "peekOfCode": "class SettingsManager:\n    MAX_COLUMN_COUNT = 8\n    MIN_COLUMN_COUNT = 3\n    def __init__(self, main_window: \"MainWindow\", settings_file=\"user_settings.json\"):\n        self.settings_file = settings_file\n        self.main_window = main_window\n        self.settings = self.load_settings()\n        self.apply_settings()\n    def load_settings(self) -> dict:\n        if os.path.exists(self.settings_file):",
        "detail": "settings_manager",
        "documentation": {}
    }
]